[{"title":"monkey压力测试","url":"http://yoursite.com/2019/03/11/monkey压力测试/","content":"<p>入门级知识，不过长时间不用命令容易忘，简单做个记录</p>\n<h2 id=\"命令格式\"><a href=\"#命令格式\" class=\"headerlink\" title=\"命令格式\"></a>命令格式</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">adb shell monkey [-p 包名] [其他参数] [-v] 测试次数 [&gt; <span class=\"regexp\">/user/</span>…/result.txt]（注：‘&gt; <span class=\"regexp\">/user/</span>…/result.txt’可将结果打印到文本中）</span><br></pre></td></tr></table></figure>\n<p>举例:<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">adb shell monkey -p com.variflight.highspeed -s <span class=\"number\">3000</span> --ignore-crashes --ignore-timeouts -vv <span class=\"number\">6000</span> &gt; <span class=\"regexp\">/Users/</span>robinwang/Downloads/monkey.txt</span><br></pre></td></tr></table></figure></p>\n<p>此命令翻译为自然语言是：monkey作用于此包，产生时间序列的种子序列值定为3000，运行中忽略程序崩溃、超时，同时监视本地程序崩溃，日志的详细信息级别为二级，产生6000个点击事件，相关日志会保存在所写路径中，搜索关键字‘crash’或‘anr’即可查看发生错误的部分。</p>\n<h2 id=\"参数\"><a href=\"#参数\" class=\"headerlink\" title=\"参数\"></a>参数</h2><p>monkey -help：可查看参数说明列表。参数选项有：<br>（1）-p 包名1 -p 包名2 … ：指定一或多个待测试的包，若不指定则测试中可打开任意app；<br>（2）-v:指定打印日志的详细程度，有‘-v’,’-v -v’,’-v -v -v’三个级别；<br>（3）-s seed值：在测试中，虽然用户操作序列（每次操作按一定的顺序所组成的一系列操作）是随机生成的，但只要对同一个包指定相同的Seed值，就能使测试事件相同，可用于排错。所以也说这个操作序列是伪随机的。若不添加此参数，结果中会自动生成seed值；<br>（4）–-throttle 毫秒数：指定操作（即事件）间的时延，单位是毫秒；<br>（5）–-ignore-crashes：使得操作序列可以全部执行完，而不会在发生崩溃时就终止程序进程；<br>（6）–ignore-timeouts：使得操作序列可以全部执行完，而不会在发生ANR(Android Not Responding)时就终止程序进程；<br>（7）–-ignore-security-exceptions：使得操作序列可以全部执行完，而不会在发生许可错误时（如证书许可，网络许可等）时就终止程序进程；<br>（8）–-kill-process-after-error：使得当应用程序发生错误时停止运行并保持在当前状态，即仅是静止在发生错误时的状态，而不是结束该应用程序的进程；<br>（9）–-monitor-native-crashes：指定监视并报告应用程序发生崩溃的本地代码；<br>（10）–-pct-事件1 事件百分比1 -pct-事件2 事件百分比2 … ：用于指定某类事件数目占总事件数目的百分比；<br>其中所指定事件参数选项可为：<br>-flip(点击事件)<br>-touch(触摸事件是一个down-up事件)<br>-motion(动作事件由一个down事件、一系列的伪随机事件和一个up事件组成)<br>-trackball(轨迹事件，在屏幕上进行随机拖动)<br>-nav(基本导航事件，如上下左右键)<br>-majornav（主要导航事件，通常引发图形界面中的动作）<br>-syskeys(系统按键事件指如系统按键Home、Back、Start Call、End Call及volumeControl)<br>-appswitch(启动activity事件)<br>-anyevent(其它类型事件)<br>注意，各事件类型的百分比总数不能超过100。</p>\n<h2 id=\"分析\"><a href=\"#分析\" class=\"headerlink\" title=\"分析\"></a>分析</h2><p>一般我们可以一次发送5万次随机事件的请求，每个请求之间的间隔为150毫秒，测试大约会进行40min，完成以后就可以查看日志。<br>日志中可能的错误：</p>\n<p>程序异常退出，uncausedexception （ctrl+f搜索‘Fatal’）<br>程序强制关闭，ForceClosed (简称FC) （同上）<br>程序无响应，ApplicationNo Response（ctrl+f搜索‘ANR ’，加空格是为了屏蔽掉一些无效信息)<br>手动生成。</p>\n<h2 id=\"更多\"><a href=\"#更多\" class=\"headerlink\" title=\"更多\"></a>更多</h2><p>关于monkey压力测试，有同学了解的更多，想了解更详细可以查阅这篇文章<a href=\"https://blog.csdn.net/sinat_35762047/article/details/75137436\" target=\"_blank\" rel=\"noopener\">Android压力测试快速入门教程</a></p>\n<blockquote>\n<p>转载请指明出处RobinBlog：<a href=\"http://robinx.net/2019/03/11/monkey压力测试/\" target=\"_blank\" rel=\"noopener\">http://robinx.net/2019/03/11/monkey压力测试/</a></p>\n</blockquote>\n","categories":["Android"],"tags":["测试","monkey"]},{"title":"mac 完整删除Android Studio","url":"http://yoursite.com/2019/02/13/mac-完整删除Android-Studio/","content":"<h2 id=\"引言\"><a href=\"#引言\" class=\"headerlink\" title=\"引言\"></a>引言</h2><p>mac pro AndroidStudio升级到3.3之后一开始没多大问题，刚才卡了一次，直接把笔记本剩余的180G撑满，导致机器卡死，关机关不了。强制关机后，开机超级慢，应该是执行了些回滚的操作，等了好长时间开机之后，桌面背景也被初始化了。内存还是撑满的状态，系统文件内存一片黄。无奈之下只能彻底删除AndroidStudio来解决。以下操作也是从网上找到的，亲测有效，清理完后，内存恢复正常状态。</p>\n<h2 id=\"操作\"><a href=\"#操作\" class=\"headerlink\" title=\"操作\"></a>操作</h2><h3 id=\"第一步-复制粘贴-复制到命令行里面-直接回车就OK\"><a href=\"#第一步-复制粘贴-复制到命令行里面-直接回车就OK\" class=\"headerlink\" title=\"第一步: 复制粘贴!! 复制到命令行里面,直接回车就OK\"></a>第一步: 复制粘贴!! 复制到命令行里面,直接回车就OK</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rm -Rf /Applications/Android\\ Studio.app</span><br><span class=\"line\">rm -Rf ~/Library/Preferences/AndroidStudio*</span><br><span class=\"line\">rm ~/Library/Preferences/com.google.android.studio.plist</span><br><span class=\"line\">rm -Rf ~/Library/Application\\ Support/AndroidStudio*</span><br><span class=\"line\">rm -Rf ~/Library/Logs/AndroidStudio*</span><br><span class=\"line\">rm -Rf ~/Library/Caches/AndroidStudio*</span><br></pre></td></tr></table></figure>\n<h3 id=\"第二步-复制粘贴-复制到命令行里面-直接回车就OK\"><a href=\"#第二步-复制粘贴-复制到命令行里面-直接回车就OK\" class=\"headerlink\" title=\"第二步: 复制粘贴!! 复制到命令行里面,直接回车就OK\"></a>第二步: 复制粘贴!! 复制到命令行里面,直接回车就OK</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rm -Rf ~/AndroidStudioProjects</span><br></pre></td></tr></table></figure>\n<h3 id=\"第三步-复制粘贴-复制到命令行里面-直接回车就OK\"><a href=\"#第三步-复制粘贴-复制到命令行里面-直接回车就OK\" class=\"headerlink\" title=\"第三步: 复制粘贴!! 复制到命令行里面,直接回车就OK\"></a>第三步: 复制粘贴!! 复制到命令行里面,直接回车就OK</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rm -Rf ~/.gradle</span><br></pre></td></tr></table></figure>\n<h3 id=\"第四步-复制粘贴-复制到命令行里面-直接回车就OK\"><a href=\"#第四步-复制粘贴-复制到命令行里面-直接回车就OK\" class=\"headerlink\" title=\"第四步: 复制粘贴!! 复制到命令行里面,直接回车就OK\"></a>第四步: 复制粘贴!! 复制到命令行里面,直接回车就OK</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rm -Rf ~/.android</span><br></pre></td></tr></table></figure>\n<h3 id=\"第五步-复制粘贴-复制到命令行里面-直接回车就OK\"><a href=\"#第五步-复制粘贴-复制到命令行里面-直接回车就OK\" class=\"headerlink\" title=\"第五步: 复制粘贴!! 复制到命令行里面,直接回车就OK\"></a>第五步: 复制粘贴!! 复制到命令行里面,直接回车就OK</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rm -Rf ~/Library/Android*</span><br></pre></td></tr></table></figure>\n<p>做完这五步,关闭你的终端,全部完毕。此时内存已经恢复，可以重新下载安装AndroidStudio</p>\n<blockquote>\n<p>转载请指明出处RobinBlog：<a href=\"http://robinx.net/2019/02/13/mac-完整删除Android-Studio/\" target=\"_blank\" rel=\"noopener\">http://robinx.net/2019/02/13/mac-完整删除Android-Studio/</a></p>\n</blockquote>\n","categories":["编译器 Mac"],"tags":["AndroidStudio"]},{"title":"CenterVerticalTextSpan","url":"http://yoursite.com/2018/11/12/CenterVerticalTextSpan/","content":"<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 使TextView中不同大小字体垂直居中</span></span><br><span class=\"line\"><span class=\"comment\"> * Created by Robin on 2018/11/8.</span></span><br><span class=\"line\"><span class=\"comment\"> * Email: robinxdroid@gmail.com</span></span><br><span class=\"line\"><span class=\"comment\"> * Blog: http://robinx.net/</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">CenterVerticalTextSpan</span> <span class=\"keyword\">extends</span> <span class=\"title\">ReplacementSpan</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> fontSizePx;    <span class=\"comment\">//字体大小px</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">CenterVerticalTextSpan</span><span class=\"params\">(<span class=\"keyword\">int</span> fontSizePx)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.fontSizePx = fontSizePx;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">getSize</span><span class=\"params\">(Paint paint, CharSequence text, <span class=\"keyword\">int</span> start, <span class=\"keyword\">int</span> end, Paint.FontMetricsInt fm)</span> </span>&#123;</span><br><span class=\"line\">        text = text.subSequence(start, end);</span><br><span class=\"line\">        Paint p = getCustomTextPaint(paint);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> (<span class=\"keyword\">int</span>) p.measureText(text.toString());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">draw</span><span class=\"params\">(Canvas canvas, CharSequence text, <span class=\"keyword\">int</span> start, <span class=\"keyword\">int</span> end, <span class=\"keyword\">float</span> x, <span class=\"keyword\">int</span> top, <span class=\"keyword\">int</span> y, <span class=\"keyword\">int</span> bottom, Paint paint)</span> </span>&#123;</span><br><span class=\"line\">        text = text.subSequence(start, end);</span><br><span class=\"line\">        Paint p = getCustomTextPaint(paint);</span><br><span class=\"line\">        Paint.FontMetricsInt fm = p.getFontMetricsInt();</span><br><span class=\"line\">        canvas.drawText(text.toString(), x, y - ((y + fm.descent + y + fm.ascent) / <span class=\"number\">2</span> - (bottom + top) / <span class=\"number\">2</span>), p);    <span class=\"comment\">//此处重新计算y坐标，使字体居中</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> TextPaint <span class=\"title\">getCustomTextPaint</span><span class=\"params\">(Paint srcPaint)</span> </span>&#123;</span><br><span class=\"line\">        TextPaint paint = <span class=\"keyword\">new</span> TextPaint(srcPaint);</span><br><span class=\"line\">        paint.setTextSize(fontSizePx);   <span class=\"comment\">//设定字体大小, sp转换为px</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> paint;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>转载请指明出处RobinBlog：<a href=\"http://robinx.net/2018/11/12/CenterVerticalTextSpan/\" target=\"_blank\" rel=\"noopener\">http://robinx.net/2018/11/12/CenterVerticalTextSpan/</a></p>\n</blockquote>\n","categories":["Android"],"tags":["TextView","Span"]},{"title":"TextView垂直方向位置Span","url":"http://yoursite.com/2018/08/30/TextView垂直方向位置Span/","content":"<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">VerticalAlignmentSpan</span> <span class=\"keyword\">extends</span> <span class=\"title\">MetricAffectingSpan</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">double</span> ratio = <span class=\"number\">0.5</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">VerticalAlignmentSpan</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">VerticalAlignmentSpan</span><span class=\"params\">(<span class=\"keyword\">double</span> ratio)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.ratio = ratio;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">updateDrawState</span><span class=\"params\">(TextPaint paint)</span> </span>&#123;</span><br><span class=\"line\">        paint.baselineShift += (<span class=\"keyword\">int</span>) (paint.ascent() * ratio);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">updateMeasureState</span><span class=\"params\">(TextPaint paint)</span> </span>&#123;</span><br><span class=\"line\">        paint.baselineShift += (<span class=\"keyword\">int</span>) (paint.ascent() * ratio);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>转载请指明出处RobinBlog：<a href=\"http://robinx.net/2018/08/30/TextView垂直方向位置Span/\" target=\"_blank\" rel=\"noopener\">http://robinx.net/2018/08/30/TextView垂直方向位置Span/</a></p>\n</blockquote>\n","categories":["Android"],"tags":["TextView","Span"]},{"title":"react-native常用命令","url":"http://yoursite.com/2018/03/22/react-native常用命令/","content":"<ul>\n<li>设定手机端口号与react native服务连接：<code>adb reverse tcp:8081 tcp:8081</code></li>\n<li>打包js bundle（路径自己替换）:<code>react-native bundle --platform android --dev false --entry-file index.js --bundle-output android/com/your-company-name/app-package-name/src/main/assets/index.android.bundle --assets-dest android/com/your-company-name/app-package-name/src/main/res/</code><pre><code>（1）--platform：平台&lt;br&gt;\n（2） --dev：开发模式&lt;br&gt;\n（3） --entry-file：条目文件&lt;br&gt;\n（4）--bundle-output：bundle文件生成的目录&lt;br&gt;\n（5）--assets-dest：资源文件生成的目录&lt;br&gt;\n</code></pre></li>\n<li>打包js bundle（已有项目集成rn,路径自己替换）：<code>react-native bundle --platform android --dev false --entry-file index.js --bundle-output ../app/src/main/assets/index.android.bundle --assets-dest ../app/src/main/res</code></li>\n<li>启动react-native服务：<code>npm start</code></li>\n<li>生成package.json：<code>npm init</code></li>\n<li>安装node modules：<code>npm install</code></li>\n<li>查看当前reactNative版本：<code>react-native --version</code>                                  </li>\n<li>更新全局的reactNative到最新版本：<code>sudo npm update -g react-native-cli</code>         </li>\n<li>查看服务器端的reactNative的各版本信息：<code>npm info react-native</code>        </li>\n<li>根据package.json配置的RN版本,更新RN环境代码：<code>react-native upgrade</code>                     </li>\n<li>运行Android工程：<code>react-native run-android</code></li>\n<li>运行IOS工程：<code>react-native run-ios</code></li>\n<li>初始化一个工程、下载React Native的所有源代码和依赖包：<code>react-native init 工程名</code>                 </li>\n<li>项目降级或升级到指定版本,记得react-native upgrade更新一下项目依赖等：<code>npm install --save react-native@0.18</code>          </li>\n<li>安装某个lib到项目中：<code>npm install react-native-storage --save</code></li>\n</ul>\n<hr>\n<blockquote>\n<p>转载请指明出处RobinBlog：<a href=\"http://robinx.net/2018/03/22/react-native常用命令/\" target=\"_blank\" rel=\"noopener\">http://robinx.net/2018/03/22/react-native常用命令/</a>    </p>\n</blockquote>\n","categories":["Android"],"tags":["Android","react-native"]},{"title":"Android中的路径记录","url":"http://yoursite.com/2018/02/02/Android中的路径记录/","content":"<p><code>Environment.getDataDirectory().getPath()=/data</code><br><code>Environment.getDownloadCacheDirectory().getPath()=/cache</code><br><code>Environment.getExternalStorageDirectory()=/storage/emulated/0</code><br><code>Environment.getRootDirectory().getPath()=/system</code><br><br>//警报的铃声<br><code>Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_ALARMS).getPath()=/storage/emulated/0/Alarms</code><br><br>//相机拍摄的图片和视频保存的位置<br><code>Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_DCIM).getPath()=/storage/emulated/0/DCIM</code><br><br>//下载文件保存的位置<br><code>Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_DOWNLOADS).getPath()=/storage/emulated/0/Download</code><br><br>//电影保存的位置<br><code>Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_MOVIES).getPath()=/storage/emulated/0/Movies</code><br><br>//音乐保存的位置<br><code>Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_MUSIC).getPath()=/storage/emulated/0/Music</code><br><br>//通知音保存的位置<br><code>Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_NOTIFICATIONS).getPath()=/storage/emulated/0/Notifications</code><br><br>//下载的图片保存的位置<br><code>Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_PICTURES).getPath()=/storage/emulated/0/Pictures</code><br><br>//用于保存podcast（博客）的音频文件<br><code>Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_PODCASTS).getPath()=/storage/emulated/0/Podcasts</code><br><br>//保存铃声的位置<br><code>Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_RINGTONES).getPath()=/storage/emulated/0/Ringtones</code><br><code>context.getCacheDir().getPath()=/data/data/包名/cache</code><br><code>context.getFilesDir().getPath()=/data/data/包名/files</code><br><code>context.getObbDir().getPath()=/storage/emulated/0/Android/obb/包名</code><br><code>context.getExternalCacheDir().getPath()=/storage/emulated/0/Android/data/包名/cache</code><br><code>context.getExternalFilesDir(Environment.DIRECTORY_ALARMS).getPath()=/storage/emulated/0/Android/data/包名/files/Alarms</code><br><code>context.getExternalFilesDir(Environment.DIRECTORY_DCIM).getPath()=/storage/emulated/0/Android/data/包名/files/DCIM</code><br><code>context.getExternalFilesDir(Environment.DIRECTORY_DOWNLOADS).getPath()=/storage/emulated/0/Android/data/包名/files/Download</code><br><code>context.getExternalFilesDir(Environment.DIRECTORY_MOVIES).getPath()=/storage/emulated/0/Android/data/包名/files/Movies</code><br><code>context.getExternalFilesDir(Environment.DIRECTORY_MUSIC).getPath()=/storage/emulated/0/Android/data/包名/files/Music</code><br><code>context.getExternalFilesDir(Environment.DIRECTORY_NOTIFICATIONS).getPath()=/storage/emulated/0/Android/data/包名/files/Notifications</code><br><code>context.getExternalFilesDir(Environment.DIRECTORY_PICTURES).getPath()=/storage/emulated/0/Android/data/包名/files/Pictures</code><br><code>context.getExternalFilesDir(Environment.DIRECTORY_PODCASTS).getPath()=/storage/emulated/0/Android/data/包名/files/Podcasts</code><br><code>context.getExternalFilesDir(Environment.DIRECTORY_RINGTONES).getPath()=/storage/emulated/0/Android/data/包名/files/Ringtones</code><br><code>context.getDatabasePath(&quot;XXX&quot;).getPath()=/data/data/包名/databases/XXX</code><br><code>context.getPackageCodePath()=/data/app/包名-2/base.apk</code><br><code>context.getPackageResourcePath()=/data/app/包名-2/base.apk</code></p>\n<hr>\n<blockquote>\n<p>转载请指明出处RobinBlog：<a href=\"http://robinx.net/2018/02/02/Android中的路径记录/\" target=\"_blank\" rel=\"noopener\">http://robinx.net/2018/02/02/Android中的路径记录/</a></p>\n</blockquote>\n","categories":["Android"],"tags":["Android","Environment","Path"]},{"title":"编译libjpeg-turbo","url":"http://yoursite.com/2018/01/30/编译libjpeg-turbo/","content":"<h3 id=\"引言\"><a href=\"#引言\" class=\"headerlink\" title=\"引言\"></a>引言</h3><p>Android使用java语言开发，虽然java越来越好，但是涉及到性能方面依然都是普遍的C/C++。本次我们说说Android中图片压缩，关于Android中的图片压缩使用场景太多了，最简单的从相册选择一张图片显示到屏幕，肯定要经过压缩，压缩方式有多种，java层就有质量压缩，尺寸压缩，采样压缩，Mtrix压缩等。一定程度上都能满足需求。追求极致性能的那就要考虑C层的压缩了，<code>LibJpeg</code>是图片处理方面很出名的库，也衍生了<code>LibJpegTurbo</code>库，用于Android平台。网上搜索基本上都能搜到相关的编译好的so文件，基本上都是差不多的文章，so文件只有<code>armeabi</code>,<code>armeabi-v7a</code>两个架构，想找x86版本的，地翻过来都没有找到。咋办，自己编呗。。</p>\n<h3 id=\"源码\"><a href=\"#源码\" class=\"headerlink\" title=\"源码\"></a>源码</h3><p><a href=\"https://libjpeg-turbo.org/\" target=\"_blank\" rel=\"noopener\">https://libjpeg-turbo.org/</a></p>\n<h3 id=\"编译环境搭建\"><a href=\"#编译环境搭建\" class=\"headerlink\" title=\"编译环境搭建\"></a>编译环境搭建</h3><h4 id=\"系统平台\"><a href=\"#系统平台\" class=\"headerlink\" title=\"系统平台\"></a>系统平台</h4><p><code>Linux</code><br>不满足条件的安装VMWare虚拟机，本人也是安装虚拟机来搭建平台，安装乌班图系统即可</p>\n<p><img src=\"https://github.com/robinxdroid/BlogRes/blob/master/images/2018-1-30/linux-ubuntu-sys-info.png?raw=true\" alt=\"\"></p>\n<h4 id=\"编译准备\"><a href=\"#编译准备\" class=\"headerlink\" title=\"编译准备\"></a>编译准备</h4><h5 id=\"NDK\"><a href=\"#NDK\" class=\"headerlink\" title=\"NDK\"></a>NDK</h5><p>编译so文件自然少不了NDK，一定要Linux平台的NDK，下载地址<a href=\"https://dl.google.com/android/repository/android-ndk-r15c-linux-x86_64.zip?utm_source=androiddevtools&amp;utm_medium=website\" target=\"_blank\" rel=\"noopener\">android-ndk-r15c-linux-x86_64.zip</a></p>\n<h5 id=\"必要软件\"><a href=\"#必要软件\" class=\"headerlink\" title=\"必要软件\"></a>必要软件</h5><ol>\n<li><a href=\"http://ftp.gnu.org/gnu/m4/\" target=\"_blank\" rel=\"noopener\">m4</a> (下载最新的gz文件)</li>\n<li><a href=\"ftp://ftp.gnu.org/gnu/autoconf/\" target=\"_blank\" rel=\"noopener\">autoconf</a> (下载最新的gz文件)</li>\n<li><a href=\"http://ftp.gnu.org/gnu/automake/\" target=\"_blank\" rel=\"noopener\">automake</a> (下载最新的gz文件)</li>\n<li><a href=\"ftp://ftp.gnu.org/gnu/libtool/\" target=\"_blank\" rel=\"noopener\">libtool</a> (下载最新的gz文件)</li>\n<li><a href=\"http://www.nasm.us/\" target=\"_blank\" rel=\"noopener\">nasm</a> (下载最新的gz文件，此库是编译x86架构so必须的)</li>\n</ol>\n<p>由于个别软件之间有依赖关系，最好按照以上顺序来安装</p>\n<p>下载好后，逐个进行安装,</p>\n<blockquote>\n<p><code>tar -xzvf   *.gz      //解压</code><br><br><code>cd dir                //切换到解压目录</code></p>\n</blockquote>\n<blockquote>\n<p><code>./configure</code><br><br><code>make</code><br><br><code>sudo make install      //有需要的输入系统登录账户密码</code></p>\n</blockquote>\n<p>检验是否安装成功，比如automake,终端定位到安装目录，执行</p>\n<blockquote>\n<p><code>automake --version</code></p>\n</blockquote>\n<p>正常显示版本表示安装成功</p>\n<p>安全全部软件如图：</p>\n<p><img src=\"https://github.com/robinxdroid/BlogRes/blob/master/images/2018-1-30/libjpeg-need-soft.png?raw=true\" alt=\"\"></p>\n<h5 id=\"配置系统环境变量\"><a href=\"#配置系统环境变量\" class=\"headerlink\" title=\"配置系统环境变量\"></a>配置系统环境变量</h5><p>将上面安装的软件配置到环境变量中</p>\n<blockquote>\n<p>sudo gedit /etc/environment</p>\n</blockquote>\n<p>打开配置文件，在<code>PATH=&#39;……&#39;</code>后面加入<code>&quot;:我们安装的路径&quot;</code>,注意路径前面有冒号<code>:</code></p>\n<p><img src=\"https://github.com/robinxdroid/BlogRes/blob/master/images/2018-1-30/libjpeg-linux-sys-env.png?raw=true\" alt=\"\"></p>\n<p>编辑完后，点击save保存并关闭，然后执行<br><code>source /etc/environment</code><br>使之立即生效</p>\n<h4 id=\"编译流程\"><a href=\"#编译流程\" class=\"headerlink\" title=\"编译流程\"></a>编译流程</h4><ul>\n<li><p>新建一个目录，存放libjpeg源码，这里我们取名<code>source</code></p>\n</li>\n<li><p>在<code>source</code>目录中新建一个目录用于存放编译文件，这里我们取名<code>libjpeg</code></p>\n</li>\n<li><p>在<code>source</code>目录中新建一个目录用于存放编译成功后生成的so文件等，这里我们取名<code>dist</code></p>\n</li>\n<li><p>编写编译脚本文件：</p>\n</li>\n</ul>\n<hr>\n<p><code>armeabi_v7a.sh</code></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd libjpeg</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">NDK_PATH=/home/robin/Android/android-ndk-r15c</span><br><span class=\"line\"></span><br><span class=\"line\">BUILD_PLATFORM=linux-x86_64</span><br><span class=\"line\"></span><br><span class=\"line\">TOOLCHAIN_VERSION=4.9</span><br><span class=\"line\"></span><br><span class=\"line\">ANDROID_VERSION=21</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">HOST=arm-linux-androideabi</span><br><span class=\"line\"></span><br><span class=\"line\">SYSROOT=$&#123;NDK_PATH&#125;/platforms/android-$&#123;ANDROID_VERSION&#125;/arch-arm</span><br><span class=\"line\"></span><br><span class=\"line\">ANDROID_CFLAGS=&quot;-march=armv7-a -mfloat-abi=softfp -fprefetch-loop-arrays -mfpu=neon -mthumb -D__ANDROID__ -D__ARM_ARCH_7__ \\</span><br><span class=\"line\"></span><br><span class=\"line\">  --sysroot=$&#123;SYSROOT&#125;&quot;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">TOOLCHAIN=$&#123;NDK_PATH&#125;/toolchains/$&#123;HOST&#125;-$&#123;TOOLCHAIN_VERSION&#125;/prebuilt/$&#123;BUILD_PLATFORM&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">export CPP=$&#123;TOOLCHAIN&#125;/bin/$&#123;HOST&#125;-cpp</span><br><span class=\"line\"></span><br><span class=\"line\">export AR=$&#123;TOOLCHAIN&#125;/bin/$&#123;HOST&#125;-ar</span><br><span class=\"line\"></span><br><span class=\"line\">export NM=$&#123;TOOLCHAIN&#125;/bin/$&#123;HOST&#125;-nm</span><br><span class=\"line\"></span><br><span class=\"line\">export CC=$&#123;TOOLCHAIN&#125;/bin/$&#123;HOST&#125;-gcc</span><br><span class=\"line\"></span><br><span class=\"line\">export LD=$&#123;TOOLCHAIN&#125;/bin/$&#123;HOST&#125;-ld</span><br><span class=\"line\"></span><br><span class=\"line\">export RANLIB=$&#123;TOOLCHAIN&#125;/bin/$&#123;HOST&#125;-ranlib</span><br><span class=\"line\"></span><br><span class=\"line\">export OBJDUMP=$&#123;TOOLCHAIN&#125;/bin/$&#123;HOST&#125;-objdump</span><br><span class=\"line\"></span><br><span class=\"line\">export STRIP=$&#123;TOOLCHAIN&#125;/bin/$&#123;HOST&#125;-strip</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">sh ../libjpeg-turbo-master/configure --host=$&#123;HOST&#125; \\</span><br><span class=\"line\"></span><br><span class=\"line\">   CFLAGS=&quot;$&#123;ANDROID_CFLAGS&#125; -O3 -fPIE&quot; \\</span><br><span class=\"line\"></span><br><span class=\"line\">   CPPFLAGS=&quot;$&#123;ANDROID_CFLAGS&#125;&quot; \\</span><br><span class=\"line\"></span><br><span class=\"line\">   LDFLAGS=&quot;$&#123;ANDROID_CFLAGS&#125; -pie&quot; --with-simd $&#123;1+&quot;$@&quot;&#125; --with-jpeg8 \\</span><br><span class=\"line\"></span><br><span class=\"line\">   --prefix=/home/robin/source/dist/libjpeg-turbo/armeabi-v7a/</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">make</span><br><span class=\"line\"></span><br><span class=\"line\">sudo make install</span><br></pre></td></tr></table></figure>\n<hr>\n<p><code>arm64_v8a.sh</code></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd libjpeg</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">NDK_PATH=/home/robin/Android/android-ndk-r15c</span><br><span class=\"line\"></span><br><span class=\"line\">BUILD_PLATFORM=linux-x86_64</span><br><span class=\"line\"></span><br><span class=\"line\">TOOLCHAIN_VERSION=4.9</span><br><span class=\"line\"></span><br><span class=\"line\">ANDROID_VERSION=21</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">HOST=aarch64-linux-android</span><br><span class=\"line\"></span><br><span class=\"line\">SYSROOT=$&#123;NDK_PATH&#125;/platforms/android-$&#123;ANDROID_VERSION&#125;/arch-arm64</span><br><span class=\"line\"></span><br><span class=\"line\">ANDROID_CFLAGS=&quot;--sysroot=$&#123;SYSROOT&#125;&quot;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">TOOLCHAIN=$&#123;NDK_PATH&#125;/toolchains/$&#123;HOST&#125;-$&#123;TOOLCHAIN_VERSION&#125;/prebuilt/$&#123;BUILD_PLATFORM&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">export CPP=$&#123;TOOLCHAIN&#125;/bin/$&#123;HOST&#125;-cpp</span><br><span class=\"line\"></span><br><span class=\"line\">export AR=$&#123;TOOLCHAIN&#125;/bin/$&#123;HOST&#125;-ar</span><br><span class=\"line\"></span><br><span class=\"line\">export NM=$&#123;TOOLCHAIN&#125;/bin/$&#123;HOST&#125;-nm</span><br><span class=\"line\"></span><br><span class=\"line\">export CC=$&#123;TOOLCHAIN&#125;/bin/$&#123;HOST&#125;-gcc</span><br><span class=\"line\"></span><br><span class=\"line\">export LD=$&#123;TOOLCHAIN&#125;/bin/$&#123;HOST&#125;-ld</span><br><span class=\"line\"></span><br><span class=\"line\">export RANLIB=$&#123;TOOLCHAIN&#125;/bin/$&#123;HOST&#125;-ranlib</span><br><span class=\"line\"></span><br><span class=\"line\">export OBJDUMP=$&#123;TOOLCHAIN&#125;/bin/$&#123;HOST&#125;-objdump</span><br><span class=\"line\"></span><br><span class=\"line\">export STRIP=$&#123;TOOLCHAIN&#125;/bin/$&#123;HOST&#125;-strip</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">sh ../libjpeg-turbo-master/configure --host=$&#123;HOST&#125; \\</span><br><span class=\"line\"></span><br><span class=\"line\">   CFLAGS=&quot;$&#123;ANDROID_CFLAGS&#125; -O3 -fPIE&quot; \\</span><br><span class=\"line\"></span><br><span class=\"line\">   CPPFLAGS=&quot;$&#123;ANDROID_CFLAGS&#125;&quot; \\</span><br><span class=\"line\"></span><br><span class=\"line\">   LDFLAGS=&quot;$&#123;ANDROID_CFLAGS&#125; -pie&quot; --with-simd $&#123;1+&quot;$@&quot;&#125; --with-jpeg8 \\</span><br><span class=\"line\"></span><br><span class=\"line\">   --prefix=/home/robin/source/dist/libjpeg-turbo/arm64-v8a/</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">make</span><br><span class=\"line\"></span><br><span class=\"line\">sudo make install</span><br></pre></td></tr></table></figure>\n<hr>\n<p><code>x86.sh</code></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd libjpeg</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">NDK_PATH=/home/robin/Android/android-ndk-r15c</span><br><span class=\"line\"></span><br><span class=\"line\">BUILD_PLATFORM=linux-x86_64</span><br><span class=\"line\"></span><br><span class=\"line\">TOOLCHAIN_VERSION=4.9</span><br><span class=\"line\"></span><br><span class=\"line\">ANDROID_VERSION=21</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">HOST=i686-linux-android</span><br><span class=\"line\"></span><br><span class=\"line\">SYSROOT=$&#123;NDK_PATH&#125;/platforms/android-$&#123;ANDROID_VERSION&#125;/arch-x86</span><br><span class=\"line\"></span><br><span class=\"line\">ANDROID_CFLAGS=&quot;--sysroot=$&#123;SYSROOT&#125;&quot;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">TOOLCHAIN=$&#123;NDK_PATH&#125;/toolchains/x86-$&#123;TOOLCHAIN_VERSION&#125;/prebuilt/$&#123;BUILD_PLATFORM&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">export CPP=$&#123;TOOLCHAIN&#125;/bin/$&#123;HOST&#125;-cpp</span><br><span class=\"line\"></span><br><span class=\"line\">export AR=$&#123;TOOLCHAIN&#125;/bin/$&#123;HOST&#125;-ar</span><br><span class=\"line\"></span><br><span class=\"line\">export NM=$&#123;TOOLCHAIN&#125;/bin/$&#123;HOST&#125;-nm</span><br><span class=\"line\"></span><br><span class=\"line\">export CC=$&#123;TOOLCHAIN&#125;/bin/$&#123;HOST&#125;-gcc</span><br><span class=\"line\"></span><br><span class=\"line\">export LD=$&#123;TOOLCHAIN&#125;/bin/$&#123;HOST&#125;-ld</span><br><span class=\"line\"></span><br><span class=\"line\">export RANLIB=$&#123;TOOLCHAIN&#125;/bin/$&#123;HOST&#125;-ranlib</span><br><span class=\"line\"></span><br><span class=\"line\">export OBJDUMP=$&#123;TOOLCHAIN&#125;/bin/$&#123;HOST&#125;-objdump</span><br><span class=\"line\"></span><br><span class=\"line\">export STRIP=$&#123;TOOLCHAIN&#125;/bin/$&#123;HOST&#125;-strip</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">sh ../libjpeg-turbo-master/configure --host=$&#123;HOST&#125; \\</span><br><span class=\"line\"></span><br><span class=\"line\">   CFLAGS=&quot;$&#123;ANDROID_CFLAGS&#125; -O3 -fPIE&quot; \\</span><br><span class=\"line\"></span><br><span class=\"line\">   CPPFLAGS=&quot;$&#123;ANDROID_CFLAGS&#125;&quot; \\</span><br><span class=\"line\"></span><br><span class=\"line\">   LDFLAGS=&quot;$&#123;ANDROID_CFLAGS&#125; -pie&quot; --with-simd $&#123;1+&quot;$@&quot;&#125; --with-jpeg8 \\</span><br><span class=\"line\"></span><br><span class=\"line\">   --prefix=/home/robin/source/dist/libjpeg-turbo/x86/</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">make</span><br><span class=\"line\"></span><br><span class=\"line\">sudo make install</span><br></pre></td></tr></table></figure>\n<hr>\n<p><code>x86_64.sh</code></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd libjpeg</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">NDK_PATH=/home/robin/Android/android-ndk-r15c</span><br><span class=\"line\"></span><br><span class=\"line\">BUILD_PLATFORM=linux-x86_64</span><br><span class=\"line\"></span><br><span class=\"line\">TOOLCHAIN_VERSION=4.9</span><br><span class=\"line\"></span><br><span class=\"line\">ANDROID_VERSION=21</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">HOST=x86_64-linux-android</span><br><span class=\"line\"></span><br><span class=\"line\">SYSROOT=$&#123;NDK_PATH&#125;/platforms/android-$&#123;ANDROID_VERSION&#125;/arch-x86_64</span><br><span class=\"line\"></span><br><span class=\"line\">ANDROID_CFLAGS=&quot;--sysroot=$&#123;SYSROOT&#125;&quot;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">TOOLCHAIN=$&#123;NDK_PATH&#125;/toolchains/x86_64-$&#123;TOOLCHAIN_VERSION&#125;/prebuilt/$&#123;BUILD_PLATFORM&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">export CPP=$&#123;TOOLCHAIN&#125;/bin/$&#123;HOST&#125;-cpp</span><br><span class=\"line\"></span><br><span class=\"line\">export AR=$&#123;TOOLCHAIN&#125;/bin/$&#123;HOST&#125;-ar</span><br><span class=\"line\"></span><br><span class=\"line\">export NM=$&#123;TOOLCHAIN&#125;/bin/$&#123;HOST&#125;-nm</span><br><span class=\"line\"></span><br><span class=\"line\">export CC=$&#123;TOOLCHAIN&#125;/bin/$&#123;HOST&#125;-gcc</span><br><span class=\"line\"></span><br><span class=\"line\">export LD=$&#123;TOOLCHAIN&#125;/bin/$&#123;HOST&#125;-ld</span><br><span class=\"line\"></span><br><span class=\"line\">export RANLIB=$&#123;TOOLCHAIN&#125;/bin/$&#123;HOST&#125;-ranlib</span><br><span class=\"line\"></span><br><span class=\"line\">export OBJDUMP=$&#123;TOOLCHAIN&#125;/bin/$&#123;HOST&#125;-objdump</span><br><span class=\"line\"></span><br><span class=\"line\">export STRIP=$&#123;TOOLCHAIN&#125;/bin/$&#123;HOST&#125;-strip</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">sh ../libjpeg-turbo-master/configure --host=$&#123;HOST&#125; \\</span><br><span class=\"line\"></span><br><span class=\"line\">   CFLAGS=&quot;$&#123;ANDROID_CFLAGS&#125; -O3 -fPIE&quot; \\</span><br><span class=\"line\"></span><br><span class=\"line\">   CPPFLAGS=&quot;$&#123;ANDROID_CFLAGS&#125;&quot; \\</span><br><span class=\"line\"></span><br><span class=\"line\">   LDFLAGS=&quot;$&#123;ANDROID_CFLAGS&#125; -pie&quot; --with-simd $&#123;1+&quot;$@&quot;&#125; --with-jpeg8 \\</span><br><span class=\"line\"></span><br><span class=\"line\">   --prefix=/home/robin/source/dist/libjpeg-turbo/x86-64/</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">make</span><br><span class=\"line\"></span><br><span class=\"line\">sudo make install</span><br></pre></td></tr></table></figure>\n<ul>\n<li><p>以上脚本需要根据你的源码目录，NDK目录，修改相应的路径,–prefix指定编译的安装目录，就是最终的库存放位置</p>\n</li>\n<li><p>在终端里执行以上脚本<code>sh ./armeabi-v7a.sh</code></p>\n</li>\n<li><p>编译一种架构后，可以通过<code>make distclean</code>清除上一次编译结果，如果出错，手动删除libjpeg目录下文件即可</p>\n</li>\n<li><p>如果sh文件执行不了，例如提示cd命令错误，这是由于文件中存在的一些空格编码，造成的，需要用以下命令进行转码下，生成新文件<br><code>tr -d &#39;\\r&#39; &lt; start.sh  &gt; fixed.sh</code>,然后执行新的sh文件即可</p>\n</li>\n</ul>\n<p><img src=\"https://github.com/robinxdroid/BlogRes/blob/master/images/2018-1-30/libjpeg-compile.png?raw=true\" alt=\"\"></p>\n<p>我们的编译成果</p>\n<p><img src=\"https://github.com/robinxdroid/BlogRes/blob/master/images/2018-1-30/libjpeg-compile-finish.png?raw=true\" alt=\"\"></p>\n<hr>\n<blockquote>\n<p>转载请指明出处RobinBlog：<a href=\"http://robinx.net/2018/01/30/编译libjpeg-turbo/\" target=\"_blank\" rel=\"noopener\">http://robinx.net/2018/01/30/编译libjpeg-turbo/</a></p>\n</blockquote>\n","categories":["Android","NDK","Linux"],"tags":["NDK","Android","压缩","libjpeg"]},{"title":"ReactNative环境搭建","url":"http://yoursite.com/2018/01/19/ReactNative环境搭建/","content":"<p>为什么写这篇，网上的RN环境搭建教程很多，但是基本上都是copy来copy去，在搭建过程中还是有不少坑，虽然不是特别大的坑，但是对于初学者每个都要去谷歌找答案，很费时间。在此记录整个环境搭建过程，以及遇到的问题，俗称“坑”</p>\n<h2 id=\"安装流程\"><a href=\"#安装流程\" class=\"headerlink\" title=\"安装流程\"></a>安装流程</h2><p>本次安装环境基于<code>Windows10</code>,安装<code>ReactNative</code>版本基于<code>0.51</code></p>\n<p>ps:访问困难的，请自备梯子</p>\n<h3 id=\"必须软件\"><a href=\"#必须软件\" class=\"headerlink\" title=\"必须软件\"></a>必须软件</h3><h4 id=\"1-Chocolatey\"><a href=\"#1-Chocolatey\" class=\"headerlink\" title=\"1.Chocolatey\"></a>1.Chocolatey</h4><p><a href=\"https://chocolatey.org/\" target=\"_blank\" rel=\"noopener\">Chocolatey</a>是一个Windows上的包管理器，类似于linux上的yum和 apt-get。 你可以在其<a href=\"https://chocolatey.org/\" target=\"_blank\" rel=\"noopener\">官方网站</a>上查看具体的使用说明。一般的安装步骤应该是下面这样：</p>\n<blockquote>\n<p><code>@powershell -NoProfile -ExecutionPolicy Bypass -Command &quot;iex ((new-object net.webclient).DownloadString(&#39;https://chocolatey.org/install.ps1&#39;))&quot; &amp;&amp; SET PATH=%PATH%;%ALLUSERSPROFILE%\\chocolatey\\bin</code></p>\n</blockquote>\n<p><code>win+x</code>打开菜单，选择“命令提示符（管理员）”，打开管理员dos窗口，复制以上命令，回车，等待安装完成。你可以输入<code>choco -v</code>，正确输出版本号的话，安装正常</p>\n<h4 id=\"2-Python-2\"><a href=\"#2-Python-2\" class=\"headerlink\" title=\"2.Python 2\"></a>2.Python 2</h4><p>打开命令提示符窗口，使用Chocolatey来安装Python 2.（注意目前不支持Python 3版本。）</p>\n<blockquote>\n<p><code>choco install python2</code></p>\n</blockquote>\n<p>命令窗口中输入以上命令，等待下载安装</p>\n<h4 id=\"3-Node\"><a href=\"#3-Node\" class=\"headerlink\" title=\"3.Node\"></a>3.Node</h4><p>打开命令提示符窗口，使用Chocolatey来安装NodeJS。</p>\n<blockquote>\n<p><code>choco install nodejs.install</code></p>\n</blockquote>\n<p>命令行输入以上命令，等待下载安装</p>\n<p>安装完node后建议设置npm镜像以加速后面的过程（或使用科学上网工具）。注意：不要使用cnpm！cnpm安装的模块路径比较奇怪，packager不能正常识别！</p>\n<blockquote>\n<p><code>npm config set registry https://registry.npm.taobao.org --global</code><br><code>npm config set disturl https://npm.taobao.org/dist --global</code></p>\n</blockquote>\n<p>命令行继续输入以上命令。如果无法识别npm命令，关闭dos窗口，重新打开新的dos窗口，输入以上命令，因为环境变量自动配置以后，旧的dos窗口无法识别</p>\n<h4 id=\"4-Yarn、React-Native的命令行工具（react-native-cli）\"><a href=\"#4-Yarn、React-Native的命令行工具（react-native-cli）\" class=\"headerlink\" title=\"4.Yarn、React Native的命令行工具（react-native-cli）\"></a>4.Yarn、React Native的命令行工具（react-native-cli）</h4><p>Yarn是Facebook提供的替代npm的工具，可以加速node模块的下载。React Native的命令行工具用于执行创建、初始化、更新项目、运行打包服务（packager）等任务。</p>\n<blockquote>\n<p><code>npm install -g yarn react-native-cli</code></p>\n</blockquote>\n<p>命令行输入以上命令，等待下载安装</p>\n<p>安装完yarn后同理也要设置镜像源：</p>\n<blockquote>\n<p><code>yarn config set registry https://registry.npm.taobao.org --global</code><br><code>yarn config set disturl https://npm.taobao.org/dist --global</code></p>\n</blockquote>\n<p>命令行继续输入以上命令</p>\n<h4 id=\"5-Android-Studio\"><a href=\"#5-Android-Studio\" class=\"headerlink\" title=\"5.Android Studio\"></a>5.Android Studio</h4><p>没什么好说的，这个搞不定，也别整什么RN了。<br>需要注意的是：React Native目前需要Android Studio2.0或更高版本。JDK用1.8就好</p>\n<p>配置下Android的环境变量，这里我遇到的问题是Android环境变量被自动移除了，不知道是不是因为安装以上软件的时候影响的，因为我之前设置过了Android环境变量，后面运行的报错，才发现adb命令都执行不了，所以重新检查设置下Android环境变量，至于怎么设置，自行搜索</p>\n<h6 id=\"至此，环境搭建初步完成\"><a href=\"#至此，环境搭建初步完成\" class=\"headerlink\" title=\"至此，环境搭建初步完成\"></a>至此，环境搭建初步完成</h6><h2 id=\"测试\"><a href=\"#测试\" class=\"headerlink\" title=\"测试\"></a>测试</h2><p>连上手机<br>使用<code>adb devices</code>查看手机是否连接正常</p>\n<p>关闭掉管理员dos窗口，因为其定位目录为<code>C：Windows\\System32</code>目录,会有一些权限相关的设置，不方便我们在此目录测试，运行的时候会<code>build faild</code></p>\n<p>随便找个盘，新建一个workspace，打开dos窗口，这里你也可以用<code>git bash</code>命令窗口，如果你安装了git的话。</p>\n<p>初始化测试项目</p>\n<blockquote>\n<p><code>react-native init AwesomeProject</code></p>\n</blockquote>\n<p>进入项目目录</p>\n<blockquote>\n<p><code>cd AwesomeProject</code></p>\n</blockquote>\n<p>编译运行Android项目</p>\n<blockquote>\n<p><code>react-native run-android</code></p>\n</blockquote>\n<p>等待编译运行，运行到手机上后，如果出现红屏，并显示<br><code>Unable to load script from assets index.android.bundle on windows</code></p>\n<p>解决方法：打开项目目录，进入<code>android/app/src/main</code>目录，新建一个<code>assets</code>目录，然后在项目根目录中，命令行输入</p>\n<blockquote>\n<p><code>react-native bundle --platform android --dev false --entry-file index.js --bundle-output android/app/src/main/assets/index.android.bundle --assets-dest android/app/src/main/res</code></p>\n</blockquote>\n<p>完事再次输入运行命令，编译运行</p>\n<blockquote>\n<p><code>react-native run-android</code></p>\n</blockquote>\n<p>成功部署后显示：</p>\n<p><img src=\"https://github.com/robinxdroid/BlogRes/blob/master/images/2018-1-19/rn_test_success.png?raw=true\" alt=\"\"></p>\n<p>再测试下更新，命令行启动RN服务</p>\n<blockquote>\n<p><code>react-native start</code></p>\n</blockquote>\n<p>在项目的根目录中，找到App.js,打开修改下，保存。然后在手机上按菜单键呼出弹窗（你也可以摇动手机呼出）选择第一项<code>Reload</code>就会看到刚才做的修改</p>\n<hr>\n<blockquote>\n<p>转载请指明出处RobinBlog：<a href=\"http://robinx.net/2018/01/19/ReactNative环境搭建/\" target=\"_blank\" rel=\"noopener\">http://robinx.net/2018/01/19/ReactNative环境搭建/</a></p>\n</blockquote>\n","categories":["Android","ReactNative"],"tags":["ReactNative","环境"]},{"title":"2017年终总结","url":"http://yoursite.com/2018/01/03/2017年终总结/","content":"<p>眨眼就是一年，连90后所有人都成年了。</p>\n<h3 id=\"2017年总结\"><a href=\"#2017年总结\" class=\"headerlink\" title=\"2017年总结\"></a>2017年总结</h3><p>每一年都很特别，今年尤为特殊，忙于房屋装修以及人生大事，还有工作，都挤到一起了。年底总算忙的差不多。算稳定下来。<br></p>\n<p>装修烧钱，中间也被人坑过，也扯过皮，对习惯默默敲键盘的我来说，太不习惯。</p>\n<p>人生大事解决了，感谢她陪我这么久。总要许一个未来。</p>\n<p>工作换了，算是吃一堑长一智昂，好人居多，坏人绝对不少。奉劝大家擦亮眼睛啊。</p>\n<p>技术有增长，学会kotlin语言，半学c，为什么半呢，因为生活上的事情，又断了，18年再继续吧。陆陆续续写了不少代码组件库，感觉还可以。</p>\n<h3 id=\"2018年规划\"><a href=\"#2018年规划\" class=\"headerlink\" title=\"2018年规划\"></a>2018年规划</h3><p>人长大了是真的烦恼多啊，特别多，新的一年</p>\n<ul>\n<li>Blog多更些技术分享</li>\n<li>该学习的好好学习</li>\n<li>该工作的好好工作</li>\n<li>个人资历提升</li>\n<li>规划下以后</li>\n</ul>\n<hr>\n","categories":["随笔"],"tags":["2017","2018"]},{"title":"fexo主题集成gitalk评论组件","url":"http://yoursite.com/2018/01/03/fexo主题集成gitalk评论组件/","content":"<h3 id=\"前言：\"><a href=\"#前言：\" class=\"headerlink\" title=\"前言：\"></a>前言：</h3><p>多说评论组件已经下架，琢磨了下发现gitalk不错，基于github的issue。搜索的集成教程基本上都是next主题集成，谁让这款主题用的人多呢。本文为集成fexo主题集成gitalk</p>\n<h3 id=\"前言：开始集成\"><a href=\"#前言：开始集成\" class=\"headerlink\" title=\"前言：开始集成\"></a>前言：开始集成</h3><h4 id=\"step1\"><a href=\"#step1\" class=\"headerlink\" title=\"step1\"></a>step1</h4><p>github创建一个代码仓库，用于存储评论数据，这里取名<code>BlogComments</code>,</p>\n<p>然后<code>个人用户-&gt;setting-&gt;Developer settings-&gt;OAuth Apps</code></p>\n<ul>\n<li>Application name  填写仓库名，这里是<code>BlogComments</code></li>\n<li>Homepage URL  网站的地址</li>\n<li>Application description  描述，随意，可不填</li>\n<li>Authorization callback URL 网站的地址</li>\n</ul>\n<p>填好之后，点击Register application，即可得到<code>Client ID</code>与<code>Client Secret</code>。放着，后面有用</p>\n<h4 id=\"step2\"><a href=\"#step2\" class=\"headerlink\" title=\"step2\"></a>step2</h4><p>打开Hexo\\themes\\fexo\\layout_partial\\component,创建<code>gitalk.ejs</code></p>\n<p>文件内容直接复制</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">&lt;% <span class=\"keyword\">if</span> (theme.gitalk_shortname)&#123; %&gt;</span><br><span class=\"line\">&lt;!-- Gitalk评论插件通用代码 --&gt;</span><br><span class=\"line\">&lt;div id=\"git\"&gt;&lt;/div&gt;</span><br><span class=\"line\">&lt;link rel=<span class=\"string\">\"stylesheet\"</span> href=<span class=\"string\">\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.css\"</span>&gt;</span><br><span class=\"line\">&lt;script src=\"https://cdn.jsdelivr.net/npm/gitalk@1/dist/gitalk.min.js\"&gt;&lt;/script&gt;</span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\"><span class=\"keyword\">const</span> gitalk = <span class=\"keyword\">new</span> Gitalk(&#123;</span><br><span class=\"line\">  clientID: <span class=\"string\">'填入第一步获取的clientID'</span>,</span><br><span class=\"line\">  clientSecret: <span class=\"string\">'填入第一步获取的clientSecret'</span>,</span><br><span class=\"line\">  repo: <span class=\"string\">'仓库名称本文中为BlogComments'</span>,</span><br><span class=\"line\">  owner: <span class=\"string\">'你的用户名'</span>,</span><br><span class=\"line\">  admin: [<span class=\"string\">'你的用户名'</span>],</span><br><span class=\"line\">  <span class=\"comment\">// facebook-like distraction free mode</span></span><br><span class=\"line\">  distractionFreeMode: <span class=\"keyword\">false</span></span><br><span class=\"line\">&#125;)</span><br><span class=\"line\">gitalk.render(<span class=\"string\">'git'</span>)</span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\">&lt;!-- Gitalk代码结束 --&gt;</span><br><span class=\"line\">&lt;% &#125; %&gt;</span><br></pre></td></tr></table></figure>\n<h4 id=\"step3\"><a href=\"#step3\" class=\"headerlink\" title=\"step3\"></a>step3</h4><p>打开Hexo\\themes\\fexo\\layout_partial\\article.ejs,在文件底部找到</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;% if (theme.duoshuo_shortname)&#123; %&gt;</span><br><span class=\"line\">   &lt;i class=&quot;icon-comment&quot;&gt;&lt;/i&gt; </span><br><span class=\"line\">   &lt;span class=&quot;ds-thread-count&quot; data-thread-key=&quot;&lt;%= page.layout %&gt;-&lt;%= page.slug %&gt;&quot;&gt;&lt;i class=&quot;fa fa-spinner fa-spin&quot;&gt;&lt;/i&gt;&lt;/span&gt; 条评论</span><br><span class=\"line\">  &lt;% &#125; %&gt;</span><br></pre></td></tr></table></figure>\n<p>删除它。<br></p>\n<p>在<code>article</code>标签内添加<br></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">  &lt;% if (theme.gitalk_shortname &amp;&amp; page.comments &amp;&amp; theme.url)&#123; %&gt;</span><br><span class=\"line\">    &lt;%- partial(&apos;component/gitalk&apos;) %&gt;</span><br><span class=\"line\">&lt;% &#125; else &#123; %&gt;</span><br><span class=\"line\">    &lt;div class=&quot;git&quot;&gt;&lt;/div&gt;</span><br><span class=\"line\">&lt;% &#125; %&gt;</span><br></pre></td></tr></table></figure>\n<p>保存即可</p>\n<p>完整文件：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;article id=&quot;&lt;%= post.layout %&gt;-&lt;%= post.slug %&gt;&quot; class=&quot;article article-type-&lt;%= post.layout %&gt;&quot; itemprop=&quot;blogPost&quot;&gt;</span><br><span class=\"line\">  &lt;header class=&quot;article-header&quot;&gt;</span><br><span class=\"line\">    &lt;h1 class=&quot;post-title&quot;&gt;&lt;%= post.title || &apos;(no title)&apos; %&gt;&lt;/h1&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;div class=&quot;article-meta&quot;&gt;</span><br><span class=\"line\">      &lt;span&gt;</span><br><span class=\"line\">        &lt;i class=&quot;icon-calendar&quot;&gt;&lt;/i&gt;</span><br><span class=\"line\">        &lt;span&gt;&lt;%= date(post.date, &apos;YYYY.MM.DD&apos;) %&gt;&lt;/span&gt;</span><br><span class=\"line\">      &lt;/span&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">      &lt;% if (config.author)&#123; %&gt;</span><br><span class=\"line\">        &lt;span class=&quot;article-author&quot;&gt;</span><br><span class=\"line\">          &lt;i class=&quot;icon-user&quot;&gt;&lt;/i&gt;</span><br><span class=\"line\">          &lt;span&gt;&lt;%= config.author %&gt;&lt;/span&gt;</span><br><span class=\"line\">        &lt;/span&gt;</span><br><span class=\"line\">      &lt;% &#125; %&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">      &lt;%- partial(&apos;component/category&apos;) %&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">      &lt;% if (theme.disqus_shortname &amp;&amp; theme.url &amp;&amp; page.comments)&#123; %&gt;</span><br><span class=\"line\">        &lt;span&gt;</span><br><span class=\"line\">          &lt;i class=&quot;icon-comment&quot;&gt;&lt;/i&gt;</span><br><span class=\"line\">          &lt;a href=&quot;&lt;%= theme.url + url_for(page.path) + &apos;#disqus_thread&apos; %&gt;&quot;&gt;&lt;/a&gt;</span><br><span class=\"line\">        &lt;/span&gt;</span><br><span class=\"line\">      &lt;% &#125; %&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">      &lt;% if (theme.busuanzi)&#123; %&gt;</span><br><span class=\"line\">      &lt;i class=&quot;fa fa-eye&quot;&gt;&lt;/i&gt; </span><br><span class=\"line\">        &lt;span id=&quot;busuanzi_container_page_pv&quot;&gt;</span><br><span class=\"line\">           &amp;nbsp热度 &lt;span id=&quot;busuanzi_value_page_pv&quot;&gt;</span><br><span class=\"line\">           &lt;i class=&quot;fa fa-spinner fa-spin&quot;&gt;&lt;/i&gt;&lt;/span&gt;℃</span><br><span class=\"line\">        &lt;/span&gt;</span><br><span class=\"line\">      &lt;% &#125; %&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\">  &lt;/header&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">  &lt;div class=&quot;article-content&quot;&gt;</span><br><span class=\"line\">    &lt;% if (post.excerpt &amp;&amp; index)&#123; %&gt;</span><br><span class=\"line\">      &lt;%- post.excerpt %&gt;</span><br><span class=\"line\">      &lt;% if (theme.excerpt_link)&#123; %&gt;</span><br><span class=\"line\">        &lt;p class=&quot;article-more-link&quot;&gt;</span><br><span class=\"line\">          &lt;a class=&quot;btn btn-primary&quot; href=&quot;&lt;%- url_for(post.path) %&gt;#more&quot;&gt;&lt;%= theme.excerpt_link %&gt;&lt;/a&gt;</span><br><span class=\"line\">        &lt;/p&gt;</span><br><span class=\"line\">      &lt;% &#125; %&gt;</span><br><span class=\"line\">    &lt;% &#125; else &#123; %&gt;</span><br><span class=\"line\">      &lt;%- post.content %&gt;</span><br><span class=\"line\">    &lt;% &#125; %&gt;</span><br><span class=\"line\">  &lt;/div&gt;</span><br><span class=\"line\">  </span><br><span class=\"line\">    &lt;% if (theme.gitalk_shortname &amp;&amp; page.comments &amp;&amp; theme.url)&#123; %&gt;</span><br><span class=\"line\">      &lt;%- partial(&apos;component/gitalk&apos;) %&gt;</span><br><span class=\"line\">  &lt;% &#125; else &#123; %&gt;</span><br><span class=\"line\">      &lt;div class=&quot;git&quot;&gt;&lt;/div&gt;</span><br><span class=\"line\">  &lt;% &#125; %&gt;</span><br><span class=\"line\">  </span><br><span class=\"line\">&lt;/article&gt;</span><br></pre></td></tr></table></figure>\n<h4 id=\"step4\"><a href=\"#step4\" class=\"headerlink\" title=\"step4\"></a>step4</h4><p>打开 Hexo\\themes\\fexo_config.yml文件</p>\n<p>注释掉<code>disqus_shortname forsigner</code><br>添加<code>gitalk_shortname: robinxdroid</code></p>\n<hr>\n<p>到此，配置完成，可以git bash 输入hexo server命令，历览器输入<br><code>http://localhost:4000/</code>测试是否正常加载gitalk模块</p>\n<hr>\n<blockquote>\n<p>转载请指明出处RobinBlog：<a href=\"http://robinx.net/2018/01/03/fexo主题集成gitalk评论组件\" target=\"_blank\" rel=\"noopener\">http://robinx.net/2018/01/03/fexo主题集成gitalk评论组件</a></p>\n</blockquote>\n","categories":["Blog"],"tags":["2017","fexo"]},{"title":"职业动荡","url":"http://yoursite.com/2017/12/28/职业动荡/","content":"<p>10月底，离开了工作2年半的公司，11月进入新公司。至此，我已从事Android开发工作3年半时间。相对于前两年，找工作的时候明显感觉到工作难找了很多，也可能是因为年底。职业有兴盛有衰落，Android的未来我们不得而知，也看过大神的谈论文章，总结也是修炼自身才是正道，多学多看，有那个精力也可以跨行学学。<br><br>前段时间中兴的程序员跳楼事件着实在圈子里引发了不小的动荡与反思，三四十岁之后的我们要怎么办，竞争不过年轻人，被企业嫌弃。。。我觉得不必过多的想这些事情，十几年之内谁知道会发生什么事呢，谁不定你丫就中了彩票-_-!!。就像有的人踏上Android开发的路都可能是个意外。当然，职业规划还是要有的，未来除了精研自身的技术外，要学一学其他方面的知识，给自己留个出路。毕竟我们都是要养家的人。。。<br><br>时间不够，学习热情减少，这些障碍需要自己去克服，走了这条路就要对自己负责…</p>\n<hr>\n<blockquote>\n<p>转载请指明出处RobinBlog：<a href=\"http://robinx.net/2017/12/28/职业动荡\" target=\"_blank\" rel=\"noopener\">http://robinx.net/2017/12/28/职业动荡</a></p>\n</blockquote>\n","categories":["随笔"],"tags":["2017"]},{"title":"Gradle的定制","url":"http://yoursite.com/2017/07/20/Gradle的定制/","content":"<h2 id=\"引言\"><a href=\"#引言\" class=\"headerlink\" title=\"引言\"></a>引言</h2><p>AndroidStudio普及以来，一个完整的Android应用Gradle的配置必不可少，针对Gradle的定制，结合自己日常使用以及网络上其他人分享的内容整理了这篇</p>\n<h2 id=\"我的配置\"><a href=\"#我的配置\" class=\"headerlink\" title=\"我的配置\"></a>我的配置</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apply plugin: <span class=\"string\">'com.android.application'</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//打包的默认时间</span></span><br><span class=\"line\"><span class=\"function\">def <span class=\"title\">releaseTime</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> Date().format(<span class=\"string\">\"yyyy-MM-dd\"</span>, TimeZone.getTimeZone(<span class=\"string\">\"UTC\"</span>))</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">android &#123;</span><br><span class=\"line\">    compileSdkVersion ANDROID_BUILD_SDK_VERSION as <span class=\"keyword\">int</span></span><br><span class=\"line\">    buildToolsVersion ANDROID_BUILD_TOOLS_VERSION</span><br><span class=\"line\"></span><br><span class=\"line\">    defaultConfig &#123;</span><br><span class=\"line\">        applicationId <span class=\"string\">\"net.robinx.hengrui\"</span></span><br><span class=\"line\">        minSdkVersion ANDROID_BUILD_MIN_SDK_VERSION as <span class=\"keyword\">int</span></span><br><span class=\"line\">        targetSdkVersion ANDROID_BUILD_TARGET_SDK_VERSION as <span class=\"keyword\">int</span></span><br><span class=\"line\">        versionCode VERSION_CODE as <span class=\"keyword\">int</span></span><br><span class=\"line\">        versionName VERSION_NAME</span><br><span class=\"line\"></span><br><span class=\"line\">        vectorDrawables.useSupportLibrary = <span class=\"keyword\">true</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//签名文件配置</span></span><br><span class=\"line\">    signingConfigs &#123;</span><br><span class=\"line\">        myConfig &#123;</span><br><span class=\"line\">            <span class=\"function\">storeFile <span class=\"title\">file</span><span class=\"params\">(<span class=\"string\">'xxxxx.jks'</span>)</span></span></span><br><span class=\"line\"><span class=\"function\">            storePassword 'xxxxxx'</span></span><br><span class=\"line\"><span class=\"function\">            keyAlias 'xxxxx'</span></span><br><span class=\"line\"><span class=\"function\">            keyPassword 'xxxxx'</span></span><br><span class=\"line\"><span class=\"function\">        &#125;</span></span><br><span class=\"line\"><span class=\"function\">    &#125;</span></span><br><span class=\"line\"><span class=\"function\"></span></span><br><span class=\"line\"><span class=\"function\">    buildTypes </span>&#123;</span><br><span class=\"line\">        release &#123;</span><br><span class=\"line\">            <span class=\"comment\">//签名文件配置</span></span><br><span class=\"line\">            signingConfig android.signingConfigs.myConfig</span><br><span class=\"line\">            minifyEnabled <span class=\"keyword\">false</span></span><br><span class=\"line\">            <span class=\"comment\">//混淆文件配置</span></span><br><span class=\"line\">            <span class=\"function\">proguardFiles <span class=\"title\">getDefaultProguardFile</span><span class=\"params\">(<span class=\"string\">'proguard-android.txt'</span>)</span>, 'proguard-rules.pro'</span></span><br><span class=\"line\"><span class=\"function\"></span></span><br><span class=\"line\"><span class=\"function\">            <span class=\"comment\">// --------------多渠道打包自定义输出配置start-----------------------</span></span></span><br><span class=\"line\"><span class=\"function\">            applicationVariants.all </span>&#123; variant -&gt;</span><br><span class=\"line\">                variant.outputs.each &#123; output -&gt;</span><br><span class=\"line\">                    def outputFile = output.outputFile</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (outputFile != <span class=\"keyword\">null</span> &amp;&amp; outputFile.name.endsWith(<span class=\"string\">'.apk'</span>)) &#123;</span><br><span class=\"line\">                        <span class=\"comment\">// 输出apk名称为HengRui_v1.0_2016-01-15_wandoujia.apk</span></span><br><span class=\"line\">                        def fileName = <span class=\"string\">\"HengRui_v$&#123;defaultConfig.versionCode&#125;_$&#123;releaseTime()&#125;_$&#123;variant.productFlavors[0].name&#125;.apk\"</span></span><br><span class=\"line\">                        output.outputFile = <span class=\"keyword\">new</span> File(outputFile.parent, fileName)</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"comment\">// --------------多渠道打包自定义输出配置end-----------------------</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">//百度地图Key</span></span><br><span class=\"line\">            manifestPlaceholders = [baidu_map_key: <span class=\"string\">\"xxxxxxxxxxxxxxxxxxx\"</span>]</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        debug &#123;</span><br><span class=\"line\">            signingConfig android.signingConfigs.myConfig</span><br><span class=\"line\">            minifyEnabled <span class=\"keyword\">false</span></span><br><span class=\"line\">            <span class=\"function\">proguardFiles <span class=\"title\">getDefaultProguardFile</span><span class=\"params\">(<span class=\"string\">'proguard-android.txt'</span>)</span>, 'proguard-rules.pro'</span></span><br><span class=\"line\"><span class=\"function\"></span></span><br><span class=\"line\"><span class=\"function\">            <span class=\"comment\">//百度地图Key</span></span></span><br><span class=\"line\"><span class=\"function\">            manifestPlaceholders </span>= [baidu_map_key: <span class=\"string\">\"xxxxxxxxxxxxxxxxxxx\"</span>]</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//--------------------多渠道打包start---------------------</span></span><br><span class=\"line\">    productFlavors &#123;</span><br><span class=\"line\">        Default &#123;&#125;</span><br><span class=\"line\"><span class=\"comment\">//        XiaoMI &#123;&#125;</span></span><br><span class=\"line\"><span class=\"comment\">//        WanDouJia &#123;&#125;</span></span><br><span class=\"line\"><span class=\"comment\">//        Oppo &#123;&#125;</span></span><br><span class=\"line\"><span class=\"comment\">//        QiHu360 &#123;&#125;</span></span><br><span class=\"line\"><span class=\"comment\">//        HuaWei &#123;&#125;</span></span><br><span class=\"line\"><span class=\"comment\">//        YingYongBao &#123;&#125;</span></span><br><span class=\"line\"><span class=\"comment\">//        BaiDu &#123;&#125;</span></span><br><span class=\"line\"><span class=\"comment\">//        TaoBaoPP &#123;&#125;</span></span><br><span class=\"line\"><span class=\"comment\">//        MeiZu &#123;&#125;</span></span><br><span class=\"line\"><span class=\"comment\">//        GooglePlay &#123;&#125;</span></span><br><span class=\"line\"><span class=\"comment\">//        CoolChua &#123;&#125;</span></span><br><span class=\"line\"><span class=\"comment\">//        Pgyer &#123;&#125;</span></span><br><span class=\"line\"><span class=\"comment\">//        SAMSUNG &#123;&#125;</span></span><br><span class=\"line\"><span class=\"comment\">//        Lenovo &#123;&#125;</span></span><br><span class=\"line\"><span class=\"comment\">//        AppChina &#123;&#125;</span></span><br><span class=\"line\"><span class=\"comment\">//        Eoe &#123;&#125;</span></span><br><span class=\"line\"><span class=\"comment\">//        Haixin &#123;&#125;</span></span><br><span class=\"line\"><span class=\"comment\">//        Letv &#123;&#125;</span></span><br><span class=\"line\"><span class=\"comment\">//        WoStore &#123;&#125;</span></span><br><span class=\"line\"><span class=\"comment\">//        Gfan &#123;&#125;</span></span><br><span class=\"line\"><span class=\"comment\">//        Nduoa &#123;&#125;</span></span><br><span class=\"line\"><span class=\"comment\">//        MoguStore &#123;&#125;</span></span><br><span class=\"line\"><span class=\"comment\">//        MuMaYI &#123;&#125;</span></span><br><span class=\"line\"><span class=\"comment\">//        TianYi &#123;&#125;</span></span><br><span class=\"line\"><span class=\"comment\">//        LiQucn &#123;&#125;</span></span><br><span class=\"line\"><span class=\"comment\">//        AnZhuoYuan &#123;&#125;</span></span><br><span class=\"line\"><span class=\"comment\">//        Mopo &#123;&#125;</span></span><br><span class=\"line\"><span class=\"comment\">//        Ard9 &#123;&#125;</span></span><br><span class=\"line\"><span class=\"comment\">//        AppFun &#123;&#125;</span></span><br><span class=\"line\"><span class=\"comment\">//        AnBei &#123;&#125;</span></span><br><span class=\"line\"><span class=\"comment\">//        YingYongBei &#123;&#125;</span></span><br><span class=\"line\"><span class=\"comment\">//        AnFone &#123;&#125;</span></span><br><span class=\"line\"><span class=\"comment\">//        ZhuoLe &#123;&#125;</span></span><br><span class=\"line\"><span class=\"comment\">//        AndroidMarket &#123;&#125;</span></span><br><span class=\"line\"><span class=\"comment\">//        UC &#123;&#125;</span></span><br><span class=\"line\"><span class=\"comment\">//        MobileMarket &#123;&#125;</span></span><br><span class=\"line\"><span class=\"comment\">//        KaiQi &#123;&#125;</span></span><br><span class=\"line\"><span class=\"comment\">//        SouGou &#123;&#125;</span></span><br><span class=\"line\"><span class=\"comment\">//        AiQiYi &#123;&#125;</span></span><br><span class=\"line\"><span class=\"comment\">//        YunOS &#123;&#125;</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    productFlavors.all &#123;</span><br><span class=\"line\">        flavor -&gt; flavor.manifestPlaceholders = [UMENG_CHANNEL_VALUE: name]</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">//--------------------多渠道打包end---------------------</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//取出Link报错，否则无法打正式包</span></span><br><span class=\"line\">    lintOptions &#123;</span><br><span class=\"line\">        checkReleaseBuilds <span class=\"keyword\">false</span></span><br><span class=\"line\">        abortOnError <span class=\"keyword\">false</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//aar目录</span></span><br><span class=\"line\">    repositories &#123;</span><br><span class=\"line\">        flatDir &#123;</span><br><span class=\"line\">            dirs <span class=\"string\">'libs'</span>, <span class=\"string\">'../lib.aar/libs'</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">dependencies &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//file lib</span></span><br><span class=\"line\">    <span class=\"function\">compile <span class=\"title\">fileTree</span><span class=\"params\">(include: [<span class=\"string\">'*.jar'</span>], dir: <span class=\"string\">'libs'</span>)</span></span></span><br><span class=\"line\"><span class=\"function\">    <span class=\"comment\">//module lib</span></span></span><br><span class=\"line\"><span class=\"function\">    compile <span class=\"title\">project</span><span class=\"params\">(<span class=\"string\">':lib.aar'</span>)</span></span></span><br><span class=\"line\"><span class=\"function\">    <span class=\"comment\">//android lib</span></span></span><br><span class=\"line\"><span class=\"function\">    compile 'com.android.support:appcompat-v7:25.0.1'</span></span><br><span class=\"line\"><span class=\"function\">&#125;</span></span><br></pre></td></tr></table></figure>\n<p>这是平时自己用的配置，主要自定义了打包的文件名称，debug包使用release签名，以及多渠道打包</p>\n<h2 id=\"其他配置\"><a href=\"#其他配置\" class=\"headerlink\" title=\"其他配置\"></a>其他配置</h2><p>网络上的一篇配置</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">android &#123;</span><br><span class=\"line\">    compileSdkVersion <span class=\"number\">25</span></span><br><span class=\"line\">    buildToolsVersion <span class=\"string\">\"25.0.3\"</span></span><br><span class=\"line\">    defaultConfig &#123;</span><br><span class=\"line\">        applicationId <span class=\"string\">\"com.imliujun.gradle\"</span></span><br><span class=\"line\">        minSdkVersion <span class=\"number\">16</span></span><br><span class=\"line\">        targetSdkVersion <span class=\"number\">25</span></span><br><span class=\"line\">        <span class=\"function\">versionCode <span class=\"title\">gitVersionCode</span><span class=\"params\">()</span>  <span class=\"comment\">//获取 git 的 commit 次数</span></span></span><br><span class=\"line\"><span class=\"function\">        versionName rootProject.ext.versionName</span></span><br><span class=\"line\"><span class=\"function\">        manifestPlaceholders </span>= [UMENG_APP_KEY      : <span class=\"string\">\"填你的友盟 APP KEY\"</span>,</span><br><span class=\"line\">                                UMENG_CHANNEL_VALUE: <span class=\"string\">\"默认的渠道名\"</span>]</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    signingConfigs &#123;</span><br><span class=\"line\">\t<span class=\"comment\">//在这里配置相关的签名信息</span></span><br><span class=\"line\">        keyStore &#123;</span><br><span class=\"line\">            <span class=\"function\">storeFile <span class=\"title\">file</span><span class=\"params\">(<span class=\"string\">\"test.jks\"</span>)</span></span></span><br><span class=\"line\"><span class=\"function\">            storePassword \"111111\"</span></span><br><span class=\"line\"><span class=\"function\">            keyAlias \"test\"</span></span><br><span class=\"line\"><span class=\"function\">            keyPassword \"111111\"</span></span><br><span class=\"line\"><span class=\"function\">        &#125;</span></span><br><span class=\"line\"><span class=\"function\">    &#125;</span></span><br><span class=\"line\"><span class=\"function\">    buildTypes </span>&#123;</span><br><span class=\"line\">        release &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 不显示Log</span></span><br><span class=\"line\">            buildConfigField <span class=\"string\">\"boolean\"</span>, <span class=\"string\">\"LOG_DEBUG\"</span>, <span class=\"string\">\"false\"</span></span><br><span class=\"line\">            signingConfig signingConfigs.keyStore <span class=\"comment\">//设置签名文件</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        debug &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 显示Log</span></span><br><span class=\"line\">            buildConfigField <span class=\"string\">\"boolean\"</span>, <span class=\"string\">\"LOG_DEBUG\"</span>, <span class=\"string\">\"true\"</span></span><br><span class=\"line\">            versionNameSuffix <span class=\"string\">\"-debug\"</span>  <span class=\"comment\">//设置后缀</span></span><br><span class=\"line\">            signingConfig signingConfigs.keyStore  <span class=\"comment\">//设置签名文件</span></span><br><span class=\"line\">            manifestPlaceholders.UMENG_CHANNEL_VALUE = <span class=\"string\">\"test\"</span> <span class=\"comment\">//修改渠道名</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    productFlavors &#123;</span><br><span class=\"line\">        offline &#123;</span><br><span class=\"line\">            buildConfigField <span class=\"string\">\"String\"</span>, <span class=\"string\">\"DOMAIN_NAME\"</span>, <span class=\"string\">\"\\\"https://offline.domain.com/\\\"\"</span></span><br><span class=\"line\">            <span class=\"function\">versionName <span class=\"title\">getTestVersionName</span><span class=\"params\">()</span> <span class=\"comment\">//修改 versionName</span></span></span><br><span class=\"line\"><span class=\"function\">        &#125;</span></span><br><span class=\"line\"><span class=\"function\">        online </span>&#123;</span><br><span class=\"line\">            buildConfigField <span class=\"string\">\"String\"</span>, <span class=\"string\">\"DOMAIN_NAME\"</span>, <span class=\"string\">\"\\\"https://online.domain.com/\\\"\"</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        admin &#123;</span><br><span class=\"line\">            buildConfigField <span class=\"string\">\"String\"</span>, <span class=\"string\">\"DOMAIN_NAME\"</span>, <span class=\"string\">\"\\\"https://admin.domain.com/\\\"\"</span></span><br><span class=\"line\">            versionName rootProject.ext.versionName + <span class=\"string\">\"-管理员\"</span> <span class=\"comment\">//修改 versionName</span></span><br><span class=\"line\">            manifestPlaceholders.UMENG_CHANNEL_VALUE = <span class=\"string\">\"admin\"</span> <span class=\"comment\">//修改渠道名</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>根目录gradle文件配置</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ext &#123;</span><br><span class=\"line\">    versionName = <span class=\"string\">\"2.0.2\"</span></span><br><span class=\"line\">    testNum = <span class=\"string\">\"0001\"</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\">def <span class=\"title\">getTestVersionName</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> String.format(<span class=\"string\">\"%s.%s\"</span>, rootProject.ext.versionName,</span><br><span class=\"line\">            rootProject.ext.testNum)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">int</span> <span class=\"title\">gitVersionCode</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    def count = <span class=\"string\">\"git rev-list HEAD --count\"</span>.execute().text.trim()</span><br><span class=\"line\">    <span class=\"keyword\">return</span> count.isInteger() ? count.toInteger() : <span class=\"number\">0</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>与自己平时使用的有些细微差别，可以参看这篇文章<a href=\"http://www.imliujun.com/gradle1.html\" target=\"_blank\" rel=\"noopener\">http://www.imliujun.com/gradle1.html</a></p>\n<h2 id=\"小结\"><a href=\"#小结\" class=\"headerlink\" title=\"小结\"></a>小结</h2><p>结合两者相信可以定制出适合自己项目的gradle配置</p>\n<blockquote>\n<p>转载请指明出处RobinBlog：<a href=\"http://robinx.net/2017/07/20/Gradle的定制/\" target=\"_blank\" rel=\"noopener\">http://robinx.net/2017/07/20/Gradle的定制/</a></p>\n</blockquote>\n","categories":["Android"],"tags":["gradle"]},{"title":"Kotlin笔记","url":"http://yoursite.com/2017/06/26/Kotlin笔记/","content":"<h2 id=\"引言\"><a href=\"#引言\" class=\"headerlink\" title=\"引言\"></a>引言</h2><p>2017年的谷歌 I/O大会上，Android团队宣布Kotlin成为了Android平台的官方支持的编程语言。跟随时代的脚步，也马上的开始学习这门语言，过程中，记录一些要点，心得</p>\n<h2 id=\"基本语法\"><a href=\"#基本语法\" class=\"headerlink\" title=\"基本语法\"></a>基本语法</h2><p>直接看文档更合适：<a href=\"https://github.com/huanglizhuo/kotlin-in-chinese\" target=\"_blank\" rel=\"noopener\">https://github.com/huanglizhuo/kotlin-in-chinese</a></p>\n<h2 id=\"一些区别\"><a href=\"#一些区别\" class=\"headerlink\" title=\"一些区别\"></a>一些区别</h2><p>kotlin与java的一些直接的对比：<a href=\"https://github.com/MindorksOpenSource/from-java-to-kotlin/blob/master/README-ZH.md\" target=\"_blank\" rel=\"noopener\">https://github.com/MindorksOpenSource/from-java-to-kotlin</a></p>\n<h2 id=\"要点\"><a href=\"#要点\" class=\"headerlink\" title=\"要点\"></a>要点</h2><p>下面是个人学习kotlin开发的时候的一些心得与要点</p>\n<h3 id=\"属性\"><a href=\"#属性\" class=\"headerlink\" title=\"属性\"></a>属性</h3><ul>\n<li><p>kotlin的实体类默认实现了get set方法，直接通过<code>.</code>号取值赋值</p>\n</li>\n<li><p>kotlin定义变量的时候有 <code>var</code> <code>val</code>两种，<code>var</code>是普通变量，<code>val</code>是只读变量，即java中的<code>final</code></p>\n</li>\n<li><p>kotlin类中的上下文，eg:<code>MainActivity.this</code>,用kotlin表示:<code>this@MainActivity</code></p>\n</li>\n<li><p><code>?</code>符号是个神器，参见上面给出的文档，但是有些时候要注意下，比如我们定义一个变量<br><br> <code>private var mContext: Context? = null</code><br><br>那么下次在使用的时候，需要你确认它不为null，需要这样写mContext!!，写的地方多就会嫌麻烦,那么你可以这样定义，避免这个问题<br><br> <code>lateinit internal var mContext: Context</code></p>\n</li>\n</ul>\n<h3 id=\"方法\"><a href=\"#方法\" class=\"headerlink\" title=\"方法\"></a>方法</h3><ul>\n<li>静态方法定义:<br><br>利用伴随对象<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">companion object &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\">fun <span class=\"title\">callIntent</span><span class=\"params\">(context: Context, folder: Folder)</span>: Intent </span>&#123;</span><br><span class=\"line\">            val intent = Intent(context, PlayListDetailsActivity::<span class=\"class\"><span class=\"keyword\">class</span>.<span class=\"title\">java</span>)</span></span><br><span class=\"line\"><span class=\"class\">            <span class=\"title\">intent</span>.<span class=\"title\">putExtra</span>(<span class=\"title\">EXTRA_FOLDER</span>, <span class=\"title\">folder</span>)</span></span><br><span class=\"line\"><span class=\"class\">            <span class=\"title\">return</span> <span class=\"title\">intent</span></span></span><br><span class=\"line\"><span class=\"class\">        &#125;</span></span><br><span class=\"line\"><span class=\"class\">    &#125;</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"类\"><a href=\"#类\" class=\"headerlink\" title=\"类\"></a>类</h3><ul>\n<li>class调用:<br><br>java:<code>PlayListDetailsActivity.class</code><br>kotlin:<code>PlayListDetailsActivity::class.java</code></li>\n</ul>\n<h3 id=\"接口\"><a href=\"#接口\" class=\"headerlink\" title=\"接口\"></a>接口</h3><ul>\n<li><p>kotlin的接口就流弊了，接口中可以有函数体，这点java做不到，利用这个特性，我们可以做很多解耦的工作，比如只要实现一个接口，我们就能使用它内部定义好的功能函数，非常nice<br></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">Toaster</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\">fun <span class=\"title\">toast</span><span class=\"params\">(context: Context,string: String)</span></span>&#123;</span><br><span class=\"line\">        Toast.makeText(context,string,Toast.LENGTH_SHORT).show()</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>实现回调与监听:<br><br>利用<code>object</code>关键字通过<code>:</code>实现这个接口，重新内部抽象函数<br></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">adapter.setOnItemClickListener(object : OnItemClickListener &#123;</span><br><span class=\"line\">            <span class=\"function\">override fun <span class=\"title\">onItemClick</span><span class=\"params\">(itemView: View?, viewType: Int, position: Int)</span> </span>&#123;</span><br><span class=\"line\">                RxBus.get().post(PlayListNowEvent(mPlayList!!, position))</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;)</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"抽象类\"><a href=\"#抽象类\" class=\"headerlink\" title=\"抽象类\"></a>抽象类</h3><ul>\n<li>实现抽象类函数:<br><br>利用<code>object</code>关键字通过<code>:</code>继承这个抽象类，重新内部抽象函数，要注意的是类名后面要加<code>()</code>这是与接口的区别<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">view_pager.addOnPageChangeListener(object : ViewPager.SimpleOnPageChangeListener() &#123;</span><br><span class=\"line\">         <span class=\"function\">override fun <span class=\"title\">onPageSelected</span><span class=\"params\">(position: Int)</span> </span>&#123;</span><br><span class=\"line\">             radioButtons[position].isChecked = <span class=\"keyword\">true</span></span><br><span class=\"line\">         &#125;</span><br><span class=\"line\">     &#125;)</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h3 id=\"其他点\"><a href=\"#其他点\" class=\"headerlink\" title=\"其他点\"></a>其他点</h3><ul>\n<li>懒加载,lazy内部代码执行时间为这个变量第一次使用的时候<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">private</span> val mTitles by lazy &#123; resources.getStringArray(R.array.mp_main_titles) &#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"小结\"><a href=\"#小结\" class=\"headerlink\" title=\"小结\"></a>小结</h2><p>不间断补充，Kotlin这门语言用着目前感受不错，以后再慢慢深入吧</p>\n<blockquote>\n<p>转载请指明出处RobinBlog：<a href=\"http://robinx.net/2017/06/26/Kotlin笔记/\" target=\"_blank\" rel=\"noopener\">http://robinx.net/2017/06/26/Kotlin笔记/</a></p>\n</blockquote>\n","categories":["Android","Kotlin"],"tags":["kotlin","语言"]},{"title":"企业App架构组件分层","url":"http://yoursite.com/2017/03/06/企业App架构组件分层/","content":"<h2 id=\"引言\"><a href=\"#引言\" class=\"headerlink\" title=\"引言\"></a>引言</h2><p>上一篇说了Android app 架构，主要方向是组件化。这篇说说企业App的组件化细分，主要是一些个人经验以及建议</p>\n<h2 id=\"组件化与模块化\"><a href=\"#组件化与模块化\" class=\"headerlink\" title=\"组件化与模块化\"></a>组件化与模块化</h2><p>我们会经常看到这两个概念“组件化”，“模块化”，要说他们的详细区别也不好说，都是一个个library module。其实是有区别的，理解清楚才能让我们的app架构更清晰</p>\n<h2 id=\"组件化\"><a href=\"#组件化\" class=\"headerlink\" title=\"组件化\"></a>组件化</h2><p>“组件”英文翻译过来是<code>Component</code>，从字面意思，我们理解为一个组成单元，且不能再往下拆分，这是重点，例如：“图片加载”组件，它有什么特点：</p>\n<ul>\n<li>可复用</li>\n<li>可替换</li>\n<li>独立 （与其他组件不存在依赖关系）</li>\n<li>不可拆分 （业务代码不能再向下拆分）</li>\n</ul>\n<p>针对以上所说，随便举几个例子，有哪些常见的组件：</p>\n<pre><code>1. 图片加载组件\n2. 图片上传组件\n3. 日志组件\n4. 会话组件\n5. 网络请求组件\n6. 数据库操作组件\n7. app更新组件\n8. 地图组件\n9. 等等...\n</code></pre><h2 id=\"模块化\"><a href=\"#模块化\" class=\"headerlink\" title=\"模块化\"></a>模块化</h2><p>组件化搞清楚，模块化就不难理解了，英文翻译过来是<code>Module</code>，它是一个具体的业务，具体的业务包含一个或多个组件，例如：钱包模块，它的大体特点：</p>\n<ul>\n<li>可以是一个具体的大型业务</li>\n<li>可以是架构组成的其中一个技术模块</li>\n<li>可以是几个组件的功能集合</li>\n</ul>\n<p>常见的模块示例：</p>\n<pre><code>1. 钱包模块\n2. 即时通讯模块\n3. 支付模块\n4. 扫码模块\n5. 等等...\n</code></pre><h2 id=\"App架构组成\"><a href=\"#App架构组成\" class=\"headerlink\" title=\"App架构组成\"></a>App架构组成</h2><p>组件化与模块化搞清楚后我们就开始说详细的架构</p>\n<h3 id=\"1-宿主\"><a href=\"#1-宿主\" class=\"headerlink\" title=\"1.宿主\"></a>1.宿主</h3><p>宿主就是我们的主工程，它是一个壳，可能包含一些业务，大部分或者全部业务都被下面的模块包揽，它只要依赖不同的模块即可。</p>\n<h4 id=\"命名\"><a href=\"#命名\" class=\"headerlink\" title=\"命名\"></a>命名</h4><p>AndroidStudio默认命名为<code>app</code>，可自己随意取，个人习惯用默认的命名</p>\n<h3 id=\"2-组件\"><a href=\"#2-组件\" class=\"headerlink\" title=\"2.组件\"></a>2.组件</h3><p>新开发一个App，首先准备好需要用到的组件</p>\n<ul>\n<li>网络请求组件</li>\n<li>图片加载组件</li>\n<li>图片上传组件</li>\n<li>动态权限组件</li>\n<li>app更新组件</li>\n<li>事件总线组件</li>\n<li>工具类组件</li>\n<li>自定义View组件</li>\n<li>等等…根据个人需求增删</li>\n</ul>\n<h4 id=\"命名-1\"><a href=\"#命名-1\" class=\"headerlink\" title=\"命名\"></a>命名</h4><p>关于组件的命名，个人一般喜欢<code>lib.xxx</code>,也可以<code>component.xxx</code>，加前缀一是起到分类作用，二是可读性较强</p>\n<h3 id=\"3-模块\"><a href=\"#3-模块\" class=\"headerlink\" title=\"3.模块\"></a>3.模块</h3><p>模块涉及到具体业务，示例：</p>\n<ul>\n<li>购物车模块</li>\n<li>商品模块</li>\n<li>结算模块</li>\n<li>支付模块</li>\n<li>钱包模块</li>\n<li>即时通讯模块</li>\n<li>等等…根据业务种类拆分</li>\n</ul>\n<h4 id=\"命名-2\"><a href=\"#命名-2\" class=\"headerlink\" title=\"命名\"></a>命名</h4><p>模块的命名，一般是<code>module.xxx</code>,命名可根据自己喜好，这里只是个人见解</p>\n<h3 id=\"4-公共Library\"><a href=\"#4-公共Library\" class=\"headerlink\" title=\"4.公共Library\"></a>4.公共Library</h3><p>app少不了一些多个module都依赖的一些组件，一般我们把这些组件放在一个公共的library module中，其他用到这些组件的module，可以直接依赖，这就是公共库</p>\n<h4 id=\"命名-3\"><a href=\"#命名-3\" class=\"headerlink\" title=\"命名\"></a>命名</h4><p>命名一般是<code>lib.common</code></p>\n<h3 id=\"5-路由\"><a href=\"#5-路由\" class=\"headerlink\" title=\"5.路由\"></a>5.路由</h3><p>组件化的核心就是路由，module与module之间的无依赖通信全靠它，路由的选择，上篇文章有介绍</p>\n<h2 id=\"小结\"><a href=\"#小结\" class=\"headerlink\" title=\"小结\"></a>小结</h2><p>架构组成基本上就上面说的这些，还有一些注意点：</p>\n<ul>\n<li>组件之间独立无依赖</li>\n<li>模块之间独立无依赖，模块与模块通信使用路由</li>\n<li>模块业务清晰，独立，一个模块负责一个功能，就是我们常说的单一原则</li>\n</ul>\n<blockquote>\n<p>转载请指明出处RobinBlog：<a href=\"http://robinx.net/2017/03/06/企业App架构组件分层/\" target=\"_blank\" rel=\"noopener\">http://robinx.net/2017/03/06/企业App架构组件分层/</a></p>\n</blockquote>\n","categories":["Android"],"tags":["架构","组件"]},{"title":"Android架构","url":"http://yoursite.com/2017/03/02/Android架构/","content":"<h2 id=\"引言\"><a href=\"#引言\" class=\"headerlink\" title=\"引言\"></a>引言</h2><p>以下的app项目结构，相信大家都写过<br></p>\n<pre><code>|--package\n   |--activity\n   |--adapter\n   |--constants\n   |--dao\n   |--entity\n   |--fragment\n   |--utils\n   |--view\n</code></pre><p>相同功能的类都放在同一个包中，耦合也特别严重，当工作了一段时间后，随着技术提升，我们知道了高内聚，低耦合，其中解耦是个非常重要的过程。这就涉及到了今天的主题：app架构</p>\n<h2 id=\"为什么要重视解耦，重视架构\"><a href=\"#为什么要重视解耦，重视架构\" class=\"headerlink\" title=\"为什么要重视解耦，重视架构\"></a>为什么要重视解耦，重视架构</h2><p>这个有一定的Android开发经验的都知道，在开发完成后，我们的工作是维护，版本的升级，功能修改，功能增加，功能废除，如果类似引言中的项目结构，随便小改一下，其他模块随之就要改变，牵一发动全身。维护艰难，成本高昂。</p>\n<h2 id=\"Android-module架构\"><a href=\"#Android-module架构\" class=\"headerlink\" title=\"Android module架构\"></a>Android module架构</h2><p>良好的架构无疑会简化app结构，层次分明，降低维护成本，开发起来也得心应手。</p>\n<ul>\n<li>MVC 最常见的，引言中的项目结构就是一个mvc</li>\n<li>MVP 近两年Android小伙伴们推崇的架构</li>\n<li>Flux FaceBook提出的Android架构，没尝试过，基于事件总线通信，个人不太喜欢</li>\n<li>Clean 关于Clean框架的介绍，网上也有不少，尝试写过，分层明确，在mvp架构基础上更加深入解耦，但同时也带来一些负面的东西，比如逻辑的复杂性，写一般的小型app，没必要使用，因为太麻烦了，直观感受。</li>\n</ul>\n<p>以上只是一个Android Moudle中使用的架构。Flux，Clean暂且不说，MVP优化module内部的解耦，可以尝试。</p>\n<h2 id=\"Android-project架构\"><a href=\"#Android-project架构\" class=\"headerlink\" title=\"Android project架构\"></a>Android project架构</h2><p>module的架构优化只能提升module内部的解耦工作。当一个app由多人协同开发，内部有多个module的时候，问题就暴露的更多了。</p>\n<p>AndroidStudio 引入module概念，其实就是模块化，一个module一个功能。</p>\n<p>举个例子：一款简易商城app，我们可以简单分为以下几个模块</p>\n<ol>\n<li>主module，壳工程，依赖以下模块</li>\n<li>搜索模块</li>\n<li>购物车模块</li>\n<li>结算模块</li>\n<li>钱包模块</li>\n<li>商品模块</li>\n<li>升级模块</li>\n</ol>\n<p>这样每个人负责一个或多个模块，互不干扰，看起来蛮不错的，结构分明。但是不能高兴太早，这只能算简单的app分块，当app越来越复杂的时候，module与module之间会不可避免的也会存在相互依赖，就像滚雪球一样，会变得越来越不可控，修改了一个模块，要花费心思寻找所有依赖module A的module N是否会出现问题,当需要删除一个模块的时候，所有依赖的module也都会报错。错综复杂。</p>\n<p>因此，在app project架构上还要花心思。从去年开始，圈中从插件化流向组件化，因为相比于插件化，组件化不会过多的涉及编译层的问题，开发透明。组件化其中重要的一个概念叫“路由”<br>关于组件化，我也一直在思考。这两天正好看到了一片说组件化的文章，说的非常好，而且给出了代码，感兴趣的可以去看看，传送门：<a href=\"http://blog.spinytech.com/2016/12/28/android_modularization/\" target=\"_blank\" rel=\"noopener\">Android架构思考(模块化、多进程)</a></p>\n<p>github上也有许多人开源出了不同的路由库，但是基本上都只涉及到了Activity之间的跳转。对于通信这块考虑的并不够。上文的方案可以很好的解决这方面问题，而且给出了多进程间通信的问题解决方案，很nice。</p>\n<h2 id=\"小结\"><a href=\"#小结\" class=\"headerlink\" title=\"小结\"></a>小结</h2><p>关于Android的架构，按照以上所说，基本可以很好的优化，当然适用于大型项目，类似外包这种快速小型项目，那就没必要了。</p>\n<blockquote>\n<p>转载请指明出处RobinBlog：<a href=\"http://robinx.net/2017/03/02/Android架构/\" target=\"_blank\" rel=\"noopener\">http://robinx.net/2017/03/02/Android架构/</a></p>\n</blockquote>\n","categories":["Android"],"tags":["架构"]},{"title":"RecyclerView专题","url":"http://yoursite.com/2017/02/14/RecyclerView专题/","content":"<h2 id=\"看见一个不错的RecyclerView整理\"><a href=\"#看见一个不错的RecyclerView整理\" class=\"headerlink\" title=\"看见一个不错的RecyclerView整理\"></a>看见一个不错的RecyclerView整理</h2><ul>\n<li><a href=\"https://gold.xitu.io/post/5856825c1b69e6006c96a58b\" target=\"_blank\" rel=\"noopener\">卡片层叠布局，仿探探、人人影视订阅界面 简单&amp;优雅：LayoutManager+ItemTouchHelper - mcxtzhang - 掘金专栏</a></li>\n<li><a href=\"http://group.jobbole.com/22143/?utm_source=android.jobbole.com&amp;utm_medium=sidebar-group-topic\" target=\"_blank\" rel=\"noopener\">打造最强RecyclerView，Item侧滑菜单，长按拖拽Item，滑动删除Item - 小组 - 伯乐在线</a></li>\n<li><a href=\"https://github.com/zaihuishou/ExpandableRecyclerview\" target=\"_blank\" rel=\"noopener\">可折叠展开的ExpandableRecycleradapter</a></li>\n<li><a href=\"http://mp.weixin.qq.com/s?__biz=MzAxMTI4MTkwNQ==&amp;mid=2650820629&amp;idx=1&amp;sn=dafee7298419df6c9161368db7f7198d&amp;scene=0#wechat_redirect\" target=\"_blank\" rel=\"noopener\">对RecyclerView Item做动画</a></li>\n<li><a href=\"http://mp.weixin.qq.com/s/CzrKotyupXbYY6EY2HP_dA\" target=\"_blank\" rel=\"noopener\">RecyclerView 必知必会</a></li>\n<li><a href=\"http://blog.csdn.net/leejizhou/article/details/50742544\" target=\"_blank\" rel=\"noopener\">RecyclerView的使用（3）之添加Header和Footer - 李济洲的博客 - 博客频道 - CSDN.NET</a></li>\n<li><a href=\"http://kymjs.com/code/2016/07/10/01\" target=\"_blank\" rel=\"noopener\">深入浅出 RecyclerView|开源实验室-张涛</a></li>\n<li><a href=\"https://gold.xitu.io/entry/581324a267f3560058523526\" target=\"_blank\" rel=\"noopener\">掌握自定义 LayoutManager(一) 系列开篇 常见误区、问题、注意事项，常用 API。</a></li>\n<li><a href=\"http://mp.weixin.qq.com/s/sJtHfaslJZoxYDiqfieXDg\" target=\"_blank\" rel=\"noopener\">掌握自定义LayoutManager之实现流式布局</a></li>\n<li><a href=\"https://gold.xitu.io/entry/582ad543570c35006cdc812a\" target=\"_blank\" rel=\"noopener\">Android 复杂的列表视图新写法</a></li>\n<li><a href=\"http://mp.weixin.qq.com/s?__biz=MzA5MzI3NjE2MA==&amp;mid=2650236424&amp;idx=1&amp;sn=3f70ba16b7cc4c2301a128eb743598ae&amp;scene=0#wechat_redirect\" target=\"_blank\" rel=\"noopener\">SuperRecyclerView，只为打造出更好用的RecyclerView</a></li>\n<li><a href=\"http://android.jobbole.com/83410/\" target=\"_blank\" rel=\"noopener\">那些酷炫的RecyclerView开源库整理</a></li>\n<li><a href=\"http://mp.weixin.qq.com/s?__biz=MzAxMTI4MTkwNQ==&amp;mid=2650820355&amp;idx=1&amp;sn=a9cae8d5d9d607d691715b93a35fecc3&amp;scene=0#wechat_redirect\" target=\"_blank\" rel=\"noopener\">针对RecyclerView打造属于你的LayoutManager</a></li>\n<li><a href=\"http://blog.csdn.net/wuhengde/article/details/46833967\" target=\"_blank\" rel=\"noopener\"> RecyclerView缓存的问题</a></li>\n<li><a href=\"http://www.jianshu.com/p/32c963b1ebc1\" target=\"_blank\" rel=\"noopener\">Android 踩坑记录（一）- Recyclerview的缓存机制</a></li>\n<li><a href=\"http://mojijs.com/2016/07/217437/index.html\" target=\"_blank\" rel=\"noopener\">RecyclerView解析</a></li>\n<li><a href=\"http://mp.weixin.qq.com/s/o_Hu8ZT1XayNMZ6fM6rk-g\" target=\"_blank\" rel=\"noopener\">控制RecyclerView Item停留位置（居中？左对齐？）</a></li>\n<li><a href=\"http://www.jianshu.com/p/4f554aba2bec\" target=\"_blank\" rel=\"noopener\">RecyclerView定制：通用ItemDecoration及全展开RecyclerView的实现</a></li>\n</ul>\n<blockquote>\n<p>转载请指明出处RobinBlog：<a href=\"http://robinx.net/2017/02/14/RecyclerView专题/\" target=\"_blank\" rel=\"noopener\">http://robinx.net/2017/02/14/RecyclerView专题/</a></p>\n</blockquote>\n","categories":["Android"],"tags":["RecyclerView","专题"]},{"title":"2017继续扬帆","url":"http://yoursite.com/2017/02/03/2017继续扬帆/","content":"<p>先祝大家新年快乐(^o^)/，今天2017过完年来第一天上班，路上还是蛮冷清的。都还沉浸在过年中</p>\n<h2 id=\"2016年总结\"><a href=\"#2016年总结\" class=\"headerlink\" title=\"2016年总结\"></a>2016年总结</h2><ul>\n<li>房子拿了，解决了一半人生大事，这一年过的比较平静，除了房子的事情，大体来说算蛮开心的，技术水平有增长，但是不多，感觉自己已经到了瓶颈</li>\n<li>恭喜合肥上了全球房价涨幅排行榜，干掉了全国第一，顺便拿了全球第一(＃－－)/ .。合肥市市长怎么说来着，我们一定要把放假控制在2w以内，现在是哈哈哒了(─.─|||，说到房子就心累。</li>\n<li>2016年是互联网寒冬，程序员工作不好找，好几个小伙伴找工作找的比较累。特别是北上广，培训班出来的初级人员太多，现在找员工不像以前那样难招，但是水平高的也不是很多。至于后面是什么发展方向，俺也不知道了，只有不断的提升自己，才能不变应万变</li>\n<li>微信小程序上线了，至于发展成什么样子，咱们走着看，目前没有学习的倾向</li>\n<li>2016年VR技术是个爆发期，各大互联网公司都投入了研发中，来扫张敬业福吧~</li>\n<li>要问耍猴哪家强，小米雷军黎万强，我只是想买个手机而已，各种没货</li>\n</ul>\n<h2 id=\"2017年继续努力\"><a href=\"#2017年继续努力\" class=\"headerlink\" title=\"2017年继续努力\"></a>2017年继续努力</h2><p>好好学习天天向上，新的一年，学习新的技术╰(￣▽￣)╮，祝大家都能不断的提升自己，事业有成</p>\n","categories":["随笔"],"tags":["2017"]},{"title":"App开发中的内存缓存","url":"http://yoursite.com/2017/01/03/App开发中的内存缓存/","content":"<p>缓存对于老司机来说应该不陌生，对于初学者来说接触的应该不多。</p>\n<h2 id=\"缓存的作用\"><a href=\"#缓存的作用\" class=\"headerlink\" title=\"缓存的作用\"></a>缓存的作用</h2><ul>\n<li>优化加载速度</li>\n<li>减少频繁的网络请求，减少并发，减少服务器压力</li>\n<li>节省用户流量</li>\n</ul>\n<h2 id=\"缓存的常用场景\"><a href=\"#缓存的常用场景\" class=\"headerlink\" title=\"缓存的常用场景\"></a>缓存的常用场景</h2><ol>\n<li>图片请求框架应该是最常见的了，<code>UIL</code>，<code>Picasso</code>，<code>Glide</code>,<code>Fresco</code>等基本上都是2级缓存（磁盘，内存）</li>\n<li>接口数据量大，且更新不是特别频繁的数据，可以进行缓存。例如：电商App主页</li>\n<li>当然也可以做永久缓存，代替<code>SharedPreference</code>存储相关数据<h2 id=\"缓存的类型\"><a href=\"#缓存的类型\" class=\"headerlink\" title=\"缓存的类型\"></a>缓存的类型</h2></li>\n</ol>\n<p>Android中常见的缓存类型基本上就2种</p>\n<ul>\n<li>内存缓存</li>\n<li>磁盘缓存</li>\n</ul>\n<h2 id=\"内存缓存\"><a href=\"#内存缓存\" class=\"headerlink\" title=\"内存缓存\"></a>内存缓存</h2><p>本篇我们先讨论内存缓存<code>MemoryCahce</code></p>\n<h3 id=\"内存缓存的实现方式\"><a href=\"#内存缓存的实现方式\" class=\"headerlink\" title=\"内存缓存的实现方式\"></a>内存缓存的实现方式</h3><p>内存缓存的实现很简单，本质就是存在一个变量，变量处于内存中，所以我们管它叫内存缓存，常见实现方式为<code>Map</code>存储变量，Android 的SDK目前已经内置了内存缓存<code>LruCache</code>,在V4包中也有这样一个类，区别是V4包中多了一个方法，其他一样。查看这个类的源码会发现内存存储变量的容器就是一个<code>Map</code></p>\n<h3 id=\"内存缓存策略\"><a href=\"#内存缓存策略\" class=\"headerlink\" title=\"内存缓存策略\"></a>内存缓存策略</h3><p>缓存的容量会有一个最大值限制，不可能无限缓存变量，当内存满的时候，我们需要移出一些旧的数据，怎么判定移除哪一个数据，这就需要一个算法来计算，我们称之为策略，策略有多种</p>\n<ul>\n<li><code>FIFO</code> FirstInFirstOut，先进先出算法，当内存满时，移除最先存入队列entry</li>\n<li><code>Largest</code>，最大使用算法，当内存满时，移除占空间最大的entry</li>\n<li><code>LFU</code> LeastFrequentlyUsed，最低使用频率算法，当内存满时，移除使用频率最低的entry</li>\n<li><code>LRU</code> LeastRecentlyUsed，近期最少使用算法，当内存满时，移除最近使用频率最低的entry(LFU基础上更加完善)</li>\n</ul>\n<p>Android SDK中的<code>LruCache</code>看名字就知道是实现了<code>LRU</code>策略</p>\n<h3 id=\"自己实现内存缓存\"><a href=\"#自己实现内存缓存\" class=\"headerlink\" title=\"自己实现内存缓存\"></a>自己实现内存缓存</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">PolicyMemoryCache</span>&lt;<span class=\"title\">K</span>, <span class=\"title\">V</span>&gt; <span class=\"keyword\">implements</span> <span class=\"title\">MemoryCache</span>&lt;<span class=\"title\">K</span>, <span class=\"title\">V</span>&gt; </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> MAX_NORMAL_CACHE_SIZE_IN_MB = <span class=\"number\">16</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> SIZE_UNIT_MB = <span class=\"number\">1024</span> * <span class=\"number\">1024</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> MAX_NORMAL_CACHE_SIZE = MAX_NORMAL_CACHE_SIZE_IN_MB * SIZE_UNIT_MB;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> sizeLimit;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> String TAG = <span class=\"string\">\"memory cache\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> AtomicInteger cacheSize;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"keyword\">final</span> Map&lt;K, V&gt; mMap = Collections.synchronizedMap(<span class=\"keyword\">new</span> LinkedHashMap&lt;K, V&gt;());</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">PolicyMemoryCache</span><span class=\"params\">(<span class=\"keyword\">int</span> sizeLimit)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.sizeLimit = sizeLimit;</span><br><span class=\"line\"></span><br><span class=\"line\">        cacheSize = <span class=\"keyword\">new</span> AtomicInteger();</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (sizeLimit &gt; MAX_NORMAL_CACHE_SIZE) &#123;</span><br><span class=\"line\">            Log.w(TAG, <span class=\"string\">\"You set too large memory cache size (more than %1$d Mb)\"</span> + MAX_NORMAL_CACHE_SIZE_IN_MB);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">put</span><span class=\"params\">(K key, V value)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">boolean</span> putSuccessfully = <span class=\"keyword\">false</span>;</span><br><span class=\"line\">        <span class=\"comment\">// Try to add value to hard cache</span></span><br><span class=\"line\">        <span class=\"keyword\">int</span> valueSize = safeSizeOf(key, value);</span><br><span class=\"line\">        <span class=\"keyword\">int</span> sizeLimit = getSizeLimit();</span><br><span class=\"line\">        <span class=\"keyword\">int</span> curCacheSize = cacheSize.get();</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (valueSize &lt; sizeLimit) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">while</span> (curCacheSize + valueSize &gt; sizeLimit) &#123;</span><br><span class=\"line\">                K removeKey = removeNext();</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (removeKey == <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                V v = mMap.remove(removeKey);</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (v != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">                    curCacheSize = cacheSize.addAndGet(-safeSizeOf(removeKey, v)); <span class=\"comment\">//cacheSize--</span></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            mMap.put(key, value);</span><br><span class=\"line\">            cacheSize.addAndGet(valueSize);</span><br><span class=\"line\">            putSuccessfully = <span class=\"keyword\">true</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> putSuccessfully;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> V <span class=\"title\">remove</span><span class=\"params\">(K key)</span> </span>&#123;</span><br><span class=\"line\">        V v = mMap.remove(key);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (v != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">            cacheSize.addAndGet(-safeSizeOf(key, v)); <span class=\"comment\">//cacheSize--</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> v;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> V <span class=\"title\">get</span><span class=\"params\">(K key)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> mMap.get(key);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">clear</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        mMap.clear();</span><br><span class=\"line\">        cacheSize.set(<span class=\"number\">0</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">int</span> <span class=\"title\">getSizeLimit</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> sizeLimit;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> Collection&lt;K&gt; <span class=\"title\">keys</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">synchronized</span> (mMap) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> HashSet&lt;K&gt;(mMap.keySet());</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">int</span> <span class=\"title\">safeSizeOf</span><span class=\"params\">(K key, V value)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> result = sizeOf(key, value);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (result &lt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> IllegalStateException(<span class=\"string\">\"Negative size: \"</span> + key + <span class=\"string\">\"=\"</span> + value);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">print</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">/*Iterator&lt;Map.Entry&lt;K, V&gt;&gt; iterator = mMap.entrySet().iterator();</span></span><br><span class=\"line\"><span class=\"comment\">        while (iterator.hasNext()) &#123;</span></span><br><span class=\"line\"><span class=\"comment\">            System.out.println(iterator.next().getValue());</span></span><br><span class=\"line\"><span class=\"comment\">        &#125;*/</span></span><br><span class=\"line\">        System.out.println(<span class=\"string\">\"mMap:\"</span>+mMap);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">int</span> <span class=\"title\">sizeOf</span><span class=\"params\">(K key, V value)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> size = <span class=\"number\">1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (value <span class=\"keyword\">instanceof</span> String) &#123;</span><br><span class=\"line\">            size = ((String) value).getBytes().length;</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (value <span class=\"keyword\">instanceof</span> Bitmap) &#123;</span><br><span class=\"line\">            Bitmap bitmapValue = (Bitmap) value;</span><br><span class=\"line\">            <span class=\"comment\">//size = bitmapValue.getRowBytes() * bitmapValue.getHeight();</span></span><br><span class=\"line\">            size = (<span class=\"keyword\">int</span>) sizeOf(bitmapValue);</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (value <span class=\"keyword\">instanceof</span> Serializable) &#123;</span><br><span class=\"line\">            Serializable serializableValue =(Serializable) value;</span><br><span class=\"line\">            size = (<span class=\"keyword\">int</span>) sizeOf(serializableValue);</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (value <span class=\"keyword\">instanceof</span> Iterable) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (Object item : ((Iterable) value)) &#123;</span><br><span class=\"line\">                size += sizeOf(key, (V) item);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> size;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">long</span> <span class=\"title\">sizeOf</span><span class=\"params\">(Serializable serial)</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (serial == <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">long</span> size = -<span class=\"number\">1</span>;</span><br><span class=\"line\">        ByteArrayOutputStream baos = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">        ObjectOutputStream oos = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            baos = <span class=\"keyword\">new</span> ByteArrayOutputStream();</span><br><span class=\"line\">            oos = <span class=\"keyword\">new</span> ObjectOutputStream(baos);</span><br><span class=\"line\">            oos.writeObject(serial);</span><br><span class=\"line\">            oos.flush();</span><br><span class=\"line\">            size = baos.size();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (FileNotFoundException e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> SizeCalculateException(e.getMessage());</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (NotSerializableException e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> SizeCalculateException(<span class=\"string\">\"Cache object does not implement serializable interface\"</span>);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">finally</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                oos.close();</span><br><span class=\"line\">                baos.close();</span><br><span class=\"line\">            &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">                e.printStackTrace();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> size;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">long</span> <span class=\"title\">sizeOf</span><span class=\"params\">(Bitmap bitmap)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (bitmap == <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">long</span> size = -<span class=\"number\">1</span>;</span><br><span class=\"line\">        ByteArrayOutputStream baos = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            baos = <span class=\"keyword\">new</span> ByteArrayOutputStream();</span><br><span class=\"line\">            bitmap.compress(Bitmap.CompressFormat.PNG, <span class=\"number\">100</span>, baos);</span><br><span class=\"line\">            size = baos.size();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">finally</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                baos.close();</span><br><span class=\"line\">            &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">                e.printStackTrace();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> size;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">abstract</span> K <span class=\"title\">removeNext</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这是一个基类，实现了变量的存储，取出，变量大小计算，抽象了removeNext函数返回需要移除的entry的Key，由子类实现策略</p>\n<p>下面看看<code>Largest</code>策略的实现</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">LargestMemoryCache</span>&lt;<span class=\"title\">K</span>, <span class=\"title\">V</span>&gt; <span class=\"keyword\">extends</span> <span class=\"title\">PolicyMemoryCache</span>&lt;<span class=\"title\">K</span>, <span class=\"title\">V</span>&gt; </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> Map&lt;K, Integer&gt; valueSizes = Collections.synchronizedMap(<span class=\"keyword\">new</span> HashMap&lt;K, Integer&gt;());</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">LargestMemoryCache</span><span class=\"params\">(<span class=\"keyword\">int</span> sizeLimit)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>(sizeLimit);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">put</span><span class=\"params\">(K key, V value)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"keyword\">super</span>.put(key, value)) &#123;</span><br><span class=\"line\">            valueSizes.put(key, safeSizeOf(key, value));</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> V <span class=\"title\">remove</span><span class=\"params\">(K key)</span> </span>&#123;</span><br><span class=\"line\">        valueSizes.remove(key);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">super</span>.remove(key);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">clear</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        valueSizes.clear();</span><br><span class=\"line\">        <span class=\"keyword\">super</span>.clear();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> K <span class=\"title\">removeNext</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        Integer maxSize = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">        K largestKey = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">        Set&lt;Entry&lt;K, Integer&gt;&gt; entries = valueSizes.entrySet();</span><br><span class=\"line\">        <span class=\"keyword\">synchronized</span> (valueSizes) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (Entry&lt;K, Integer&gt; entry : entries) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (largestKey == <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">                    maxSize = entry.getValue();</span><br><span class=\"line\">                    largestKey = entry.getKey();</span><br><span class=\"line\">                &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                    Integer size = entry.getValue();</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (size &gt; maxSize) &#123;</span><br><span class=\"line\">                        maxSize = size;</span><br><span class=\"line\">                        largestKey = entry.getKey();</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        valueSizes.remove(largestKey);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> largestKey;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>在put变量的时候使用Map存储了每个变量的大小，在removeNext中计算出当前存储变量中size最大的一个Entry的key。</p>\n<p>再看看<code>LFU</code>的策略实现</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">LFUMemoryCache</span>&lt;<span class=\"title\">K</span>, <span class=\"title\">V</span>&gt; <span class=\"keyword\">extends</span> <span class=\"title\">PolicyMemoryCache</span>&lt;<span class=\"title\">K</span>, <span class=\"title\">V</span>&gt; </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> Map&lt;K, Integer&gt; usingCounts = Collections.synchronizedMap(<span class=\"keyword\">new</span> HashMap&lt;K, Integer&gt;());</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">LFUMemoryCache</span><span class=\"params\">(<span class=\"keyword\">int</span> sizeLimit)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>(sizeLimit);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">put</span><span class=\"params\">(K key, V value)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"keyword\">super</span>.put(key, value)) &#123;</span><br><span class=\"line\">            usingCounts.put(key, <span class=\"number\">0</span>);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> V <span class=\"title\">get</span><span class=\"params\">(K key)</span> </span>&#123;</span><br><span class=\"line\">        V value = <span class=\"keyword\">super</span>.get(key);</span><br><span class=\"line\">        <span class=\"comment\">// Increment usage count for value if value is contained in hardCache</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (value != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">            Integer usageCount = usingCounts.get(key);</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (usageCount != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">                usingCounts.put(key, usageCount + <span class=\"number\">1</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> value;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> V <span class=\"title\">remove</span><span class=\"params\">(K key)</span> </span>&#123;</span><br><span class=\"line\">        usingCounts.remove(key);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">super</span>.remove(key);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">clear</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        usingCounts.clear();</span><br><span class=\"line\">        <span class=\"keyword\">super</span>.clear();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> K <span class=\"title\">removeNext</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        Integer minUsageCount = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">        K leastUsedKey = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">        Set&lt;Entry&lt;K, Integer&gt;&gt; entries = usingCounts.entrySet();</span><br><span class=\"line\">        <span class=\"keyword\">synchronized</span> (usingCounts) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (Entry&lt;K, Integer&gt; entry : entries) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (leastUsedKey == <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">                    leastUsedKey = entry.getKey();</span><br><span class=\"line\">                    minUsageCount = entry.getValue();</span><br><span class=\"line\">                &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                    Integer lastValueUsage = entry.getValue();</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (lastValueUsage &lt; minUsageCount) &#123;</span><br><span class=\"line\">                        minUsageCount = lastValueUsage;</span><br><span class=\"line\">                        leastUsedKey = entry.getKey();</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        usingCounts.remove(leastUsedKey);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> leastUsedKey;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>同样也是用一个Map来保存每个变量的使用次数，在每次get的时候，进行+1，removeNext函数中计算出使用次数最少的Entry的Key</p>\n<h2 id=\"小结\"><a href=\"#小结\" class=\"headerlink\" title=\"小结\"></a>小结</h2><p>内存缓存基本就这些，没什么难的知识，无非就是策略的实现会复杂一些，以上只是一种实现方式，也有别的实现方式，欢迎交流</p>\n<blockquote>\n<p>转载请指明出处RobinBlog：<a href=\"http://robinx.net/2017/01/03/App开发中的内存缓存/\" target=\"_blank\" rel=\"noopener\">http://robinx.net/2017/01/03/App开发中的内存缓存/</a></p>\n</blockquote>\n","categories":["Android"],"tags":["Cache","MemoryCahce","LruCache"]},{"title":"优雅的责任链模式","url":"http://yoursite.com/2016/12/06/优雅的责任链模式/","content":"<p>24种设计模式6大原则中的责任链平时开发中接触到的并不多，如果你读过<code>Volley</code>的源码应该会有体会，Android同学们都说<code>Volley</code>代码优雅，我想责任链的运用应该是它优雅的部分原因。</p>\n<h2 id=\"责任链基本介绍\"><a href=\"#责任链基本介绍\" class=\"headerlink\" title=\"责任链基本介绍\"></a>责任链基本介绍</h2><p>使多个对象都有机会处理请求，从而避免了请求的发送者和接受者之间的耦合关系。将这些对象连成一条链，并沿着这条链传递该请求，直到有对象处理它为止。<br><br>说白一点就是一个任务，进入一条链，这条链上存在多个处理器，从第一个处理器开始，一直向后传递，使得每个处理器都有机会处理这个任务，谁可以处理谁就处理，处理完不再向后传递。此任务被处理完毕。<br><br>简单的抽象处理器</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Handler</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> Handler nextHandler;</span><br><span class=\"line\">\t<span class=\"comment\">//每个处理者都必须对请求做出处理</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">final</span> Response <span class=\"title\">handleMessage</span><span class=\"params\">(Request request)</span></span>&#123;</span><br><span class=\"line\">\t\tResponse response = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">\t\t<span class=\"comment\">//判断是否是自己的处理级别</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(<span class=\"keyword\">this</span>.getHandlerLevel().equals(request.getRequestLevel()))&#123;</span><br><span class=\"line\">\t\t\tresponse = <span class=\"keyword\">this</span>.echo(request);</span><br><span class=\"line\">\t\t&#125;<span class=\"keyword\">else</span>&#123; <span class=\"comment\">//不属于自己的处理级别</span></span><br><span class=\"line\">\t\t\t<span class=\"comment\">//判断是否有下一个处理者</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(<span class=\"keyword\">this</span>.nextHandler != <span class=\"keyword\">null</span>)&#123;</span><br><span class=\"line\">\t\t\t\tresponse = <span class=\"keyword\">this</span>.nextHandler.handleMessage(request);</span><br><span class=\"line\">\t\t\t&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">\t\t\t<span class=\"comment\">//没有适当的处理者，业务自行处理</span></span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> response;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"comment\">//设置下一个处理者是谁</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setNext</span><span class=\"params\">(Handler _handler)</span></span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">this</span>.nextHandler = _handler;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"comment\">//每个处理者都有一个处理级别</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">abstract</span> Level <span class=\"title\">getHandlerLevel</span><span class=\"params\">()</span></span>;</span><br><span class=\"line\">\t<span class=\"comment\">//每个处理者都必须实现处理任务</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">abstract</span> Response <span class=\"title\">echo</span><span class=\"params\">(Request request)</span></span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>抽象的处理者实现三个职责：一是定义一个请求的处理方法<code>handleMessage</code>，唯一对外开放的方法；二是定义一个链的编排方法<code>setNext</code>，设置下一个处理者；三是定义了具体的请求者必须实现的两个方法：定义自己能够处理的级别<code>getHandlerLevel</code>和具体的处理任务<code>echo</code>。</p>\n<p>们定义三个具体的处理者，以便可以组成一个链</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ConcreteHandler1</span> <span class=\"keyword\">extends</span> <span class=\"title\">Handler</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"comment\">//定义自己的处理逻辑</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">protected</span> Response <span class=\"title\">echo</span><span class=\"params\">(Request request)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">//完成处理逻辑</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"comment\">//设置自己的处理级别</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">protected</span> Level <span class=\"title\">getHandlerLevel</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">//设置自己的处理级别</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ConcreteHandler2</span> <span class=\"keyword\">extends</span> <span class=\"title\">Handler</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"comment\">//定义自己的处理逻辑</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">protected</span> Response <span class=\"title\">echo</span><span class=\"params\">(Request request)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">//完成处理逻辑</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"comment\">//设置自己的处理级别</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">protected</span> Level <span class=\"title\">getHandlerLevel</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">//设置自己的处理级别</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ConcreteHandler3</span> <span class=\"keyword\">extends</span> <span class=\"title\">Handler</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"comment\">//定义自己的处理逻辑</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">protected</span> Response <span class=\"title\">echo</span><span class=\"params\">(Request request)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">//完成处理逻辑</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"comment\">//设置自己的处理级别</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">protected</span> Level <span class=\"title\">getHandlerLevel</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">//设置自己的处理级别</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>在场景类或高层模块中对链进行组装，并传递请求，返回结果</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Client</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">//声明所有的处理节点</span></span><br><span class=\"line\">\t\tHandler handler1 = <span class=\"keyword\">new</span> ConcreteHandler1();</span><br><span class=\"line\">\t\tHandler handler2 = <span class=\"keyword\">new</span> ConcreteHandler2();</span><br><span class=\"line\">\t\tHandler handler3 = <span class=\"keyword\">new</span> ConcreteHandler3();</span><br><span class=\"line\">\t\t<span class=\"comment\">//设置链中的阶段顺序1--&gt;2--&gt;3</span></span><br><span class=\"line\">\t\thandler1.setNext(handler2);</span><br><span class=\"line\">\t\thandler2.setNext(handler3);</span><br><span class=\"line\">\t\t<span class=\"comment\">//提交请求，返回结果</span></span><br><span class=\"line\">\t\tResponse response = handler1.handlerMessage(<span class=\"keyword\">new</span> Request());</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>在实际应用中，一般会有一个封装类对责任模式进行封装，也就是替代<code>Client</code>类，直接返回链中的第一个处理者，具体链的设置不需要高层次模块关系，这样，更简化了高层次模块的调用，减少模块间的耦合，提高系统的灵活性。</p>\n<h2 id=\"Volley中的责任链\"><a href=\"#Volley中的责任链\" class=\"headerlink\" title=\"Volley中的责任链\"></a>Volley中的责任链</h2><p>在<code>Volley</code>中，把责任链与线程队列结合了起来，形成一条循环的流水处理线，这个责任链中存在了两个处理器<code>Handler</code>，也叫调度者<code>Dispatcher</code>有关<code>Volley</code>的分析，你可以阅读源码，也可以看这篇分析文章了解下<a href=\"http://codekk.com/open-source-project-analysis/detail/Android/grumoon/Volley%20%E6%BA%90%E7%A0%81%E8%A7%A3%E6%9E%90\" target=\"_blank\" rel=\"noopener\">Volley 源码解析</a></p>\n<h3 id=\"队列与线程的配合\"><a href=\"#队列与线程的配合\" class=\"headerlink\" title=\"队列与线程的配合\"></a>队列与线程的配合</h3><p>Java为我们提供了很多队列类，这里不详细介绍，感兴趣的可以去谷歌下，Volley中实际创建了两个队列，一个缓存队列，一个网络请求队列</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/** The cache triage queue. */</span></span><br><span class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">final</span> PriorityBlockingQueue&lt;Request&lt;?&gt;&gt; mCacheQueue =</span><br><span class=\"line\">    <span class=\"keyword\">new</span> PriorityBlockingQueue&lt;Request&lt;?&gt;&gt;();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/** The queue of requests that are actually going out to the network. */</span></span><br><span class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">final</span> PriorityBlockingQueue&lt;Request&lt;?&gt;&gt; mNetworkQueue =</span><br><span class=\"line\">    <span class=\"keyword\">new</span> PriorityBlockingQueue&lt;Request&lt;?&gt;&gt;();</span><br></pre></td></tr></table></figure>\n<p>然后分别开启了1个缓存线程循环从缓存队列中取任务，4个网络请求线程循环从网络请求队列中取任务。在取的时候通过队列的take()方法取出任务，这个方法是阻塞的方法，当队列中无任务的时候，线程会阻塞在这里，直到有新的任务到来</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// Take a request from the queue.</span></span><br><span class=\"line\">request = mQueue.take();</span><br></pre></td></tr></table></figure>\n<h3 id=\"责任链形成\"><a href=\"#责任链形成\" class=\"headerlink\" title=\"责任链形成\"></a>责任链形成</h3><p>一个新的请求到来的时候会先进入缓存队列，在缓存处理线程中，有缓存则直接抛出缓存数据到主线程，当发现此Request没有缓存的话，直接进入网络请求队列，由网络请求线程进行请求，获取到数据之后抛出数据到主线程。这就形成了两个处理者构成的责任链。也是Volley的核心。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// Attempt to retrieve this item from cache.</span></span><br><span class=\"line\">Cache.Entry entry = mCache.get(request.getCacheKey());</span><br><span class=\"line\"><span class=\"keyword\">if</span> (entry == <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">    request.addMarker(<span class=\"string\">\"cache-miss\"</span>);</span><br><span class=\"line\">    <span class=\"comment\">// Cache miss; send off to the network dispatcher.</span></span><br><span class=\"line\">    mNetworkQueue.put(request);</span><br><span class=\"line\">    <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"责任链的使用场景\"><a href=\"#责任链的使用场景\" class=\"headerlink\" title=\"责任链的使用场景\"></a>责任链的使用场景</h2><p>相信我们都有过读过的相关知识不知道应用场景，即使知道应用场景，到了那个时候也想不起来用的情况。责任链我个人觉得虽然用的场景不是特别频繁，但是它能解决一些核心的东西，一些复杂的东西在它面前会变得十分简单。</p>\n<p>曾经我帮人做过一个相机连拍的APP，需求是一秒钟至少拍摄5张以上的照片，并且存储到本地，我的实现是通过获取相机每一帧转换成图片，并保存到本地，这其中有不少其他问题，其中一个就是存储的问题，如此高速下，存储的图片小还好说，稍微大点，放主线程肯定是处理不了的，还有就是前面的图片还没存储完，后面又不定时的来新的图片需要存储。存储过程中还要实时展示存储进度。当时碰到这个问题，第一反应是队列来搞，第二就是责任链，原理与Volley处理请求大同小异。责任链与线程队列配合让这个问题变的so easy，再次佩服下谷歌的工程师。</p>\n<h2 id=\"封装责任链配合线程队列\"><a href=\"#封装责任链配合线程队列\" class=\"headerlink\" title=\"封装责任链配合线程队列\"></a>封装责任链配合线程队列</h2><p>有了那次经验之后，意识到了责任链在处理一些问题方面的强大能力，但是每次都要根据具体的场景完整的搭建一个责任链模型，这显然不是我这种封装狂魔的风格。封装起来用，后面遇到任何需要处理队列的地方，直接拿来用，爽爆了。那么封装前，我们需要考虑好支持以下特性</p>\n<ul>\n<li>基本的队列与线程配合，形成流水线</li>\n<li>优先级，任务处理有先后，需要支持设置优先级</li>\n<li>多队列配合，把任务从一个队列抛出到另一个队列进行处理</li>\n<li>拦截器，拦截处理任务，自定义拦截条件</li>\n<li>分发器，负责把处理结果分发到主线程</li>\n<li>处理进度的实时监听</li>\n<li>任务取消，需要自由取消已经已经放入队列中的任务与正在执行的任务</li>\n<li>重复任务过滤，等待</li>\n</ul>\n<h3 id=\"基本的队列与线程配合实现\"><a href=\"#基本的队列与线程配合实现\" class=\"headerlink\" title=\"基本的队列与线程配合实现\"></a>基本的队列与线程配合实现</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">JobQueue</span>&lt;<span class=\"title\">T</span> <span class=\"keyword\">extends</span> <span class=\"title\">Job</span>&lt;<span class=\"title\">T</span>&gt;&gt; </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> DEFAULT_THREAD_POOL_SIZE = <span class=\"number\">4</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> PriorityBlockingQueue&lt;T&gt; mJobQueue = <span class=\"keyword\">new</span> PriorityBlockingQueue&lt;T&gt;();  <span class=\"comment\">//处理队列</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> JobDispatcher&lt;T&gt;[] mJobDispatchers; <span class=\"comment\">//处理线程</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Interceptor&lt;T&gt; mInterceptor; <span class=\"comment\">//拦截器</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Delivery&lt;T&gt; mDelivery; <span class=\"comment\">//分发器</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> List&lt;JobHandlerListener&lt;T&gt;&gt; mJobHandlerListener = <span class=\"keyword\">new</span> ArrayList&lt;&gt;(); <span class=\"comment\">//处理进度监听</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> AtomicInteger mSequenceGenerator = <span class=\"keyword\">new</span> AtomicInteger(); <span class=\"comment\">//对任务排序用，用于设置优先级</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">JobQueue</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>(<span class=\"keyword\">new</span> DefaultInterceptor&lt;T&gt;());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">JobQueue</span><span class=\"params\">(<span class=\"keyword\">int</span> threadPoolSize)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>(threadPoolSize, <span class=\"keyword\">new</span> DefaultInterceptor&lt;T&gt;());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">JobQueue</span><span class=\"params\">(Interceptor interceptor)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>(DEFAULT_THREAD_POOL_SIZE, interceptor);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">JobQueue</span><span class=\"params\">(<span class=\"keyword\">int</span> threadPoolSize, Interceptor interceptor)</span> </span>&#123;</span><br><span class=\"line\">        mJobDispatchers = <span class=\"keyword\">new</span> JobDispatcher[threadPoolSize];</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.mInterceptor = interceptor;</span><br><span class=\"line\">        mDelivery = <span class=\"keyword\">new</span> DefaultDelivery&lt;T&gt;(<span class=\"keyword\">new</span> android.os.Handler(Looper.getMainLooper()));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">start</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        stop();</span><br><span class=\"line\"></span><br><span class=\"line\">        ThreadPoolExecutor threadPoolExecutor = (ThreadPoolExecutor) Executors.newFixedThreadPool(mJobDispatchers.length);</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; mJobDispatchers.length; i++) &#123;</span><br><span class=\"line\">            JobDispatcher&lt;T&gt; savedDispatcher = <span class=\"keyword\">new</span> JobDispatcher&lt;T&gt;(mJobQueue, mInterceptor, mDelivery, mJobHandlerListener);</span><br><span class=\"line\">            mJobDispatchers[i] = savedDispatcher;</span><br><span class=\"line\">            threadPoolExecutor.submit(savedDispatcher);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">stop</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; mJobDispatchers.length; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (mJobDispatchers[i] != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">                mJobDispatchers[i].quit();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> JobQueue <span class=\"title\">add</span><span class=\"params\">(T element)</span> </span>&#123;</span><br><span class=\"line\">        element.setSequence(getSequenceNumber());</span><br><span class=\"line\">        mJobQueue.add(element);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> JobQueue <span class=\"title\">action</span><span class=\"params\">(Action&lt;T&gt; action)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; mJobDispatchers.length; i++) &#123;</span><br><span class=\"line\">            mJobDispatchers[i].setAction(action);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> JobQueue <span class=\"title\">addListener</span><span class=\"params\">(JobHandlerListener listener)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (mJobHandlerListener.contains(listener)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        mJobHandlerListener.add(listener);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">int</span> <span class=\"title\">getSequenceNumber</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> mSequenceGenerator.incrementAndGet();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这相当于我们前面说的Client封装类，任务从此类<code>add()</code>函数进入<code>mJobQueue</code>队列，此队列对应默认4个<code>JobDispatcher</code>处理线程。可以理解为并发量为4，一次可同时并发处理四个任务，嫌小的可以设置大点。</p>\n<h3 id=\"处理线程\"><a href=\"#处理线程\" class=\"headerlink\" title=\"处理线程\"></a>处理线程</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">JobDispatcher</span>&lt;<span class=\"title\">T</span> <span class=\"keyword\">extends</span> <span class=\"title\">Job</span>&lt;<span class=\"title\">T</span>&gt;&gt; <span class=\"keyword\">extends</span> <span class=\"title\">Thread</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> BlockingQueue&lt;T&gt; mJobQueue; <span class=\"comment\">//处理队列</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Interceptor&lt;T&gt; mInterceptor; <span class=\"comment\">//拦截器</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Delivery&lt;T&gt; mDelivery;  <span class=\"comment\">//分发器</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> List&lt;JobHandlerListener&lt;T&gt;&gt; mJobHandlerListeners = <span class=\"keyword\">new</span> ArrayList&lt;&gt;(); <span class=\"comment\">//处理监听</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Action&lt;T&gt; mAction; <span class=\"comment\">//执行动作回调，具体的处理逻辑，由上层定义通过此类call方法回调到这里执行</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">volatile</span> <span class=\"keyword\">boolean</span> mQuit = <span class=\"keyword\">false</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">JobDispatcher</span><span class=\"params\">(BlockingQueue&lt;T&gt; jobQueue, Interceptor&lt;T&gt; interceptor, Delivery&lt;T&gt; delivery, List&lt;JobHandlerListener&lt;T&gt;&gt; jobHandlerListeners)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.mJobQueue = jobQueue;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.mInterceptor = interceptor;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.mDelivery = delivery;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (jobHandlerListeners != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">this</span>.mJobHandlerListeners = jobHandlerListeners;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        CLog.v(<span class=\"string\">\"start new dispatcher\"</span>);</span><br><span class=\"line\">        Process.setThreadPriority(Process.THREAD_PRIORITY_BACKGROUND);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">while</span> (<span class=\"keyword\">true</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                T element = mJobQueue.take(); <span class=\"comment\">//获取任务</span></span><br><span class=\"line\">                <span class=\"keyword\">if</span> (element == <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"keyword\">if</span> (element.isCancel()) &#123; <span class=\"comment\">//判断任务是否取消</span></span><br><span class=\"line\">                    mDelivery.deliveryCancel(mJobHandlerListeners,element); <span class=\"comment\">//分发到主线程调用取消监听</span></span><br><span class=\"line\">                    <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"keyword\">if</span> (mInterceptor != <span class=\"keyword\">null</span> &amp;&amp; mInterceptor.interceptCondition(element)) &#123; <span class=\"comment\">//拦截器不为空且拦截条件为true，进行拦截</span></span><br><span class=\"line\">                    mInterceptor.onIntercept(element);</span><br><span class=\"line\">                    <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                mDelivery.deliveryPrepare(mJobHandlerListeners,element);  <span class=\"comment\">//分发到主线程调用准备监听</span></span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span>.mAction == <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">        </span><br><span class=\"line\">                <span class=\"keyword\">this</span>.mAction.call(element);  <span class=\"comment\">//执行动作</span></span><br><span class=\"line\">                </span><br><span class=\"line\">                mDelivery.deliveryFinish(mJobHandlerListeners,element); <span class=\"comment\">//分发到主线程调用完成监听</span></span><br><span class=\"line\"></span><br><span class=\"line\">            &#125; <span class=\"keyword\">catch</span> (InterruptedException e) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (mQuit) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">return</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setAction</span><span class=\"params\">(Action&lt;T&gt; action)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.mAction = action;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">quit</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        mQuit = <span class=\"keyword\">true</span>;</span><br><span class=\"line\">        interrupt();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>处理线程内部是个死循环，不断的从队列中获取任务，获取后进行一些列判定后执行相应动作，完成后分发到主线程回调</p>\n<h3 id=\"主线程分发器\"><a href=\"#主线程分发器\" class=\"headerlink\" title=\"主线程分发器\"></a>主线程分发器</h3><p>下面看下分发器</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">Delivery</span>&lt;<span class=\"title\">T</span> <span class=\"keyword\">extends</span> <span class=\"title\">Job</span>&lt;<span class=\"title\">T</span>&gt;&gt; </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">deliveryPrepare</span><span class=\"params\">(List&lt;JobHandlerListener&lt;T&gt;&gt; listeners, T job)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">deliveryCancel</span><span class=\"params\">(List&lt;JobHandlerListener&lt;T&gt;&gt; listeners, T job)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">deliveryFinish</span><span class=\"params\">(List&lt;JobHandlerListener&lt;T&gt;&gt; listeners, T job)</span></span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DefaultDelivery</span>&lt;<span class=\"title\">T</span> <span class=\"keyword\">extends</span> <span class=\"title\">Job</span>&lt;<span class=\"title\">T</span>&gt;&gt; <span class=\"keyword\">implements</span> <span class=\"title\">Delivery</span>&lt;<span class=\"title\">T</span>&gt; </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> Executor mResponsePoster;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">DefaultDelivery</span><span class=\"params\">(<span class=\"keyword\">final</span> Handler handler)</span> </span>&#123;</span><br><span class=\"line\">        mResponsePoster = <span class=\"keyword\">new</span> Executor() &#123;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">execute</span><span class=\"params\">(Runnable command)</span> </span>&#123;</span><br><span class=\"line\">                handler.post(command);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">DefaultDelivery</span><span class=\"params\">(Executor executor)</span> </span>&#123;</span><br><span class=\"line\">        mResponsePoster = executor;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">deliveryPrepare</span><span class=\"params\">(<span class=\"keyword\">final</span> List&lt;JobHandlerListener&lt;T&gt;&gt; listeners, <span class=\"keyword\">final</span> T job)</span> </span>&#123;</span><br><span class=\"line\">        mResponsePoster.execute(<span class=\"keyword\">new</span> Runnable() &#123;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (job.isCancel()) &#123;</span><br><span class=\"line\">                    deliveryCancel(listeners,job);</span><br><span class=\"line\">                    <span class=\"keyword\">return</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                CLog.d(<span class=\"string\">\"deliveryPrepare,current thread:%s\"</span>, Thread.currentThread().getName());</span><br><span class=\"line\">                <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>, size = listeners.size(); i &lt; size; i++) &#123;</span><br><span class=\"line\">                    listeners.get(i).onPrepare(job);</span><br><span class=\"line\"></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">deliveryCancel</span><span class=\"params\">(<span class=\"keyword\">final</span> List&lt;JobHandlerListener&lt;T&gt;&gt; listeners, <span class=\"keyword\">final</span> T job)</span> </span>&#123;</span><br><span class=\"line\">        mResponsePoster.execute(<span class=\"keyword\">new</span> Runnable() &#123;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">                CLog.d(<span class=\"string\">\"deliveryCancel,current thread:%s\"</span>, Thread.currentThread().getName());</span><br><span class=\"line\">                <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>, size = listeners.size(); i &lt; size; i++) &#123;</span><br><span class=\"line\">                    listeners.get(i).onCancel(job);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">deliveryFinish</span><span class=\"params\">(<span class=\"keyword\">final</span> List&lt;JobHandlerListener&lt;T&gt;&gt; listeners, <span class=\"keyword\">final</span> T job)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (job.isCancel()) &#123;</span><br><span class=\"line\">            deliveryCancel(listeners,job);</span><br><span class=\"line\">            <span class=\"keyword\">return</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        mResponsePoster.execute(<span class=\"keyword\">new</span> Runnable() &#123;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">                CLog.d(<span class=\"string\">\"deliveryFinish,current thread:%s\"</span>, Thread.currentThread().getName());</span><br><span class=\"line\">                <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>, size = listeners.size(); i &lt; size; i++) &#123;</span><br><span class=\"line\">                    listeners.get(i).onFinish(job);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"拦截器\"><a href=\"#拦截器\" class=\"headerlink\" title=\"拦截器\"></a>拦截器</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">Interceptor</span>&lt;<span class=\"title\">T</span> <span class=\"keyword\">extends</span> <span class=\"title\">Job</span>&lt;<span class=\"title\">T</span>&gt;&gt; </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">boolean</span> <span class=\"title\">interceptCondition</span><span class=\"params\">(T job)</span></span>;  <span class=\"comment\">//拦截条件</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">onIntercept</span><span class=\"params\">(T job)</span></span>; <span class=\"comment\">//拦截后动作</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DefaultInterceptor</span>&lt;<span class=\"title\">T</span> <span class=\"keyword\">extends</span> <span class=\"title\">Job</span>&lt;<span class=\"title\">T</span>&gt;&gt; <span class=\"keyword\">implements</span> <span class=\"title\">Interceptor</span>&lt;<span class=\"title\">T</span>&gt; </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">interceptCondition</span><span class=\"params\">(T job)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onIntercept</span><span class=\"params\">(T job)</span> </span>&#123;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>默认我们不对拦截做什么动作，上层调用者需要拦截的时候可以传一个自定义的拦截器进行拦截操作</p>\n<h3 id=\"优先级\"><a href=\"#优先级\" class=\"headerlink\" title=\"优先级\"></a>优先级</h3><p>上面代码中出现的<code>Job</code>类其实是个抽象类的父类，调用者传入的任务必须继承<code>Job</code></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Job</span>&lt;<span class=\"title\">T</span> <span class=\"keyword\">extends</span> <span class=\"title\">Job</span>&lt;<span class=\"title\">T</span>&gt;&gt; <span class=\"keyword\">implements</span> <span class=\"title\">java</span>.<span class=\"title\">lang</span>.<span class=\"title\">Comparable</span>&lt;<span class=\"title\">T</span>&gt; </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"keyword\">boolean</span> isCancel;</span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"keyword\">boolean</span> isComplete;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> Integer mSequence;</span><br><span class=\"line\">    <span class=\"keyword\">protected</span> Priority mPriority = Priority.NORMAL;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> Priority <span class=\"title\">getPriority</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> mPriority;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> Job <span class=\"title\">setPriority</span><span class=\"params\">(Priority priority)</span> </span>&#123;</span><br><span class=\"line\">        mPriority = priority;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">isCancel</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> isCancel;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> Job <span class=\"title\">setCancel</span><span class=\"params\">(<span class=\"keyword\">boolean</span> cancel)</span> </span>&#123;</span><br><span class=\"line\">        isCancel = cancel;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">isComplete</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> isComplete;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> Job <span class=\"title\">setComplete</span><span class=\"params\">(<span class=\"keyword\">boolean</span> complete)</span> </span>&#123;</span><br><span class=\"line\">        isComplete = complete;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> Integer <span class=\"title\">getSequence</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> mSequence;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> Job <span class=\"title\">setSequence</span><span class=\"params\">(Integer sequence)</span> </span>&#123;</span><br><span class=\"line\">        mSequence = sequence;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">compareTo</span><span class=\"params\">(T another)</span> </span>&#123;</span><br><span class=\"line\">        Priority left = <span class=\"keyword\">this</span>.getPriority();</span><br><span class=\"line\">        Priority right = another.getPriority();</span><br><span class=\"line\">        <span class=\"keyword\">return</span> left == right ? <span class=\"keyword\">this</span>.mSequence - another.mSequence : right.ordinal() - left.ordinal();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>可以看到<code>Job</code>实现了<code>Comparable</code>接口，因为在<code>JobQueue</code>中的<code>PriorityBlockingQueue&lt;T&gt; mJobQueue</code>泛型的必须是<code>Comparable</code>的实现类,这样在<br><code>mJobQueue.take()</code>的时候会根据优先级来取出任务，从而实现任务的优先级功能，具体的优先级判定逻辑，在<code>Job</code>类中实现的<code>compareTo</code>函数中</p>\n<h3 id=\"多队列配合切换\"><a href=\"#多队列配合切换\" class=\"headerlink\" title=\"多队列配合切换\"></a>多队列配合切换</h3><p>其实此功能依赖拦截器来实现，拦截器拦截后，再把任务抛给其他队列就好，看下具体的使用方法就知道了</p>\n<p>先定义一个任务</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">TestJob</span> <span class=\"keyword\">extends</span> <span class=\"title\">Job</span>&lt;<span class=\"title\">TestJob</span>&gt; </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> mCount;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">getCount</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> mCount;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> TestJob <span class=\"title\">setCount</span><span class=\"params\">(<span class=\"keyword\">int</span> count)</span> </span>&#123;</span><br><span class=\"line\">        mCount = count;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MainActivity</span> <span class=\"keyword\">extends</span> <span class=\"title\">AppCompatActivity</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> mCount;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> JobHandler&lt;TestJob&gt; mCacheJobHandler;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> JobHandler&lt;TestJob&gt; mNetworkJobHandler;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">onCreate</span><span class=\"params\">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>.onCreate(savedInstanceState);</span><br><span class=\"line\">        setContentView(R.layout.activity_main);</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\">//创建缓存处理器，并指定为1个线程，同时设置自定义的拦截器</span></span><br><span class=\"line\">        mCacheJobHandler = <span class=\"keyword\">new</span> JobHandler.Builder&lt;TestJob&gt;().threadPoolSize(<span class=\"number\">1</span>).interceptor(<span class=\"keyword\">new</span> CacheJobInterceptor()).build();</span><br><span class=\"line\">        <span class=\"comment\">//创建网络请求处理器</span></span><br><span class=\"line\">        mNetworkJobHandler = <span class=\"keyword\">new</span> JobHandler.Builder&lt;TestJob&gt;().build();</span><br><span class=\"line\"></span><br><span class=\"line\">        findViewById(R.id.btn).setOnClickListener(<span class=\"keyword\">new</span> View.OnClickListener() &#123;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onClick</span><span class=\"params\">(View v)</span> </span>&#123;</span><br><span class=\"line\">                TestJob job = <span class=\"keyword\">new</span> TestJob();</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (mCount == <span class=\"number\">7</span>) &#123;</span><br><span class=\"line\">                    job.setPriority(Priority.HIGH);  <span class=\"comment\">//设置任务优先级</span></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"keyword\">if</span> (mCount == <span class=\"number\">8</span>) &#123;</span><br><span class=\"line\">                    job.setPriority(Priority.IMMEDIATE); <span class=\"comment\">//设置任务优先级</span></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                job.setCount(mCount);</span><br><span class=\"line\"></span><br><span class=\"line\">                mCacheJobHandler.enqueue(job)</span><br><span class=\"line\">                        .action(<span class=\"keyword\">new</span> Action&lt;TestJob&gt;() &#123;</span><br><span class=\"line\">                            <span class=\"meta\">@Override</span></span><br><span class=\"line\">                            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">call</span><span class=\"params\">(TestJob element)</span> </span>&#123;  <span class=\"comment\">//具体的读缓存处理逻辑</span></span><br><span class=\"line\">                                <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                                    Thread.sleep(<span class=\"number\">1500</span>);</span><br><span class=\"line\">                                &#125; <span class=\"keyword\">catch</span> (InterruptedException e) &#123;</span><br><span class=\"line\">                                    e.printStackTrace();</span><br><span class=\"line\">                                &#125;</span><br><span class=\"line\">                                CLog.i(<span class=\"string\">\"读缓存\"</span>+element.getCount());</span><br><span class=\"line\">                            &#125;</span><br><span class=\"line\">                        &#125;)</span><br><span class=\"line\">                        .addListener(mCacheJobHandlerListener);</span><br><span class=\"line\"></span><br><span class=\"line\">                mCount++;</span><br><span class=\"line\"></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//自定义拦截器</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">CacheJobInterceptor</span> <span class=\"keyword\">implements</span> <span class=\"title\">net</span>.<span class=\"title\">robinx</span>.<span class=\"title\">queue</span>.<span class=\"title\">Interceptor</span>&lt;<span class=\"title\">TestJob</span>&gt;</span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"meta\">@Override</span></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">interceptCondition</span><span class=\"params\">(TestJob job)</span> </span>&#123;  <span class=\"comment\">//拦截条件，当count为5时模拟达成条件，返回ture进行拦截</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (job.getCount() == <span class=\"number\">5</span>) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"meta\">@Override</span></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onIntercept</span><span class=\"params\">(TestJob job)</span> </span>&#123;  <span class=\"comment\">//缓存队列拦截后，进入网络请求队列</span></span><br><span class=\"line\">            mNetworkJobHandler.enqueue(job)</span><br><span class=\"line\">                    .action(<span class=\"keyword\">new</span> Action&lt;TestJob&gt;() &#123;</span><br><span class=\"line\">                        <span class=\"meta\">@Override</span></span><br><span class=\"line\">                        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">call</span><span class=\"params\">(TestJob element)</span> </span>&#123; <span class=\"comment\">//具体的网络请求处理逻辑</span></span><br><span class=\"line\">                            <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                                Thread.sleep(<span class=\"number\">1500</span>);</span><br><span class=\"line\">                            &#125; <span class=\"keyword\">catch</span> (InterruptedException e) &#123;</span><br><span class=\"line\">                                e.printStackTrace();</span><br><span class=\"line\">                            &#125;</span><br><span class=\"line\">                            CLog.i(<span class=\"string\">\"请求网络\"</span>+element.getCount());</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                    &#125;)</span><br><span class=\"line\">                    .addListener(mNetworkJobHandlerListener);</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//缓存任务处理进度监听</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> JobHandlerListener&lt;TestJob&gt; mCacheJobHandlerListener = <span class=\"keyword\">new</span> JobHandlerListener&lt;TestJob&gt;() &#123;</span><br><span class=\"line\">        <span class=\"meta\">@Override</span></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onPrepare</span><span class=\"params\">(TestJob job)</span> </span>&#123;</span><br><span class=\"line\">            CLog.i(<span class=\"string\">\"读缓存准备\"</span>+job.getCount());</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"meta\">@Override</span></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onCancel</span><span class=\"params\">(TestJob job)</span> </span>&#123;</span><br><span class=\"line\">            CLog.i(<span class=\"string\">\"读缓存取消\"</span>+job.getCount());</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"meta\">@Override</span></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onFinish</span><span class=\"params\">(TestJob job)</span> </span>&#123;</span><br><span class=\"line\">            CLog.i(<span class=\"string\">\"读缓存完成\"</span>+job.getCount());</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//网络请求任务处理进度监听</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> JobHandlerListener&lt;TestJob&gt; mNetworkJobHandlerListener = <span class=\"keyword\">new</span> JobHandlerListener&lt;TestJob&gt;() &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"meta\">@Override</span></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onPrepare</span><span class=\"params\">(TestJob job)</span> </span>&#123;</span><br><span class=\"line\">            CLog.i(<span class=\"string\">\"请求网络准备\"</span>+job.getCount());</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"meta\">@Override</span></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onCancel</span><span class=\"params\">(TestJob job)</span> </span>&#123;</span><br><span class=\"line\">            CLog.i(<span class=\"string\">\"请求网络取消\"</span>+job.getCount());</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"meta\">@Override</span></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onFinish</span><span class=\"params\">(TestJob job)</span> </span>&#123;</span><br><span class=\"line\">            CLog.i(<span class=\"string\">\"请求网络完成\"</span>+job.getCount());</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>上面通过封装的责任链模拟了Volley的核心功能，缓存与网络请求处理线程的切换</p>\n<hr>\n<h2 id=\"更新时间：2016-12-9\"><a href=\"#更新时间：2016-12-9\" class=\"headerlink\" title=\"更新时间：2016.12.9\"></a>更新时间：2016.12.9</h2><p>在以上代码基础上增加了，重复任务判定，当有重复任务时，后续任务进入等待队列，当前任务执行完后，释放队列中的重复任务并执行<br>完善了任务取消</p>\n<p>代码见<a href=\"https://github.com/robinxdroid/JobQueue\" target=\"_blank\" rel=\"noopener\">https://github.com/robinxdroid/JobQueue</a></p>\n<blockquote>\n<p>转载请指明出处RobinBlog：<a href=\"http://robinx.net/2016/12/06/优雅的责任链模式/\" target=\"_blank\" rel=\"noopener\">http://robinx.net/2016/12/06/优雅的责任链模式/</a></p>\n</blockquote>\n","categories":["Android"],"tags":["责任链","模式"]},{"title":"略坑的PopupWindow","url":"http://yoursite.com/2016/12/05/略坑的PopupWindow/","content":"<p>其实PopupWindow平时开发中我个人用的并不多，当想写一个底部弹出的菜单的时候，发现这并不是随手就来的事情。我的需求也很简单，就是底部位移弹出菜单，背景随之变暗。实际操作有不少问题需要解决</p>\n<h2 id=\"动画问题\"><a href=\"#动画问题\" class=\"headerlink\" title=\"动画问题\"></a>动画问题</h2><h3 id=\"setAnimationStyle\"><a href=\"#setAnimationStyle\" class=\"headerlink\" title=\"setAnimationStyle\"></a>setAnimationStyle</h3><p>PopupWindow的动画可以通过<code>setAnimationStyle()</code>函数设置一个动画Style，需要到资源文件中定义，同时还需要在anim文件夹中定义好动画文件<br><br>问题：当定义了Translate的动画的时候，背景无法变暗</p>\n<h3 id=\"View动画\"><a href=\"#View动画\" class=\"headerlink\" title=\"View动画\"></a>View动画</h3><p>可以通过对PopupWindow中的View直接做Translate动画，<code>setAnimationStyle()</code>可以设置<code>alpha</code>动画，这样来实现背景渐变<br><br>问题：PopupWindow弹出的时候会卡一下，导致位移动画不能流畅运行，原因就是同时设置了<code>setAnimationStyle()</code>与View动画。这也是我们的项目中目前存在的问题</p>\n<h2 id=\"问题解决方案\"><a href=\"#问题解决方案\" class=\"headerlink\" title=\"问题解决方案\"></a>问题解决方案</h2><p>既然同时设置<code>setAnimationStyle()</code>与View动画有问题，那只能换种方式了，View动画我们可以保留，因为可以针对PopupWindow做各种其他的动画，自由性高点。<code>setAnimationStyle()</code>可以直接撇掉。背景渐变换其他方式来实现</p>\n<h3 id=\"背景渐变\"><a href=\"#背景渐变\" class=\"headerlink\" title=\"背景渐变\"></a>背景渐变</h3><p>如果你做过这方面的需求，会发现网上有这段代码来实现背景的切换</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">WindowManager.LayoutParams lp = ((Activity) mPopView.getContext()).getWindow().getAttributes();</span><br><span class=\"line\">lp.alpha = <span class=\"number\">1f</span>;</span><br><span class=\"line\">((Activity) mPopView.getContext()).getWindow().setAttributes(lp);</span><br><span class=\"line\">((Activity) mPopView.getContext()).getWindow().addFlags(WindowManager.LayoutParams.FLAG_DIM_BEHIND);</span><br></pre></td></tr></table></figure>\n<p>实际操作了后发现背景是变暗了，但是是瞬间变化，这太low了，我们要的是渐变。可以用ValueAnimator对其做个动画,这样就可以了</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">backgroundAlpha</span><span class=\"params\">(<span class=\"keyword\">float</span> startAlpha, <span class=\"keyword\">float</span> endAlpha, <span class=\"keyword\">long</span> duration)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">final</span> WindowManager.LayoutParams lp = ((Activity) mPopView.getContext()).getWindow().getAttributes();</span><br><span class=\"line\">        ValueAnimator valueAnimator = ValueAnimator.ofFloat(startAlpha, endAlpha);</span><br><span class=\"line\">        valueAnimator.setDuration(duration);</span><br><span class=\"line\">        valueAnimator.addUpdateListener(<span class=\"keyword\">new</span> ValueAnimator.AnimatorUpdateListener() &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onAnimationUpdate</span><span class=\"params\">(ValueAnimator animation)</span> </span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">float</span> currentAlpha = (<span class=\"keyword\">float</span>) animation.getAnimatedValue();</span><br><span class=\"line\">                lp.alpha = currentAlpha;</span><br><span class=\"line\">                ((Activity) mPopView.getContext()).getWindow().setAttributes(lp);</span><br><span class=\"line\">                ((Activity) mPopView.getContext()).getWindow().addFlags(WindowManager.LayoutParams.FLAG_DIM_BEHIND);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">        valueAnimator.start();</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<p>实际运行后，完美解决</p>\n<blockquote>\n<p>转载请指明出处RobinBlog：<a href=\"http://robinx.net/2016/12/05/略坑的PopupWindow/\" target=\"_blank\" rel=\"noopener\">http://robinx.net/2016/12/05/略坑的PopupWindow/</a></p>\n</blockquote>\n","categories":["Android"],"tags":["PopupWindow"]},{"title":"Android编程规范","url":"http://yoursite.com/2016/12/02/Android编程规范/","content":"<p>如果不是初学者，代码规范性的重要程度不言而喻，结合自身的经验以及网络上其他的建议，总结如下Android代码规范。</p>\n<h2 id=\"包的命名\"><a href=\"#包的命名\" class=\"headerlink\" title=\"包的命名\"></a>包的命名</h2><p>下面是我平时开发的部分命名方式<br><br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-src</span><br><span class=\"line\">---|app ---&gt; 包含Application以及全局性的类</span><br><span class=\"line\">---|constants ---&gt; 常量类</span><br><span class=\"line\">---|helper ---&gt; APP内部的帮助类</span><br><span class=\"line\">---|utils ---&gt; APP内部的工具类</span><br><span class=\"line\">---|callback ---&gt;通用的回调接口</span><br><span class=\"line\">---|interfaces ---&gt;通用的监听接口</span><br><span class=\"line\">---|ui ---&gt;UI相关</span><br><span class=\"line\">------|activity ---&gt;Activity</span><br><span class=\"line\">------|fragment ---&gt;Fragment</span><br><span class=\"line\">------|adapter ---&gt;Adapter</span><br><span class=\"line\">------|widget ---&gt;自定义控件</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"类中代码的顺序\"><a href=\"#类中代码的顺序\" class=\"headerlink\" title=\"类中代码的顺序\"></a>类中代码的顺序</h2><h3 id=\"变量\"><a href=\"#变量\" class=\"headerlink\" title=\"变量\"></a>变量</h3><p>1.常量<br><br>2.静态变量<br><br>3.成员变量<br><br>根据功能作用可中间加空行分隔</p>\n<h3 id=\"方法\"><a href=\"#方法\" class=\"headerlink\" title=\"方法\"></a>方法</h3><p>1.构造函数<br><br>2.生命周期函数<br><br>3.<code>Override</code>函数<br><br>4.<code>public</code>函数<br><br>5.<code>protected</code>函数<br><br>6.<code>private</code>函数<br></p>\n<h2 id=\"类的命名\"><a href=\"#类的命名\" class=\"headerlink\" title=\"类的命名\"></a>类的命名</h2><p>首字母大写，后面驼峰，使用名词</p>\n<h3 id=\"Activity\"><a href=\"#Activity\" class=\"headerlink\" title=\"Activity\"></a>Activity</h3><p><code>XxxActivity.java</code></p>\n<h3 id=\"Fragment\"><a href=\"#Fragment\" class=\"headerlink\" title=\"Fragment\"></a>Fragment</h3><p><code>XxxFragment.java</code></p>\n<h3 id=\"Adapter\"><a href=\"#Adapter\" class=\"headerlink\" title=\"Adapter\"></a>Adapter</h3><p><code>XxxAdapter.java</code></p>\n<h3 id=\"Helper类\"><a href=\"#Helper类\" class=\"headerlink\" title=\"Helper类\"></a>Helper类</h3><p><code>XxxHelper.java</code></p>\n<h3 id=\"工具类\"><a href=\"#工具类\" class=\"headerlink\" title=\"工具类\"></a>工具类</h3><p><code>XxxUtils.java</code></p>\n<h3 id=\"回调接口\"><a href=\"#回调接口\" class=\"headerlink\" title=\"回调接口\"></a>回调接口</h3><p><code>XxxCallback.java</code></p>\n<h3 id=\"监听接口\"><a href=\"#监听接口\" class=\"headerlink\" title=\"监听接口\"></a>监听接口</h3><p><code>XxxListener.java</code></p>\n<h2 id=\"变量的命名\"><a href=\"#变量的命名\" class=\"headerlink\" title=\"变量的命名\"></a>变量的命名</h2><p>1.常量： 所有单词大写，单词以<code>_</code>分隔<br><br>2.静态变量：<code>s</code>开头，后面驼峰<br><br>3.成员变量： <code>m</code>开头，后面驼峰<br></p>\n<h2 id=\"方法的命名\"><a href=\"#方法的命名\" class=\"headerlink\" title=\"方法的命名\"></a>方法的命名</h2><p>首字母小写，后面驼峰</p>\n<h2 id=\"资源文件命名\"><a href=\"#资源文件命名\" class=\"headerlink\" title=\"资源文件命名\"></a>资源文件命名</h2><h3 id=\"布局\"><a href=\"#布局\" class=\"headerlink\" title=\"布局\"></a>布局</h3><table>\n<thead>\n<tr>\n<th>Type</th>\n<th>Layout</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Activity</td>\n<td>activity_xxx</td>\n</tr>\n<tr>\n<td>Fragment</td>\n<td>fragment_xxx</td>\n</tr>\n<tr>\n<td>Adapter</td>\n<td>item_xxx</td>\n</tr>\n<tr>\n<td>Dialog</td>\n<td>dialog_xxx</td>\n</tr>\n<tr>\n<td>PopupWindow</td>\n<td>popup_xxx</td>\n</tr>\n<tr>\n<td>Menu</td>\n<td>menu_xxx</td>\n</tr>\n<tr>\n<td>Dialog</td>\n<td>dialog_xxx</td>\n</tr>\n<tr>\n<td>布局引用</td>\n<td>include_xxx</td>\n</tr>\n<tr>\n<td>通用视图</td>\n<td>view_xxx</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"图片\"><a href=\"#图片\" class=\"headerlink\" title=\"图片\"></a>图片</h3><table>\n<thead>\n<tr>\n<th>Type</th>\n<th>Name</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>背景图片</td>\n<td>bg_xxx</td>\n</tr>\n<tr>\n<td>按钮图片</td>\n<td>btn_xxx</td>\n</tr>\n<tr>\n<td>单个图标</td>\n<td>icon_xxx</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"代码图形\"><a href=\"#代码图形\" class=\"headerlink\" title=\"代码图形\"></a>代码图形</h3><table>\n<thead>\n<tr>\n<th>Type</th>\n<th>Name</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Selector</td>\n<td>selector_xxx</td>\n</tr>\n<tr>\n<td>Shape</td>\n<td>shape_xxx</td>\n</tr>\n</tbody>\n</table>\n<p>以此类推</p>\n<h2 id=\"基本原则\"><a href=\"#基本原则\" class=\"headerlink\" title=\"基本原则\"></a>基本原则</h2><ul>\n<li>删除默认的<code>TODO</code>，合理使用<code>TODO</code>与<code>FIXME</code></li>\n<li>标识性的数字一定要定义成常量</li>\n<li>代码与符号之间加空格</li>\n<li>函数参数不可过多，最好不超过4个</li>\n<li>一般的Exception抛出交给调用者处理</li>\n<li>代码注释认真写</li>\n</ul>\n<hr>\n<p>暂时这么多，后面有的话再补充</p>\n<blockquote>\n<p>转载请指明出处RobinBlog：<a href=\"http://robinx.net/2016/12/02/Android编程规范/\" target=\"_blank\" rel=\"noopener\">http://robinx.net/2016/12/02/Android编程规范/</a></p>\n</blockquote>\n","categories":["Android"],"tags":["规范","代码"]},{"title":"加密你的App","url":"http://yoursite.com/2016/11/30/加密你的App/","content":"<p>企业级开发中加密数据一般都少不了，我们在与服务端交互中，发送的参数以及获取的数据都是加密后的，需要客户端与服务端互相加解密<br>初期我们使用了java提供的Cipher类，加解密效果是达到了，但是缺点也是明显的：太慢。每次加密过程一串不长的Json就将近1秒左右，为此不得不另外再开异步执行加解密，这样繁琐不简洁，整个APP的速度也被拖慢。</p>\n<h2 id=\"加密手段\"><a href=\"#加密手段\" class=\"headerlink\" title=\"加密手段\"></a>加密手段</h2><p>SqlCipher,Conceal.</p>\n<p>SqlCipher主要是数据库加密，此处与我们的场景对应不上，不考虑</p>\n<p>Conceal是Facebook出的，时间也不短了，之前只能引入jar和so文件，现在可以直接gradle依赖了</p>\n<h3 id=\"Conceal使用\"><a href=\"#Conceal使用\" class=\"headerlink\" title=\"Conceal使用\"></a>Conceal使用</h3><p>build.gradle添加依赖</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dependencies &#123;</span><br><span class=\"line\">   \tcompile <span class=\"string\">'com.facebook.conceal:conceal:1.1.3@aar'</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>为了使用方面，我封装成了一个类</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> net.robinx.lib.encrypt.conceal;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> android.content.Context;</span><br><span class=\"line\"><span class=\"keyword\">import</span> android.text.TextUtils;</span><br><span class=\"line\"><span class=\"keyword\">import</span> android.util.Base64;</span><br><span class=\"line\"><span class=\"keyword\">import</span> android.util.Log;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.facebook.android.crypto.keychain.AndroidConceal;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.facebook.android.crypto.keychain.SharedPrefsBackedKeyChain;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.facebook.crypto.Crypto;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.facebook.crypto.CryptoConfig;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.facebook.crypto.Entity;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.facebook.crypto.exception.CryptoInitializationException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.facebook.crypto.exception.KeyChainException;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> net.robinx.lib.encrypt.SecretKeyHelper;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.BufferedOutputStream;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.File;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.FileInputStream;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.FileOutputStream;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.InputStream;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.OutputStream;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.UnsupportedEncodingException;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Created by Robin on 2016/11/16 10:27.</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">enum</span> ConcealHelper &#123;</span><br><span class=\"line\">    INSTANCE;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"title\">ConcealHelper</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> String DEFAULT_ENCODE = <span class=\"string\">\"utf-8\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> String PREFIX_E = <span class=\"string\">\"encrypt_\"</span>, PREFIX_D = <span class=\"string\">\"decrypt_\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> SharedPrefsBackedKeyChain msp;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> Crypto mCrypto;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> Entity mEntity;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">init</span><span class=\"params\">(Context context)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"keyword\">null</span> == mCrypto) &#123;</span><br><span class=\"line\">            msp = <span class=\"keyword\">new</span> SharedPrefsBackedKeyChain(context, CryptoConfig.KEY_256);</span><br><span class=\"line\">            mCrypto = AndroidConceal.get().createDefaultCrypto(msp);</span><br><span class=\"line\">            String secretKey = SecretKeyHelper.getSecretKey(context);</span><br><span class=\"line\">            mEntity = Entity.create(secretKey);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 加密字节数组</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> plainBytes 原始字节数组</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span> 密文字节数组</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">byte</span>[] encryptByte(<span class=\"keyword\">byte</span>[] plainBytes) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!mCrypto.isAvailable()) &#123;</span><br><span class=\"line\">            Log.e(<span class=\"string\">\"system.out\"</span>, <span class=\"string\">\"encryptByte error: mCrypto is unavailable\"</span>);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"keyword\">null</span> == plainBytes || plainBytes.length &lt;= <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            Log.e(<span class=\"string\">\"system.out\"</span>, <span class=\"string\">\"encryptByte error: plainBytes is null or length &lt;= 0\"</span>);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">byte</span>[] result = mCrypto.encrypt(plainBytes, mEntity);</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (<span class=\"keyword\">null</span> == result || result.length == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                Log.e(<span class=\"string\">\"system.out\"</span>, <span class=\"string\">\"encryptByte error: result is null or length &lt;= 0\"</span>);</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (KeyChainException e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (CryptoInitializationException e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 解密字节数组</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> encryptBytes 密文字节数组</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span> 原始字节数组</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">byte</span>[] decryptByte(<span class=\"keyword\">byte</span>[] encryptBytes) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!mCrypto.isAvailable()) &#123;</span><br><span class=\"line\">            Log.e(<span class=\"string\">\"system.out\"</span>, <span class=\"string\">\"decryptByte error: mCrypto is unavailable\"</span>);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"keyword\">null</span> == encryptBytes || encryptBytes.length &lt;= <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            Log.e(<span class=\"string\">\"system.out\"</span>, <span class=\"string\">\"decryptByte error: encryptBytes is null or length &lt;= 0\"</span>);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">byte</span>[] result = mCrypto.decrypt(encryptBytes, mEntity);</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (<span class=\"keyword\">null</span> == result || result.length == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                Log.e(<span class=\"string\">\"system.out\"</span>, <span class=\"string\">\"decryptByte error: result is null or length &lt;= 0\"</span>);</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (KeyChainException e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (CryptoInitializationException e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 加密字符串</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> plainText 原始字符串</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span> 加密后字符串</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> String <span class=\"title\">encryptString</span><span class=\"params\">(String plainText)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (TextUtils.isEmpty(plainText)) &#123;</span><br><span class=\"line\">            Log.e(<span class=\"string\">\"system.out\"</span>, <span class=\"string\">\"encryptString error: plainText is empty\"</span>);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">byte</span>[] plainTextBytes = plainText.getBytes(DEFAULT_ENCODE);</span><br><span class=\"line\">            <span class=\"keyword\">byte</span>[] result = encryptByte(plainTextBytes);</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (<span class=\"keyword\">null</span> == result || result.length &lt;= <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                Log.e(<span class=\"string\">\"system.out\"</span>, <span class=\"string\">\"encryptString error: encrypt result is null or length &lt;= 0\"</span>);</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            String encryptText = Base64.encodeToString(result, Base64.DEFAULT);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">return</span> encryptText;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (UnsupportedEncodingException e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 解密字符串</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> encryptText 密文</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span> 原始字符串</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> String <span class=\"title\">decryptString</span><span class=\"params\">(String encryptText)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (TextUtils.isEmpty(encryptText)) &#123;</span><br><span class=\"line\">            Log.e(<span class=\"string\">\"system.out\"</span>, <span class=\"string\">\"decryptString error: encryptText is empty\"</span>);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">byte</span>[] encryptTextBytes = Base64.decode(encryptText, Base64.DEFAULT);</span><br><span class=\"line\">        <span class=\"keyword\">byte</span>[] data = decryptByte(encryptTextBytes);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"keyword\">null</span> == data || data.length &lt;= <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            Log.e(<span class=\"string\">\"system.out\"</span>, <span class=\"string\">\"decryptString error: decrypt result is null or length &lt;= 0\"</span>);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            String plainText = <span class=\"keyword\">new</span> String(data, DEFAULT_ENCODE);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> plainText;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (UnsupportedEncodingException e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 加密文件</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> file 源文件</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span> 加密文件，文件名：encrypt_xxx</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> File <span class=\"title\">encryptFile</span><span class=\"params\">(File file)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!mCrypto.isAvailable()) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"keyword\">null</span> == file) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        String originFilePath = file.getAbsolutePath();</span><br><span class=\"line\">        String encryptFilePath = String.format(<span class=\"string\">\"%s%s%s%s\"</span>, file.getParent(), File.separator, PREFIX_E, file.getName());</span><br><span class=\"line\"></span><br><span class=\"line\">        File encryptFile = <span class=\"keyword\">new</span> File(encryptFilePath);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (encryptFile.exists()) &#123;</span><br><span class=\"line\">            encryptFile.deleteOnExit();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            FileInputStream sourceFile = <span class=\"keyword\">new</span> FileInputStream(originFilePath);</span><br><span class=\"line\"></span><br><span class=\"line\">            OutputStream fileOS = <span class=\"keyword\">new</span> BufferedOutputStream(<span class=\"keyword\">new</span> FileOutputStream(encryptFile));</span><br><span class=\"line\">            OutputStream out = mCrypto.getCipherOutputStream(fileOS, mEntity);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">int</span> read = <span class=\"number\">0</span>;</span><br><span class=\"line\">            <span class=\"keyword\">byte</span>[] buffer = <span class=\"keyword\">new</span> <span class=\"keyword\">byte</span>[<span class=\"number\">1024</span>];</span><br><span class=\"line\">            <span class=\"keyword\">while</span> ((read = sourceFile.read(buffer)) != -<span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">                out.write(buffer, <span class=\"number\">0</span>, read);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            out.flush();</span><br><span class=\"line\">            fileOS.flush();</span><br><span class=\"line\">            out.close();</span><br><span class=\"line\">            fileOS.close();</span><br><span class=\"line\"></span><br><span class=\"line\">            sourceFile.close();</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">return</span> encryptFile;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (CryptoInitializationException e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (KeyChainException e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 解密文件</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> file 源文件(加密后的)</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span> 解密文件,文件名：decrypt_xxx</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> File <span class=\"title\">decryptFile</span><span class=\"params\">(File file)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!mCrypto.isAvailable()) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"keyword\">null</span> == file) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        String fileName = file.getName();</span><br><span class=\"line\">        fileName = fileName.substring(PREFIX_E.length(), fileName.length());</span><br><span class=\"line\">        String originFilePath = file.getAbsolutePath();</span><br><span class=\"line\">        String decryptFilePath = String.format(<span class=\"string\">\"%s%s%s%s\"</span>, file.getParent(), File.separator, PREFIX_D, fileName);</span><br><span class=\"line\"></span><br><span class=\"line\">        File decryptFile = <span class=\"keyword\">new</span> File(decryptFilePath);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (decryptFile.exists()) &#123;</span><br><span class=\"line\">            decryptFile.deleteOnExit();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            FileInputStream fileInputStream = <span class=\"keyword\">new</span> FileInputStream(originFilePath);</span><br><span class=\"line\">            InputStream inputStream = mCrypto.getCipherInputStream(fileInputStream, mEntity);</span><br><span class=\"line\"></span><br><span class=\"line\">            OutputStream out = <span class=\"keyword\">new</span> BufferedOutputStream(<span class=\"keyword\">new</span> FileOutputStream(decryptFile));</span><br><span class=\"line\">            <span class=\"keyword\">int</span> read = <span class=\"number\">0</span>;</span><br><span class=\"line\">            <span class=\"keyword\">byte</span>[] buffer = <span class=\"keyword\">new</span> <span class=\"keyword\">byte</span>[<span class=\"number\">1024</span>];</span><br><span class=\"line\">            <span class=\"keyword\">while</span> ((read = inputStream.read(buffer)) != -<span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">                out.write(buffer, <span class=\"number\">0</span>, read);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            out.flush();</span><br><span class=\"line\">            out.close();</span><br><span class=\"line\"></span><br><span class=\"line\">            inputStream.close();</span><br><span class=\"line\">            fileInputStream.close();</span><br><span class=\"line\">            <span class=\"keyword\">return</span> decryptFile;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (CryptoInitializationException e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (KeyChainException e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"在项目的Application的onCreate-函数中初始化\"><a href=\"#在项目的Application的onCreate-函数中初始化\" class=\"headerlink\" title=\"在项目的Application的onCreate()函数中初始化\"></a>在项目的Application的onCreate()函数中初始化</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MainApplication</span> <span class=\"keyword\">extends</span> <span class=\"title\">Application</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onCreate</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>.onCreate();</span><br><span class=\"line\"></span><br><span class=\"line\">        ConcealHelper.init(<span class=\"keyword\">this</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"加密字符串\"><a href=\"#加密字符串\" class=\"headerlink\" title=\"加密字符串\"></a>加密字符串</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">String encryptText = ConcealHelper.encryptString(jsonStr);</span><br></pre></td></tr></table></figure>\n<h4 id=\"解密字符串\"><a href=\"#解密字符串\" class=\"headerlink\" title=\"解密字符串\"></a>解密字符串</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">String originalText = ConcealHelper.decryptString(encryptText);</span><br></pre></td></tr></table></figure>\n<p>中间我们还加了一层Base64编码，因为Conceal的加解密都是针对byte[],使用Base64对其编码，转换为字符串</p>\n<p>测试发现很长的一串Json，每次加密时间基本在10 ms以内，解密时间与加密差不多，可以说是飞快了。</p>\n<h4 id=\"加密文件\"><a href=\"#加密文件\" class=\"headerlink\" title=\"加密文件\"></a>加密文件</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">File originalFile = <span class=\"keyword\">new</span> File(<span class=\"string\">\"/sdcard/1.gif\"</span>);</span><br><span class=\"line\">File encryptFile = ConcealHelper.encryptFile(originalFile);</span><br></pre></td></tr></table></figure>\n<h4 id=\"解密文件\"><a href=\"#解密文件\" class=\"headerlink\" title=\"解密文件\"></a>解密文件</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">File decryptFile = ConcealHelper.decryptFile(encryptFile);</span><br></pre></td></tr></table></figure>\n<h3 id=\"SecretKey\"><a href=\"#SecretKey\" class=\"headerlink\" title=\"SecretKey\"></a>SecretKey</h3><p>在上面的初始化函数中，有个获取secret的操作</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">String secretKey = SecretKeyHelper.getSecretKey(context);</span><br></pre></td></tr></table></figure>\n<p>这个Key是我们的重点，就是我们所说的密钥，实际上就是一串字符串，保存在sd卡不安全，我们可以通过jni，每次从so文件获取，因为相比较而言，so破解少一些，难一点。</p>\n<h4 id=\"创建一个SecretKeyHelper类\"><a href=\"#创建一个SecretKeyHelper类\" class=\"headerlink\" title=\"创建一个SecretKeyHelper类\"></a>创建一个SecretKeyHelper类</h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> net.robinx.lib.encrypt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> android.content.Context;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SecretKeyHelper</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">static</span> &#123;</span><br><span class=\"line\">\t\tSystem.loadLibrary(<span class=\"string\">\"secretkey\"</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> <span class=\"keyword\">static</span> String sSecretKeyText;</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> String <span class=\"title\">getSecretKey</span><span class=\"params\">(Context con)</span></span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> (sSecretKeyText ==<span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">\t\t\tsSecretKeyText =createSecretKey(con);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> sSecretKeyText;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">native</span> String <span class=\"title\">createSecretKey</span><span class=\"params\">(Context con)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"C-实现\"><a href=\"#C-实现\" class=\"headerlink\" title=\"C++实现\"></a>C++实现</h4><p>创建native方法createSecretKey由C++实现</p>\n<h5 id=\"头文件secretkey-h\"><a href=\"#头文件secretkey-h\" class=\"headerlink\" title=\"头文件secretkey.h\"></a>头文件secretkey.h</h5><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#include &lt;jni.h&gt;</span><br><span class=\"line\">#define UTF_8 \"UTF-8\"</span><br><span class=\"line\">#ifdef __cplusplus</span><br><span class=\"line\"></span><br><span class=\"line\">extern <span class=\"string\">\"C\"</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\">jstring <span class=\"title\">Java_net_robinx_lib_encrypt_SecretKeyHelper_createSecretKey</span><span class=\"params\">(JNIEnv *, jobject,jobject)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">#endif</span><br></pre></td></tr></table></figure>\n<h5 id=\"cpp文件secretkey-cpp\"><a href=\"#cpp文件secretkey-cpp\" class=\"headerlink\" title=\"cpp文件secretkey.cpp\"></a>cpp文件secretkey.cpp</h5><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br><span class=\"line\">300</span><br><span class=\"line\">301</span><br><span class=\"line\">302</span><br><span class=\"line\">303</span><br><span class=\"line\">304</span><br><span class=\"line\">305</span><br><span class=\"line\">306</span><br><span class=\"line\">307</span><br><span class=\"line\">308</span><br><span class=\"line\">309</span><br><span class=\"line\">310</span><br><span class=\"line\">311</span><br><span class=\"line\">312</span><br><span class=\"line\">313</span><br><span class=\"line\">314</span><br><span class=\"line\">315</span><br><span class=\"line\">316</span><br><span class=\"line\">317</span><br><span class=\"line\">318</span><br><span class=\"line\">319</span><br><span class=\"line\">320</span><br><span class=\"line\">321</span><br><span class=\"line\">322</span><br><span class=\"line\">323</span><br><span class=\"line\">324</span><br><span class=\"line\">325</span><br><span class=\"line\">326</span><br><span class=\"line\">327</span><br><span class=\"line\">328</span><br><span class=\"line\">329</span><br><span class=\"line\">330</span><br><span class=\"line\">331</span><br><span class=\"line\">332</span><br><span class=\"line\">333</span><br><span class=\"line\">334</span><br><span class=\"line\">335</span><br><span class=\"line\">336</span><br><span class=\"line\">337</span><br><span class=\"line\">338</span><br><span class=\"line\">339</span><br><span class=\"line\">340</span><br><span class=\"line\">341</span><br><span class=\"line\">342</span><br><span class=\"line\">343</span><br><span class=\"line\">344</span><br><span class=\"line\">345</span><br><span class=\"line\">346</span><br><span class=\"line\">347</span><br><span class=\"line\">348</span><br><span class=\"line\">349</span><br><span class=\"line\">350</span><br><span class=\"line\">351</span><br><span class=\"line\">352</span><br><span class=\"line\">353</span><br><span class=\"line\">354</span><br><span class=\"line\">355</span><br><span class=\"line\">356</span><br><span class=\"line\">357</span><br><span class=\"line\">358</span><br><span class=\"line\">359</span><br><span class=\"line\">360</span><br><span class=\"line\">361</span><br><span class=\"line\">362</span><br><span class=\"line\">363</span><br><span class=\"line\">364</span><br><span class=\"line\">365</span><br><span class=\"line\">366</span><br><span class=\"line\">367</span><br><span class=\"line\">368</span><br><span class=\"line\">369</span><br><span class=\"line\">370</span><br><span class=\"line\">371</span><br><span class=\"line\">372</span><br><span class=\"line\">373</span><br><span class=\"line\">374</span><br><span class=\"line\">375</span><br><span class=\"line\">376</span><br><span class=\"line\">377</span><br><span class=\"line\">378</span><br><span class=\"line\">379</span><br><span class=\"line\">380</span><br><span class=\"line\">381</span><br><span class=\"line\">382</span><br><span class=\"line\">383</span><br><span class=\"line\">384</span><br><span class=\"line\">385</span><br><span class=\"line\">386</span><br><span class=\"line\">387</span><br><span class=\"line\">388</span><br><span class=\"line\">389</span><br><span class=\"line\">390</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;string&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">\"secretkey.h\"</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;android/log.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> LOG_TAG <span class=\"meta-string\">\"robin_jni\"</span> <span class=\"comment\">// 自定义的LOG的标识</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> LOGOPEN 1 <span class=\"comment\">//日志开关，1为开，其它为关</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> LOGD(...) __android_log_print(ANDROID_LOG_DEBUG,LOG_TAG ,__VA_ARGS__)</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> LOGI(...)  __android_log_print(ANDROID_LOG_INFO,LOG_TAG,__VA_ARGS__)</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> LOGW(...) __android_log_print(ANDROID_LOG_WARN,TAG ,__VA_ARGS__)</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> LOGE(...) __android_log_print(ANDROID_LOG_ERROR,TAG ,__VA_ARGS__)</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> LOGF(...) __android_log_print(ANDROID_LOG_FATAL,TAG ,__VA_ARGS__)</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//char* to jstring</span></span><br><span class=\"line\"><span class=\"function\">jstring <span class=\"title\">toString</span><span class=\"params\">(JNIEnv* env, jbyteArray byteArray)</span> </span>&#123;</span><br><span class=\"line\">\tjclass string_cls = env-&gt;FindClass(<span class=\"string\">\"java/lang/String\"</span>);</span><br><span class=\"line\">\tjmethodID new_string_mid = env-&gt;GetMethodID(string_cls, <span class=\"string\">\"&lt;init&gt;\"</span>,</span><br><span class=\"line\">\t\t\t<span class=\"string\">\"([BLjava/lang/String;)V\"</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"keyword\">reinterpret_cast</span>&lt;jstring&gt;(env-&gt;NewObject(string_cls, new_string_mid,</span><br><span class=\"line\">\t\t\tbyteArray, env-&gt;NewStringUTF(UTF_8)));</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\">jbyteArray <span class=\"title\">toBytes</span><span class=\"params\">(JNIEnv* env, <span class=\"keyword\">const</span> <span class=\"keyword\">char</span>* bytes)</span> </span>&#123;</span><br><span class=\"line\">\tjclass string_cls = env-&gt;FindClass(<span class=\"string\">\"java/lang/String\"</span>);</span><br><span class=\"line\">\tjmethodID get_bytes_mid = env-&gt;GetMethodID(string_cls, <span class=\"string\">\"getBytes\"</span>,</span><br><span class=\"line\">\t\t\t<span class=\"string\">\"(Ljava/lang/String;)[B\"</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"keyword\">reinterpret_cast</span>&lt;jbyteArray&gt;(env-&gt;CallObjectMethod(</span><br><span class=\"line\">\t\t\tenv-&gt;NewStringUTF(bytes), get_bytes_mid, env-&gt;NewStringUTF(UTF_8)));</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\">jbyteArray <span class=\"title\">toBytes</span><span class=\"params\">(JNIEnv* env, jstring <span class=\"built_in\">string</span>)</span> </span>&#123;</span><br><span class=\"line\">\tjclass string_cls = env-&gt;FindClass(<span class=\"string\">\"java/lang/String\"</span>);</span><br><span class=\"line\">\tjmethodID get_bytes_mid = env-&gt;GetMethodID(string_cls, <span class=\"string\">\"getBytes\"</span>,</span><br><span class=\"line\">\t\t\t<span class=\"string\">\"(Ljava/lang/String;)[B\"</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"keyword\">reinterpret_cast</span>&lt;jbyteArray&gt;(env-&gt;CallObjectMethod(<span class=\"built_in\">string</span>,</span><br><span class=\"line\">\t\t\tget_bytes_mid, env-&gt;NewStringUTF(UTF_8)));</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\">jbyteArray <span class=\"title\">getDigestedBytes</span><span class=\"params\">(JNIEnv* env, jbyteArray complex_bytes)</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">static</span> jobject satic_message_digest_obj = __null;</span><br><span class=\"line\">\tjclass message_digest_cls = env-&gt;FindClass(<span class=\"string\">\"java/security/MessageDigest\"</span>);</span><br><span class=\"line\">\tjmethodID get_instance_mid = env-&gt;GetStaticMethodID(message_digest_cls,</span><br><span class=\"line\">\t\t\t<span class=\"string\">\"getInstance\"</span>, <span class=\"string\">\"(Ljava/lang/String;)Ljava/security/MessageDigest;\"</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (satic_message_digest_obj == __null) &#123;</span><br><span class=\"line\">\t\tjobject local_message_digest_obj = env-&gt;CallStaticObjectMethod(</span><br><span class=\"line\">\t\t\t\tmessage_digest_cls, get_instance_mid, env-&gt;NewStringUTF(<span class=\"string\">\"MD5\"</span>));</span><br><span class=\"line\">\t\tsatic_message_digest_obj = env-&gt;NewGlobalRef(local_message_digest_obj);</span><br><span class=\"line\">\t\tenv-&gt;DeleteLocalRef(local_message_digest_obj);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tjmethodID digest_mid = env-&gt;GetMethodID(message_digest_cls, <span class=\"string\">\"digest\"</span>,</span><br><span class=\"line\">\t\t\t<span class=\"string\">\"([B)[B\"</span>);</span><br><span class=\"line\">\tenv-&gt;DeleteLocalRef(message_digest_cls);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"keyword\">reinterpret_cast</span>&lt;jbyteArray&gt;(env-&gt;CallObjectMethod(</span><br><span class=\"line\">\t\t\tsatic_message_digest_obj, digest_mid, complex_bytes));</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\">jstring <span class=\"title\">toHex</span><span class=\"params\">(JNIEnv* env, jbyteArray digested_bytes)</span> </span>&#123;</span><br><span class=\"line\">\tjclass big_integer_cls = env-&gt;FindClass(<span class=\"string\">\"java/math/BigInteger\"</span>);</span><br><span class=\"line\">\tjmethodID new_big_integer_mid = env-&gt;GetMethodID(big_integer_cls, <span class=\"string\">\"&lt;init&gt;\"</span>,</span><br><span class=\"line\">\t\t\t<span class=\"string\">\"(I[B)V\"</span>);</span><br><span class=\"line\">\tjobject big_integer_obj = env-&gt;NewObject(big_integer_cls,</span><br><span class=\"line\">\t\t\tnew_big_integer_mid, <span class=\"number\">1</span>, digested_bytes);</span><br><span class=\"line\">\tenv-&gt;DeleteLocalRef(digested_bytes);</span><br><span class=\"line\">\tjmethodID to_String_mid = env-&gt;GetMethodID(big_integer_cls, <span class=\"string\">\"toString\"</span>,</span><br><span class=\"line\">\t\t\t<span class=\"string\">\"(I)Ljava/lang/String;\"</span>);</span><br><span class=\"line\">\tenv-&gt;DeleteLocalRef(big_integer_cls);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"keyword\">reinterpret_cast</span>&lt;jstring&gt;(env-&gt;CallObjectMethod(big_integer_obj,</span><br><span class=\"line\">\t\t\tto_String_mid, <span class=\"number\">16</span>));</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\">jstring <span class=\"title\">getMD5</span><span class=\"params\">(JNIEnv* env, jstring jInfo)</span> </span>&#123;</span><br><span class=\"line\">\tjbyteArray digested_bytes = getDigestedBytes(env, toBytes(env, jInfo));</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> toHex(env, digested_bytes);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\">jstring <span class=\"title\">getAppendedString</span><span class=\"params\">(JNIEnv* env, jobject thiz, jstring s1, jstring s2)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">const</span> <span class=\"keyword\">char</span> *s1x = (env)-&gt;GetStringUTFChars(s1, <span class=\"literal\">NULL</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">const</span> <span class=\"keyword\">char</span> *s2x = (env)-&gt;GetStringUTFChars(s2, <span class=\"literal\">NULL</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">char</span> *sall = <span class=\"keyword\">new</span> <span class=\"keyword\">char</span>[<span class=\"built_in\">strlen</span>(s1x) + <span class=\"built_in\">strlen</span>(s2x) + <span class=\"number\">1</span>];</span><br><span class=\"line\">\t<span class=\"built_in\">strcpy</span>(sall, s1x);</span><br><span class=\"line\">\t<span class=\"built_in\">strcat</span>(sall, s2x);</span><br><span class=\"line\"></span><br><span class=\"line\">\tjstring retval = (env)-&gt;NewStringUTF(sall);</span><br><span class=\"line\"></span><br><span class=\"line\">\t(env)-&gt;ReleaseStringUTFChars(s1, s1x);</span><br><span class=\"line\">\t(env)-&gt;ReleaseStringUTFChars(s2, s2x);</span><br><span class=\"line\">\t<span class=\"built_in\">free</span>(sall);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> retval;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\">jobject <span class=\"title\">getInstance</span><span class=\"params\">(JNIEnv* env, jclass obj_class)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\tjmethodID construction_id = env-&gt;GetMethodID(obj_class, <span class=\"string\">\"&lt;init&gt;\"</span>, <span class=\"string\">\"()V\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\tjobject obj = env-&gt;NewObject(obj_class, construction_id);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> obj;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//获取deviceid</span></span><br><span class=\"line\"><span class=\"function\">jstring <span class=\"title\">getDeviceID</span><span class=\"params\">(JNIEnv *env, jobject thiz, jobject mContext)</span> </span>&#123;</span><br><span class=\"line\">\tjclass cls_context = (env)-&gt;FindClass(<span class=\"string\">\"android/content/Context\"</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (cls_context == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> (env)-&gt;NewStringUTF(<span class=\"string\">\"unknown\"</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tjmethodID getSystemService = (env)-&gt;GetMethodID(cls_context,</span><br><span class=\"line\">\t\t\t<span class=\"string\">\"getSystemService\"</span>, <span class=\"string\">\"(Ljava/lang/String;)Ljava/lang/Object;\"</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (getSystemService == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> (env)-&gt;NewStringUTF(<span class=\"string\">\"unknown\"</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tjfieldID TELEPHONY_SERVICE = (env)-&gt;GetStaticFieldID(cls_context,</span><br><span class=\"line\">\t\t\t<span class=\"string\">\"TELEPHONY_SERVICE\"</span>, <span class=\"string\">\"Ljava/lang/String;\"</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (TELEPHONY_SERVICE == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> (env)-&gt;NewStringUTF(<span class=\"string\">\"unknown\"</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tjobject str = (env)-&gt;GetStaticObjectField(cls_context, TELEPHONY_SERVICE);</span><br><span class=\"line\">\tjobject telephonymanager = (env)-&gt;CallObjectMethod(mContext,</span><br><span class=\"line\">\t\t\tgetSystemService, str);</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (telephonymanager == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> (env)-&gt;NewStringUTF(<span class=\"string\">\"unknown\"</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tjclass cls_tm = (env)-&gt;FindClass(<span class=\"string\">\"android/telephony/TelephonyManager\"</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (cls_tm == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> (env)-&gt;NewStringUTF(<span class=\"string\">\"unknown\"</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tjmethodID getDeviceId = (env)-&gt;GetMethodID(cls_tm, <span class=\"string\">\"getDeviceId\"</span>,</span><br><span class=\"line\">\t\t\t<span class=\"string\">\"()Ljava/lang/String;\"</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (getDeviceId == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> (env)-&gt;NewStringUTF(<span class=\"string\">\"unknown\"</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tjobject deviceid = (env)-&gt;CallObjectMethod(telephonymanager, getDeviceId);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> (jstring) deviceid;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//获取SerialNumber</span></span><br><span class=\"line\"><span class=\"function\">jstring <span class=\"title\">getSerialNumber</span><span class=\"params\">(JNIEnv *env, jobject thiz, jobject mContext)</span> </span>&#123;</span><br><span class=\"line\">\tjclass cls_tm = (env)-&gt;FindClass(<span class=\"string\">\"android/os/SystemProperties\"</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (cls_tm == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> (env)-&gt;NewStringUTF(<span class=\"string\">\"unknown\"</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tjmethodID getDeviceId = (env)-&gt;GetStaticMethodID(cls_tm, <span class=\"string\">\"get\"</span>,</span><br><span class=\"line\">\t\t\t<span class=\"string\">\"(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;\"</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (getDeviceId == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> (env)-&gt;NewStringUTF(<span class=\"string\">\"unknown\"</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tjstring param1 = (env)-&gt;NewStringUTF(<span class=\"string\">\"ro.serialno\"</span>);</span><br><span class=\"line\">\tjstring param2 = (env)-&gt;NewStringUTF(<span class=\"string\">\"unknown\"</span>);</span><br><span class=\"line\">\tjobject deviceid = (env)-&gt;CallStaticObjectMethod(cls_tm, getDeviceId,</span><br><span class=\"line\">\t\t\tparam1, param2);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> (jstring) deviceid;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\">jstring <span class=\"title\">jint2jstring</span><span class=\"params\">(JNIEnv *env, jint first)</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">char</span> buf[<span class=\"number\">64</span>]; <span class=\"comment\">// assumed large enough to cope with result</span></span><br><span class=\"line\">  <span class=\"built_in\">sprintf</span>(buf, <span class=\"string\">\"%d\"</span>, first);  <span class=\"comment\">// error checking omitted</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> env-&gt;NewStringUTF( buf);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//获取公钥</span></span><br><span class=\"line\"><span class=\"function\">jstring <span class=\"title\">getPublicKey</span><span class=\"params\">(JNIEnv* env, jobject thiz,jobject context)</span> </span>&#123;</span><br><span class=\"line\">\tjclass context_cls = env-&gt;GetObjectClass(context);</span><br><span class=\"line\">\tjmethodID get_package_manager_mid = env-&gt;GetMethodID(context_cls,</span><br><span class=\"line\">\t\t\t<span class=\"string\">\"getPackageManager\"</span>, <span class=\"string\">\"()Landroid/content/pm/PackageManager;\"</span>);</span><br><span class=\"line\">\tjmethodID get_package_name_mid = env-&gt;GetMethodID(context_cls,</span><br><span class=\"line\">\t\t\t<span class=\"string\">\"getPackageName\"</span>, <span class=\"string\">\"()Ljava/lang/String;\"</span>);</span><br><span class=\"line\">\tenv-&gt;DeleteLocalRef(context_cls);</span><br><span class=\"line\">\tjobject pm_obj = env-&gt;CallObjectMethod(context, get_package_manager_mid);</span><br><span class=\"line\">\tjclass pm_cls = env-&gt;FindClass(<span class=\"string\">\"android/content/pm/PackageManager\"</span>);</span><br><span class=\"line\">\tjmethodID get_package_info_mid = env-&gt;GetMethodID(pm_cls, <span class=\"string\">\"getPackageInfo\"</span>,</span><br><span class=\"line\">\t\t\t<span class=\"string\">\"(Ljava/lang/String;I)Landroid/content/pm/PackageInfo;\"</span>);</span><br><span class=\"line\">\tjstring package_name = <span class=\"keyword\">reinterpret_cast</span>&lt;jstring&gt;(env-&gt;CallObjectMethod(</span><br><span class=\"line\">\t\t\tcontext, get_package_name_mid));</span><br><span class=\"line\">\tjfieldID flag_fid = env-&gt;GetStaticFieldID(pm_cls, <span class=\"string\">\"GET_SIGNATURES\"</span>, <span class=\"string\">\"I\"</span>);</span><br><span class=\"line\">\tjint flag = env-&gt;GetStaticIntField(pm_cls, flag_fid);</span><br><span class=\"line\">\tenv-&gt;DeleteLocalRef(pm_cls);</span><br><span class=\"line\">\tjobject pi_obj = env-&gt;CallObjectMethod(pm_obj, get_package_info_mid,</span><br><span class=\"line\">\t\t\tpackage_name, flag);</span><br><span class=\"line\">\tenv-&gt;DeleteLocalRef(package_name);</span><br><span class=\"line\">\tjclass pi_cls = env-&gt;FindClass(<span class=\"string\">\"android/content/pm/PackageInfo\"</span>);</span><br><span class=\"line\">\tjfieldID signatures_fid = env-&gt;GetFieldID(pi_cls, <span class=\"string\">\"signatures\"</span>,</span><br><span class=\"line\">\t\t\t<span class=\"string\">\"[Landroid/content/pm/Signature;\"</span>);</span><br><span class=\"line\">\tenv-&gt;DeleteLocalRef(pi_cls);</span><br><span class=\"line\">\tjobject sig_obj = env-&gt;GetObjectField(pi_obj, signatures_fid);</span><br><span class=\"line\">\tenv-&gt;DeleteLocalRef(pi_obj);</span><br><span class=\"line\">\tjobjectArray sigs = <span class=\"keyword\">reinterpret_cast</span>&lt;jobjectArray&gt;(sig_obj);</span><br><span class=\"line\"></span><br><span class=\"line\">\tjclass signature_cls = env-&gt;FindClass(<span class=\"string\">\"android/content/pm/Signature\"</span>);</span><br><span class=\"line\">\tjmethodID to_byte_array_mid = env-&gt;GetMethodID(signature_cls, <span class=\"string\">\"toByteArray\"</span>,</span><br><span class=\"line\">\t\t\t<span class=\"string\">\"()[B\"</span>);</span><br><span class=\"line\">\tjbyteArray sig_bytes = <span class=\"keyword\">reinterpret_cast</span>&lt;jbyteArray&gt;(env-&gt;CallObjectMethod(</span><br><span class=\"line\">\t\t\tenv-&gt;GetObjectArrayElement(sigs, <span class=\"number\">0</span>), to_byte_array_mid));</span><br><span class=\"line\">\tjclass certificate_factory_cls = env-&gt;FindClass(</span><br><span class=\"line\">\t\t\t<span class=\"string\">\"java/security/cert/CertificateFactory\"</span>);</span><br><span class=\"line\">\tjmethodID get_certificate_instance_mid = env-&gt;GetStaticMethodID(</span><br><span class=\"line\">\t\t\tcertificate_factory_cls, <span class=\"string\">\"getInstance\"</span>,</span><br><span class=\"line\">\t\t\t<span class=\"string\">\"(Ljava/lang/String;)Ljava/security/cert/CertificateFactory;\"</span>);</span><br><span class=\"line\">\tjobject certificate_factory_obj = env-&gt;CallStaticObjectMethod(</span><br><span class=\"line\">\t\t\tcertificate_factory_cls, get_certificate_instance_mid,</span><br><span class=\"line\">\t\t\tenv-&gt;NewStringUTF(<span class=\"string\">\"X509\"</span>));</span><br><span class=\"line\">\tjmethodID generate_certificate_mid = env-&gt;GetMethodID(</span><br><span class=\"line\">\t\t\tcertificate_factory_cls, <span class=\"string\">\"generateCertificate\"</span>,</span><br><span class=\"line\">\t\t\t<span class=\"string\">\"(Ljava/io/InputStream;)Ljava/security/cert/Certificate;\"</span>);</span><br><span class=\"line\">\tenv-&gt;DeleteLocalRef(certificate_factory_cls);</span><br><span class=\"line\">\tjclass certificate_cls = env-&gt;FindClass(<span class=\"string\">\"java/security/cert/Certificate\"</span>);</span><br><span class=\"line\">\tjclass byte_input_stream_cls = env-&gt;FindClass(</span><br><span class=\"line\">\t\t\t<span class=\"string\">\"java/io/ByteArrayInputStream\"</span>);</span><br><span class=\"line\">\tjmethodID new_sig_bytes_is_mid = env-&gt;GetMethodID(byte_input_stream_cls,</span><br><span class=\"line\">\t\t\t<span class=\"string\">\"&lt;init&gt;\"</span>, <span class=\"string\">\"([B)V\"</span>);</span><br><span class=\"line\">\tjobject sig_bytes_is = env-&gt;NewObject(byte_input_stream_cls,</span><br><span class=\"line\">\t\t\tnew_sig_bytes_is_mid, sig_bytes);</span><br><span class=\"line\">\tenv-&gt;DeleteLocalRef(sig_bytes);</span><br><span class=\"line\">\tenv-&gt;DeleteLocalRef(byte_input_stream_cls);</span><br><span class=\"line\">\tjobject cert = env-&gt;CallObjectMethod(certificate_factory_obj,</span><br><span class=\"line\">\t\t\tgenerate_certificate_mid, sig_bytes_is);</span><br><span class=\"line\">\tenv-&gt;DeleteLocalRef(sig_bytes_is);</span><br><span class=\"line\">\tenv-&gt;DeleteLocalRef(certificate_factory_obj);</span><br><span class=\"line\">\tjmethodID get_pubic_key_mid = env-&gt;GetMethodID(certificate_cls,</span><br><span class=\"line\">\t\t\t<span class=\"string\">\"getPublicKey\"</span>, <span class=\"string\">\"()Ljava/security/PublicKey;\"</span>);</span><br><span class=\"line\">\tenv-&gt;DeleteLocalRef(certificate_cls);</span><br><span class=\"line\"></span><br><span class=\"line\">\tjobject publicKey  = env-&gt;CallObjectMethod(cert, get_pubic_key_mid);</span><br><span class=\"line\">\tjclass publicKey_cls = env-&gt;GetObjectClass(publicKey);</span><br><span class=\"line\">\tjmethodID toString_mid = env-&gt;GetMethodID(publicKey_cls,<span class=\"string\">\"toString\"</span>, <span class=\"string\">\"()Ljava/lang/String;\"</span>);</span><br><span class=\"line\">\tjstring publicKey_str = <span class=\"keyword\">static_cast</span>&lt;jstring&gt;(env-&gt;CallObjectMethod(publicKey,toString_mid));</span><br><span class=\"line\">\tenv-&gt;DeleteLocalRef(cert);</span><br><span class=\"line\">\tenv-&gt;DeleteLocalRef(publicKey_cls);</span><br><span class=\"line\">\tenv-&gt;DeleteLocalRef(publicKey);</span><br><span class=\"line\"></span><br><span class=\"line\">\tjclass string_cls = env-&gt;GetObjectClass(publicKey_str);</span><br><span class=\"line\">\tjmethodID indexOf_mid = env-&gt;GetMethodID(string_cls,<span class=\"string\">\"indexOf\"</span>, <span class=\"string\">\"(Ljava/lang/String;)I\"</span>);</span><br><span class=\"line\">\tjstring param = env-&gt;NewStringUTF(<span class=\"string\">\"modulus\"</span>);</span><br><span class=\"line\">\tjint aa = env-&gt;CallIntMethod(publicKey_str,indexOf_mid,param);</span><br><span class=\"line\">\tjstring param2 = env-&gt;NewStringUTF(<span class=\"string\">\"publicExponent\"</span>);</span><br><span class=\"line\">\tjint bb = env-&gt;CallIntMethod(publicKey_str,indexOf_mid,param2);</span><br><span class=\"line\"></span><br><span class=\"line\">\tjmethodID substring_mid = env-&gt;GetMethodID(string_cls,<span class=\"string\">\"substring\"</span>, <span class=\"string\">\"(II)Ljava/lang/String;\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\tjstring publicKey2_str = <span class=\"keyword\">static_cast</span>&lt;jstring&gt;(env-&gt;CallObjectMethod(publicKey_str,substring_mid,aa+<span class=\"number\">8</span>,bb<span class=\"number\">-1</span>));</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> publicKey2_str;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//获取签名</span></span><br><span class=\"line\"><span class=\"function\">jstring <span class=\"title\">getSignatures</span><span class=\"params\">(JNIEnv* env, jobject thizz,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">\t\tjobject thiz)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\tjclass native_clazz = env-&gt;GetObjectClass(thiz);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// 得到 getPackageManager 方法的 ID</span></span><br><span class=\"line\">\tjmethodID methodID_func = env-&gt;GetMethodID(native_clazz,</span><br><span class=\"line\">\t\t\t<span class=\"string\">\"getPackageManager\"</span>, <span class=\"string\">\"()Landroid/content/pm/PackageManager;\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// 获得应用包的管理器</span></span><br><span class=\"line\">\tjobject package_manager = env-&gt;CallObjectMethod(thiz, methodID_func);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// 获得 PackageManager 类</span></span><br><span class=\"line\">\tjclass pm_clazz = env-&gt;GetObjectClass(package_manager);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// 得到 getPackageInfo 方法的 ID</span></span><br><span class=\"line\">\tjmethodID methodID_pm = env-&gt;GetMethodID(pm_clazz, <span class=\"string\">\"getPackageInfo\"</span>,</span><br><span class=\"line\">\t\t\t<span class=\"string\">\"(Ljava/lang/String;I)Landroid/content/pm/PackageInfo;\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//获取包名</span></span><br><span class=\"line\">\tjmethodID methodID_packagename = env-&gt;GetMethodID(native_clazz,</span><br><span class=\"line\">\t\t\t<span class=\"string\">\"getPackageName\"</span>, <span class=\"string\">\"()Ljava/lang/String;\"</span>);</span><br><span class=\"line\">\tjstring name_str = <span class=\"keyword\">static_cast</span>&lt;jstring&gt;(env-&gt;CallObjectMethod(thiz,</span><br><span class=\"line\">\t\t\tmethodID_packagename));</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// 获得应用包的信息</span></span><br><span class=\"line\">\tjobject package_info = env-&gt;CallObjectMethod(package_manager, methodID_pm,</span><br><span class=\"line\">\t\t\tname_str, <span class=\"number\">64</span>);\t\t<span class=\"comment\">//env-&gt;NewStringUTF(\"com.example.contasdf\")</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// 获得 PackageInfo 类</span></span><br><span class=\"line\">\tjclass pi_clazz = env-&gt;GetObjectClass(package_info);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// 获得签名数组属性的 ID</span></span><br><span class=\"line\">\tjfieldID fieldID_signatures = env-&gt;GetFieldID(pi_clazz, <span class=\"string\">\"signatures\"</span>,</span><br><span class=\"line\">\t\t\t<span class=\"string\">\"[Landroid/content/pm/Signature;\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// 得到签名数组，待修改</span></span><br><span class=\"line\">\tjobject signatur = env-&gt;GetObjectField(package_info, fieldID_signatures);</span><br><span class=\"line\">\tjobjectArray signatures = <span class=\"keyword\">reinterpret_cast</span>&lt;jobjectArray&gt;(signatur);</span><br><span class=\"line\">\t<span class=\"comment\">// 得到签名</span></span><br><span class=\"line\">\tjobject signature = env-&gt;GetObjectArrayElement(signatures, <span class=\"number\">0</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// 获得 Signature 类，待修改</span></span><br><span class=\"line\">\tjclass s_clazz = env-&gt;GetObjectClass(signature);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// 得到 hashCode 方法的 ID</span></span><br><span class=\"line\">\tjmethodID methodID_hc = env-&gt;GetMethodID(s_clazz, <span class=\"string\">\"hashCode\"</span>, <span class=\"string\">\"()I\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// 获得应用包的管理器，待修改</span></span><br><span class=\"line\">\t<span class=\"keyword\">int</span> hash_code = env-&gt;CallIntMethod(signature, methodID_hc);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">char</span> str[<span class=\"number\">100</span>];</span><br><span class=\"line\">\t<span class=\"built_in\">sprintf</span>(str, <span class=\"string\">\"%u\"</span>, hash_code);</span><br><span class=\"line\"></span><br><span class=\"line\">\tjstring sign = env-&gt;NewStringUTF(str);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> sign;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\">jstring <span class=\"title\">getPackageName</span><span class=\"params\">(JNIEnv* env, jobject thizz,jobject thiz)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\tjclass native_clazz = env-&gt;GetObjectClass(thiz);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// 得到 getPackageManager 方法的 ID</span></span><br><span class=\"line\">\tjmethodID methodID_func = env-&gt;GetMethodID(native_clazz,</span><br><span class=\"line\">\t\t\t<span class=\"string\">\"getPackageManager\"</span>, <span class=\"string\">\"()Landroid/content/pm/PackageManager;\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// 获得应用包的管理器</span></span><br><span class=\"line\">\tjobject package_manager = env-&gt;CallObjectMethod(thiz, methodID_func);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// 获得 PackageManager 类</span></span><br><span class=\"line\">\tjclass pm_clazz = env-&gt;GetObjectClass(package_manager);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// 得到 getPackageInfo 方法的 ID</span></span><br><span class=\"line\">\tjmethodID methodID_pm = env-&gt;GetMethodID(pm_clazz, <span class=\"string\">\"getPackageInfo\"</span>,</span><br><span class=\"line\">\t\t\t<span class=\"string\">\"(Ljava/lang/String;I)Landroid/content/pm/PackageInfo;\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//获取包名</span></span><br><span class=\"line\">\tjmethodID methodID_packagename = env-&gt;GetMethodID(native_clazz,</span><br><span class=\"line\">\t\t\t<span class=\"string\">\"getPackageName\"</span>, <span class=\"string\">\"()Ljava/lang/String;\"</span>);</span><br><span class=\"line\">\tjstring name_str = <span class=\"keyword\">static_cast</span>&lt;jstring&gt;(env-&gt;CallObjectMethod(thiz,</span><br><span class=\"line\">\t\t\tmethodID_packagename));</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> name_str;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">char</span>* <span class=\"title\">jstringTostring</span><span class=\"params\">(JNIEnv* env, jstring jstr)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">char</span>* rtn = <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">\tjclass clsstring = env-&gt;FindClass(<span class=\"string\">\"java/lang/String\"</span>);</span><br><span class=\"line\">\tjstring strencode = env-&gt;NewStringUTF(<span class=\"string\">\"utf-8\"</span>);</span><br><span class=\"line\">\tjmethodID mid = env-&gt;GetMethodID(clsstring, <span class=\"string\">\"getBytes\"</span>, <span class=\"string\">\"(Ljava/lang/String;)[B\"</span>);</span><br><span class=\"line\">\tjbyteArray barr= (jbyteArray)env-&gt;CallObjectMethod(jstr, mid, strencode);</span><br><span class=\"line\">\tjsize alen = env-&gt;GetArrayLength(barr);</span><br><span class=\"line\">\tjbyte* ba = env-&gt;GetByteArrayElements(barr, JNI_FALSE);</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (alen &gt; <span class=\"number\">0</span>)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\trtn = (<span class=\"keyword\">char</span>*)<span class=\"built_in\">malloc</span>(alen + <span class=\"number\">1</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"built_in\">memcpy</span>(rtn, ba, alen);</span><br><span class=\"line\">\t\trtn[alen] = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tenv-&gt;ReleaseByteArrayElements(barr, ba, <span class=\"number\">0</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> rtn;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\">jstring <span class=\"title\">Java_net_robinx_lib_encrypt_SecretKeyHelper_createSecretKey</span><span class=\"params\">(JNIEnv* env, jobject thizz,</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"params\">\t\tjobject thiz)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\tjstring imei = getAppendedString(env, thizz, getDeviceID(env, thizz, thiz),getSerialNumber(env, thizz, thiz));</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (LOGOPEN == <span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">\t\tLOGD(<span class=\"string\">\"imei = %s\"</span>,jstringTostring(env,imei));</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tjstring sign = getPublicKey(env, thizz, thiz);</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (LOGOPEN == <span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">\t\tLOGD(<span class=\"string\">\"sign = %s\"</span>,jstringTostring(env,sign));</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tjstring imei_sign = getAppendedString(env, thizz, imei, sign);</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (LOGOPEN == <span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">\t\tLOGD(<span class=\"string\">\"imei_sign = %s\"</span>,jstringTostring(env,imei_sign));</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tjstring package = getPackageName(env, thizz, thiz);</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (LOGOPEN == <span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">\t\tLOGD(<span class=\"string\">\"package = %s\"</span>,jstringTostring(env,package));</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tjstring imei_sign_package = getAppendedString(env, thizz, imei_sign,package);</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (LOGOPEN == <span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">\t\tLOGD(<span class=\"string\">\"imei_sign_package = %s\"</span>,jstringTostring(env,imei_sign_package));</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\timei_sign_package = getAppendedString(env, thizz, imei_sign_package, imei);</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (LOGOPEN == <span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">\t\tLOGD(<span class=\"string\">\"imei_sign_package2 = %s\"</span>,jstringTostring(env,imei_sign_package));</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\timei_sign_package = getAppendedString(env, thizz, imei_sign_package, sign);</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (LOGOPEN == <span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">\t\tLOGD(<span class=\"string\">\"imei_sign_package3 = %s\"</span>,jstringTostring(env,imei_sign_package));</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tjstring secretKey = getMD5(env, imei_sign_package);</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (LOGOPEN == <span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">\t\tLOGD(<span class=\"string\">\"secretKey = %s\"</span>,jstringTostring(env,secretKey));</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> secretKey;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h5 id=\"Application-mk文件\"><a href=\"#Application-mk文件\" class=\"headerlink\" title=\"Application.mk文件\"></a>Application.mk文件</h5><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">APP_STL := stlport_static</span><br><span class=\"line\"></span><br><span class=\"line\">APP_ABI := all</span><br><span class=\"line\">APP_PLATFORM:= android-<span class=\"number\">22</span></span><br><span class=\"line\">APP_OPTIM\t:= release</span><br></pre></td></tr></table></figure>\n<h5 id=\"Android-mk文件\"><a href=\"#Android-mk文件\" class=\"headerlink\" title=\"Android.mk文件\"></a>Android.mk文件</h5><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">LOCAL_PATH:=$(call my-dir)</span><br><span class=\"line\"></span><br><span class=\"line\">include $(CLEAR_VARS)</span><br><span class=\"line\"></span><br><span class=\"line\">LOCAL_MODULE:=secretkey</span><br><span class=\"line\"></span><br><span class=\"line\">LOCAL_SRC_FILES:=secretkey.cpp secretkey.h</span><br><span class=\"line\"></span><br><span class=\"line\">LOCAL_LDLIBS :=-llog</span><br><span class=\"line\"></span><br><span class=\"line\">include $(BUILD_SHARED_LIBRARY)</span><br></pre></td></tr></table></figure>\n<p>最终返回imei(手机IMEI)+sign(签名)+package(包名)+imei(手机IMEI)+sign(签名)的MD5结果，你可以修改cpp末尾位置，自己组合，穿插添加其他的字符串<br>做到唯一性</p>\n<p>这样整个加密流程就完毕了，用起来很方便</p>\n<h2 id=\"代码获取\"><a href=\"#代码获取\" class=\"headerlink\" title=\"代码获取\"></a>代码获取</h2><p><a href=\"https://github.com/robinxdroid/Encrypt\" target=\"_blank\" rel=\"noopener\">https://github.com/robinxdroid/Encrypt</a> </p>\n<blockquote>\n<p>转载请指明出处RobinBlog：<a href=\"http://robinx.net/2016/11/30/加密你的App/\" target=\"_blank\" rel=\"noopener\">http://robinx.net/2016/11/30/加密你的App/</a></p>\n</blockquote>\n","categories":["Android","NDK"],"tags":["NDK","加密","Conceal","encrypt"]},{"title":"AndroidStudio2.2之后NDK编译","url":"http://yoursite.com/2016/11/29/AndroidStudio2-2之后NDK编译/","content":"<p>AndroidStudio更新为2.2之后发现NDK编译出了问题，老是编译不通过，查阅相关资料后发现2.2之后NDK配置方式不太一样了</p>\n<h3 id=\"2-2之前编译方式：\"><a href=\"#2-2之前编译方式：\" class=\"headerlink\" title=\"2.2之前编译方式：\"></a>2.2之前编译方式：</h3><blockquote>\n<p>在build.gradle文件中</p>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">android &#123;</span><br><span class=\"line\">   \tcompileSdkVersion ANDROID_BUILD_SDK_VERSION as <span class=\"keyword\">int</span></span><br><span class=\"line\">   \tbuildToolsVersion ANDROID_BUILD_TOOLS_VERSION</span><br><span class=\"line\"></span><br><span class=\"line\">   \tdefaultConfig &#123;</span><br><span class=\"line\">   \t    minSdkVersion ANDROID_BUILD_MIN_SDK_VERSION as <span class=\"keyword\">int</span></span><br><span class=\"line\">    \t  targetSdkVersion ANDROID_BUILD_TARGET_SDK_VERSION as <span class=\"keyword\">int</span></span><br><span class=\"line\">     \t  versionCode VERSION_CODE as <span class=\"keyword\">int</span></span><br><span class=\"line\">      \t versionName VERSION_NAME</span><br><span class=\"line\"></span><br><span class=\"line\">      \t ndk &#123;</span><br><span class=\"line\">      \t     moduleName <span class=\"string\">\"blur\"</span></span><br><span class=\"line\">      \t     cFlags <span class=\"string\">\"-DANDROID_NDK -D_RELEASE\"</span></span><br><span class=\"line\">      \t     ldLibs <span class=\"string\">\"m\"</span>, <span class=\"string\">\"log\"</span>, <span class=\"string\">\"jnigraphics\"</span></span><br><span class=\"line\">      \t     abiFilters <span class=\"string\">\"all\"</span></span><br><span class=\"line\">     \t  &#125;</span><br><span class=\"line\">  \t    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>然后在gradle.properties文件中添加</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">android.useDeprecatedNdk=<span class=\"keyword\">true</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"2-2之后编译方式：\"><a href=\"#2-2之后编译方式：\" class=\"headerlink\" title=\"2.2之后编译方式：\"></a>2.2之后编译方式：</h3><blockquote>\n<p>在build.gradle文件中</p>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">android &#123;</span><br><span class=\"line\">   \tcompileSdkVersion ANDROID_BUILD_SDK_VERSION as <span class=\"keyword\">int</span></span><br><span class=\"line\">   \tbuildToolsVersion ANDROID_BUILD_TOOLS_VERSION</span><br><span class=\"line\"></span><br><span class=\"line\">  \t \tdefaultConfig &#123;</span><br><span class=\"line\">  \t    \t minSdkVersion ANDROID_BUILD_MIN_SDK_VERSION as <span class=\"keyword\">int</span></span><br><span class=\"line\">   \t\t targetSdkVersion ANDROID_BUILD_TARGET_SDK_VERSION as <span class=\"keyword\">int</span></span><br><span class=\"line\">   \t \t versionCode VERSION_CODE as <span class=\"keyword\">int</span></span><br><span class=\"line\">   \t \t versionName VERSION_NAME</span><br><span class=\"line\"></span><br><span class=\"line\"> \t    &#125;</span><br><span class=\"line\">  \t \tbuildTypes &#123;</span><br><span class=\"line\">  \t     \trelease &#123;</span><br><span class=\"line\">  \t         \tminifyEnabled <span class=\"keyword\">false</span></span><br><span class=\"line\">   \t     \t<span class=\"function\">proguardFiles <span class=\"title\">getDefaultProguardFile</span><span class=\"params\">(<span class=\"string\">'proguard-android.txt'</span>)</span>, 'proguard-rules.pro'</span></span><br><span class=\"line\"><span class=\"function\">    \t\t&#125;</span></span><br><span class=\"line\"><span class=\"function\"> \t  \t&#125;</span></span><br><span class=\"line\"><span class=\"function\"></span></span><br><span class=\"line\"><span class=\"function\">  \t \texternalNativeBuild </span>&#123;</span><br><span class=\"line\">  \t     \tndkBuild &#123;</span><br><span class=\"line\">    \t    \t<span class=\"function\">path <span class=\"title\">file</span><span class=\"params\">(<span class=\"string\">\"src/main/jni/Android.mk\"</span>)</span></span></span><br><span class=\"line\"><span class=\"function\">    \t \t&#125;</span></span><br><span class=\"line\"><span class=\"function\"> \t  \t&#125;</span></span><br><span class=\"line\"><span class=\"function\"></span></span><br><span class=\"line\"><span class=\"function\">&#125;</span></span><br></pre></td></tr></table></figure>\n<p>然后导航——&gt;Build——&gt;Make Project即可，会在目录中多出来.externalNativeBuild文件夹</p>\n<blockquote>\n<p>转载请指明出处RobinBlog：<a href=\"http://robinx.net/2016/11/29/AndroidStudio2-2之后NDK编译/\" target=\"_blank\" rel=\"noopener\">http://robinx.net/2016/11/29/AndroidStudio2-2之后NDK编译/</a></p>\n</blockquote>\n","categories":["Android","NDK"],"tags":["NDK","AndroidStudio"]},{"title":"Hexo搭建个人Blog","url":"http://yoursite.com/2016/11/28/Hexo搭建个人Blog/","content":"<h2 id=\"引言\"><a href=\"#引言\" class=\"headerlink\" title=\"引言\"></a>引言</h2><p>Hexo搭建个人博客</p>\n<h2 id=\"环境配置\"><a href=\"#环境配置\" class=\"headerlink\" title=\"环境配置\"></a>环境配置</h2><h3 id=\"安装Node\"><a href=\"#安装Node\" class=\"headerlink\" title=\"安装Node\"></a>安装Node</h3><p><a href=\"https://nodejs.org/en/\" target=\"_blank\" rel=\"noopener\">到Node.js的官网下载最新版本</a></p>\n<h3 id=\"安装git\"><a href=\"#安装git\" class=\"headerlink\" title=\"安装git\"></a>安装git</h3><p>下载安装<a href=\"https://git-scm.com/\" target=\"_blank\" rel=\"noopener\">git</a>,附基本<a href=\"https://git-scm.com/book/zh/v1\" target=\"_blank\" rel=\"noopener\">使用教程</a></p>\n<h3 id=\"安装Sublime-Text\"><a href=\"#安装Sublime-Text\" class=\"headerlink\" title=\"安装Sublime Text\"></a>安装Sublime Text</h3><p>下载安装<a href=\"http://www.sublimetext.com/3\" target=\"_blank\" rel=\"noopener\">Sunlime Text</a>文本编辑器,其他的编辑器也可以，个人推荐</p>\n<h3 id=\"Github账号注册\"><a href=\"#Github账号注册\" class=\"headerlink\" title=\"Github账号注册\"></a>Github账号注册</h3><ul>\n<li>首先去<a href=\"https://github.com/\" target=\"_blank\" rel=\"noopener\">Github</a>注册账号</li>\n<li>创建仓库 New repository 在Repository name中必须为你的<code>[your_user_name].github.io</code></li>\n<li>创建SSH Key<br><br>创建你的用户名与密码:<br><br><code>git config --global user.email &quot;your email&quot;</code><br><br><code>git config --global user.name &quot;your name&quot;</code><br><br>生成密钥：<br><br><code>ssh-keygen -t rsa -C &quot;your email&quot;</code><br><br>最后根据提示就能生成SSH Key了<a href=\"https://help.github.com/articles/connecting-to-github-with-ssh/\" target=\"_blank\" rel=\"noopener\">教程参考</a><br></li>\n<li>进入Settings中的SSH Keys 添加密匙</li>\n</ul>\n<h2 id=\"Hexo安装和配置\"><a href=\"#Hexo安装和配置\" class=\"headerlink\" title=\"Hexo安装和配置\"></a>Hexo安装和配置</h2><ol>\n<li>新建一个文件夹，例如blog 。</li>\n<li>进入blog文件夹，右键点击<code>Git Bash Here</code></li>\n<li><p>安装Hexo<br><br><code>$ npm install hexo-cli -g</code></p>\n</li>\n<li><p>初始化blog文件夹<br><br><code>$ hexo init</code></p>\n</li>\n<li><p>安装依赖和插件<br><br><code>$ npm install</code></p>\n</li>\n<li><p>启动服务器进行本地预览<br><br><code>$ hexo server</code></p>\n</li>\n<li><p>当看到INFO  Hexo is running at <a href=\"http://0.0.0.0:4000/\" target=\"_blank\" rel=\"noopener\">http://0.0.0.0:4000/</a>. Press Ctrl+C to stop.时就说明我们已经搭建起本地的hexo博客了，<br>在浏览器中打开 <a href=\"http://localhost:4000\" target=\"_blank\" rel=\"noopener\">http://localhost:4000</a> 注意：不要打开提示的0.0.0.0:4000。， 成功的话即可看到博客页面，至此安装就完成了。</p>\n</li>\n<li><p>然后回到命令窗口按Ctrl+C停止服务（有时要按两次Ctrl+C，因为有时Git Bash认为当前在进行复制操作），直到出现 “$”标志就结束了。 然后关闭Git Bash.</p>\n</li>\n</ol>\n<h2 id=\"Hexo常用命令\"><a href=\"#Hexo常用命令\" class=\"headerlink\" title=\"Hexo常用命令\"></a>Hexo常用命令</h2><p>执行命令需要Git当前处于blog文件夹根目录下。</p>\n<ul>\n<li><p>开启本地服务<br><br><code>hexo server</code></p>\n</li>\n<li><p>新建文件<br><br><code>hexo new 新文章名称</code></p>\n</li>\n<li><p>清除缓存文件 (db.json) 和已生成的静态文件 (public)<br><br><code>hexo clean</code></p>\n</li>\n<li><p>生成静态页面<br><br><code>hexo gengerate</code></p>\n</li>\n<li><p>部署网站。部署网站前，需要预先生成静态文件<br><br><code>hexo deploy</code></p>\n</li>\n</ul>\n<h3 id=\"写博客一般步骤\"><a href=\"#写博客一般步骤\" class=\"headerlink\" title=\"写博客一般步骤\"></a>写博客一般步骤</h3><ol>\n<li>新建文章<br><br><code>hexo new &quot;PostName&quot;</code></li>\n<li>部署：<br><br><code>hexo clean</code> // 清理<br><br><code>hexo generate</code> // 生成<br><br><code>hexo deploy</code> // 部署<br><br>或者简写：<br><br><code>hexo c</code><br><br><code>hexo g</code><br><br><code>hexo d</code><br></li>\n<li>部署完成后打开浏览器输入http://[your_user_name].github.io 就是前面github中建仓库的名字。<br>到此所用的安装与配置已经完成</li>\n</ol>\n<h2 id=\"下载主题\"><a href=\"#下载主题\" class=\"headerlink\" title=\"下载主题\"></a>下载主题</h2><p>这里有很多<a href=\"https://github.com/hexojs/hexo/wiki/Themes\" target=\"_blank\" rel=\"noopener\">Hexo主题</a>，可自行下载<br><br>本博客使用主题为<a href=\"https://github.com/forsigner/fexo\" target=\"_blank\" rel=\"noopener\">Fexo</a>,感兴趣的可免去寻找</p>\n<h2 id=\"评论框\"><a href=\"#评论框\" class=\"headerlink\" title=\"评论框\"></a>评论框</h2><p>评论有Disqus与多说，在国内推荐多说，Disqus是面向全球的</p>\n<h3 id=\"Disqus\"><a href=\"#Disqus\" class=\"headerlink\" title=\"Disqus\"></a>Disqus</h3><p><a href=\"https://disqus.com/\" target=\"_blank\" rel=\"noopener\">Disqus</a>注册Disqus帐号</p>\n<h3 id=\"多说\"><a href=\"#多说\" class=\"headerlink\" title=\"多说\"></a>多说</h3><p><a href=\"http://duoshuo.com/\" target=\"_blank\" rel=\"noopener\">多说</a>可以支持QQ 微信等登录，登录后注册域名<br>进入hexo目录打开_config.yml文件找到</p>\n<p> <code>disqus_shortname: [域名]</code><br><br> <code>duoshuo_shortname: [域名]</code></p>\n<p>Disqus也是一样</p>\n<h2 id=\"统计\"><a href=\"#统计\" class=\"headerlink\" title=\"统计\"></a>统计</h2><p>这里只说百度统计</p>\n<p>进入<a href=\"http://tongji.baidu.com/web/welcome/login\" target=\"_blank\" rel=\"noopener\">百度统计</a>注册登录帐号<br>进去网站中心的代码获取 把获取的代码放入 hexo/themes/fexo/layout/_partial中baidu-analytics.ejs文件</p>\n<pre><code>&lt;% if (theme.baidu_analytics){ %&gt;\n  &lt;script type=&quot;text/javascript&quot;&gt;\n  //获取的代码\n   &lt;/script&gt;\n&lt;% } %&gt;\n</code></pre><h2 id=\"写文章\"><a href=\"#写文章\" class=\"headerlink\" title=\"写文章\"></a>写文章</h2><p>进入hexo／source／_posts 找到相关文章的.md 进行编写,hexo写文章是使用Markdown编写文章</p>\n<h2 id=\"删除文章\"><a href=\"#删除文章\" class=\"headerlink\" title=\"删除文章\"></a>删除文章</h2><p>删除文章只要删除对应的.md文件就行</p>\n<h2 id=\"小结\"><a href=\"#小结\" class=\"headerlink\" title=\"小结\"></a>小结</h2><p>执行以上步骤就可以搭建博客完成。</p>\n<blockquote>\n<p>转载请指明出处RobinBlog：<a href=\"http://robinx.net/2016/11/28/Hexo搭建个人Blog/\" target=\"_blank\" rel=\"noopener\">http://robinx.net/2016/11/28/Hexo搭建个人Blog/</a></p>\n</blockquote>\n","categories":["Hexo"],"tags":["Hexo","Blog"]},{"title":"Hello World","url":"http://yoursite.com/2016/11/27/hello-world/","content":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"noopener\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"noopener\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"noopener\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"noopener\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"noopener\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"noopener\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"noopener\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"noopener\">Deployment</a></p>\n","categories":[],"tags":[]},{"title":"about","url":"http://yoursite.com/about/index.html","content":"","categories":[],"tags":[]},{"title":"category","url":"http://yoursite.com/category/index.html","content":"","categories":[],"tags":[]},{"title":"","url":"http://yoursite.com/css/personal-style.css","content":"html.page-home {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  /*background-image: url('/images/index_bg/index_bg_07.jpg');*/\n  /*background-color: transparent;*/\n  background-size: cover;\n  background-position: center center;\n  background-repeat: no-repeat;\n\n  /*background: linear-gradient( #1abc9c, transparent), linear-gradient( 90deg, skyblue, transparent), linear-gradient( -90deg, coral, transparent);*/\n  /*background-blend-mode: screen;*/\n\n  background: linear-gradient(to left, #5f2c82, #49a09d);\n}","categories":[],"tags":[]},{"title":"project","url":"http://yoursite.com/project/index.html","content":"","categories":[],"tags":[]},{"title":"tag","url":"http://yoursite.com/tag/index.html","content":"","categories":[],"tags":[]},{"title":"search","url":"http://yoursite.com/search/index.html","content":"","categories":[],"tags":[]},{"title":"link","url":"http://yoursite.com/link/index.html","content":"","categories":[],"tags":[]}]